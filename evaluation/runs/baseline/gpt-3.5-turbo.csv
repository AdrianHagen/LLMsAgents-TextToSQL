question_id,database,is_correct,difficulty,generated_query,ground_truth_results,generated_results,feedback,execution_time
479,card_games,False,moderate,"SELECT COUNT(*) 
FROM cards 
WHERE convertedManaCost > 5 AND power = 'Unknown' AND setCode = 'CSP'","[(6,)]","[(0,)]",Query results mismatch,0.0168708749988582
1057,european_football_2,False,moderate,,,,Query generation failed,
1367,student_club,False,simple,"SELECT college, COUNT(*) AS Total_Members 
FROM major 
GROUP BY college 
ORDER BY Total_Members DESC 
LIMIT 1","[('College of Education & Human Services',)]","[('College of Agriculture and Applied Sciences', 36)]",Query results mismatch,8.137497934512794e-05
298,toxicology,False,moderate,"SELECT COUNT(DISTINCT molecule_id) AS total_molecules FROM atom WHERE element = 'h'

SELECT COUNT(DISTINCT molecule_id) AS molecules_with_carcinogenic_compounds FROM atom WHERE element = 'h' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')",,,"Error executing query: near ""SELECT"": syntax error",
651,codebase_community,False,simple,"SELECT p.title 
FROM posts p 
JOIN posts r ON p.id = r.id 
WHERE r.title = 'How to tell if something happened in a data set which monitors a value over time'","[('Time series for count data, with counts < 20',)]","[('How to tell if something happened in a data set which monitors a value over time',)]",Query results mismatch,0.036056999990250915
1145,european_football_2,False,simple,,,,Query generation failed,
1165,thrombosis_prediction,False,moderate,"SELECT MIN(strftime('%Y', 'now') - strftime('%Y', Birthday)) AS youngest_age, MAX(strftime('%Y', 'now') - strftime('%Y', Birthday)) AS oldest_age 
FROM Patient 
WHERE ID IN (SELECT ID FROM Laboratory WHERE TG IS NOT NULL)","[(63,)]","[(35, 107)]",Query results mismatch,0.0009210419957526028
494,card_games,False,challenging,"SELECT c.name, r.text 
FROM cards c 
JOIN rulings r ON c.uuid = r.uuid 
WHERE c.artist = 'Jim Pavelec'","[('If Oubliette leaves the battlefield before its triggered ability resolves, the target creature won’t be phased out or tapped.', 'NO'), ('While a permanent is phased out, it’s treated as though it doesn’t exist. It can’t be the target of spells or abilities, its static abilities have no effect on the game, its triggered abilities can’t trigger, it can’t attack or block, and so on.', 'NO'), ('Phasing out doesn’t cause any “leaves the battlefield” abilities to trigger. Similarly, phasing in won’t cause any “enters the battlefield” abilities to trigger.', 'NO'), ('Any one-shot effects that are waiting “until [this] leaves the battlefield,” such as that of Kitesail Freebooter, won’t happen when a permanent phases out.', 'NO'), ('Any continuous effects with a “for as long as” duration such as that of Awakener Druid ignore phased-out objects. Any such effects will expire if their conditions are no longer met after ignoring the phased-out objects.', 'NO'), ('Each Aura and Equipment attached to a permanent that’s phasing out also phases out. They will phase in with that permanent and still be attached to it. Similarly, permanents that phase out with counters phase in with those counters.', 'NO'), ('Choices made for permanents as they entered the battlefield are remembered when they phase in.', 'NO'), ('A creature phased out by Oubliette doesn’t phase in during its controller’s untap step as normal. Rather, it phases in immediately after Oubliette leaves the battlefield.', 'NO'), ('Abilities that trigger when a creature becomes tapped won’t trigger when the creature phases in tapped.', 'NO'), ('If a nonbasic land has an ability that causes it to enter the battlefield tapped, it will lose that ability before it applies. The same is also true of any other abilities that modify how a land enters the battlefield or apply “as” a land enters the battl', 'NO'), ('Nonbasic lands will lose any other land types and abilities they had. They will gain the land type Mountain and gain the ability “{T}: Add {R}.”', 'NO'), ('This effect doesn’t affect names or supertypes. It won’t turn any land into a basic land or remove the legendary supertype from a legendary land, and the lands won’t be named “Mountain.”', 'NO'), ('If a nonbasic land has an ability that triggers “when” it enters the battlefield, it will lose that ability before it triggers.', 'NO'), ('It can only make itself into a creature during combat phases and therefore it is difficult to get Auras placed on it.', 'NO'), ('A delayed triggered ability that refers to Jade Statue still affects it even if it’s no longer a creature. For example, if Jade Statue blocks the Kashi-Tribe Warriors (“Whenever Kashi-Tribe Warriors deals combat damage to a creature, tap that creature and', 'NO'), ('If Jade Statue’s ability has been activated, abilities that trigger “at end of combat” will see Jade Statue as an artifact creature.', 'NO'), ('A noncreature permanent that turns into a creature can attack, and its {T} abilities can be activated, only if its controller has continuously controlled that permanent since the beginning of their most recent turn. It doesn’t matter how long the permanen', 'NO'), ('If Jade Statue is animated by some other effect, you get an artifact creature with whatever power, toughness, and creature types (if any) are specified by that effect. If you subsequently use Jade Statue’s ability during combat, it will become 3/6 and gai', 'NO'), ('Each other creature copies the printed values of the targeted creature, plus any copy effects that have been applied to that creature. They won’t copy other effects that have changed the targeted creature’s power, toughness, types, color, or so on. They a', 'NO'), ('If the targeted creature is itself copying a creature, each other creature will become whatever it’s copying, as modified by that copy effect. For example, if you target a Cemetery Puca that’s copying a Grizzly Bears (a 2/2 creature with no abilities), ea', 'NO'), ('This effect can cause each other creature to stop being a creature. For example, if you target an animated Mutavault (a land with an activated ability that turns it into a creature), only the printed wording will be copied — the “becomes a creature” effec', 'NO'), ('Noncopy effects that have already applied to the other creatures will continue to apply to them. For example, if Giant Growth had given one of them +3/+3 earlier in the turn, then Mirrorweave made it a copy of Grizzly Bears, it will be a 5/5 Grizzly Bears', 'NO'), ('If the targeted creature is a token, each other creature copies the original characteristics of that token as stated by the effect that put it onto the battlefield. Those creatures don’t become tokens.', 'NO'), ('As the turn ends, the other creatures revert to what they were before. If two Mirrorweaves are cast on the same turn, they’ll both wear off at the same time.', 'NO'), ('Each other creature copies the printed values of the targeted creature, plus any copy effects that have been applied to that creature. They won’t copy other effects that have changed the targeted creature’s power, toughness, types, color, or so on. They a', 'NO'), ('If the targeted creature is itself copying a creature, each other creature will become whatever it’s copying, as modified by that copy effect. For example, if you target a Cemetery Puca that’s copying a Grizzly Bears (a 2/2 creature with no abilities), ea', 'NO'), ('This effect can cause each other creature to stop being a creature. For example, if you target an animated Mutavault (a land with an activated ability that turns it into a creature), only the printed wording will be copied — the “becomes a creature” effec', 'NO'), ('Noncopy effects that have already applied to the other creatures will continue to apply to them. For example, if Giant Growth had given one of them +3/+3 earlier in the turn, then Mirrorweave made it a copy of Grizzly Bears, it will be a 5/5 Grizzly Bears', 'NO'), ('If the targeted creature is a token, each other creature copies the original characteristics of that token as stated by the effect that put it onto the battlefield. Those creatures don’t become tokens.', 'NO'), ('As the turn ends, the other creatures revert to what they were before. If two Mirrorweaves are cast on the same turn, they’ll both wear off at the same time.', 'NO'), ('Panglacial Wurm’s ability works only while you’re searching your own library. The effect that caused you to search needs to say “search” and “library,” and you need to be looking through your own library for this to work. Examples of effects that let you ', 'NO'), ('Casting Panglacial Wurm while searching your library follows all the normal rules for casting a creature spell, except for timing (casting the Wurm this way always occurs during the resolution of another spell or ability) and what zone the Wurm is being c', 'NO'), ('After you cast Panglacial Wurm, you pick up the search effect where you left off. When the search effect finishes resolving, the active player gets priority with Panglacial Wurm on the stack. Any abilities that triggered when the spell was cast are put on', 'NO'), ('If you have enough mana, you can cast multiple Panglacial Wurms during a single search effect.', 'NO'), ('A Panglacial Wurm that you cast while searching your library can’t be found by the search effect.', 'NO'), ('If you want to cast Panglacial Wurm while searching your library, you must do so before you find any cards with the search effect.', 'NO'), ('While searching your library, you must keep your library in the same order until you shuffle it. This order could matter if you tap Millikin for mana, for example, to pay for a Panglacial Wurm you cast from your library.', 'NO'), ('Casting a card by using its retrace ability works just like casting any other spell, with two exceptions: You’re casting it from your graveyard rather than your hand, and you must discard a land card in addition to any other costs.', 'NO'), ('A retrace card cast from your graveyard follows the normal timing rules for its card type.', 'NO'), ('When a retrace card you cast from your graveyard resolves, fails to resolve, or is countered, it’s put back into your graveyard. You may use the retrace ability to cast it again.', 'NO'), ('If the active player casts a spell that has retrace, that player may cast that card again after it resolves, before another player can remove the card from the graveyard. The active player has priority after the spell resolves, so they can immediately cas', 'NO'), ('Waves of Aggression untaps all creatures that attacked this turn, not just those that attacked during the most recent combat phase.', 'NO'), ('If it’s somehow not a main phase when Waves of Aggression resolves, all it does is untap all creatures that attacked that turn. No new phases are created.', 'NO'), ('Panglacial Wurm’s ability works only while you’re searching your own library. The effect that caused you to search needs to say “search” and “library,” and you need to be looking through your own library for this to work. Examples of effects that let you ', 'NO'), ('Casting Panglacial Wurm while searching your library follows all the normal rules for casting a creature spell, except for timing (casting the Wurm this way always occurs during the resolution of another spell or ability) and what zone the Wurm is being c', 'NO'), ('After you cast Panglacial Wurm, you pick up the search effect where you left off. When the search effect finishes resolving, the active player gets priority with Panglacial Wurm on the stack. Any abilities that triggered when the spell was cast are put on', 'NO'), ('If you have enough mana, you can cast multiple Panglacial Wurms during a single search effect.', 'NO'), ('A Panglacial Wurm that you cast while searching your library can’t be found by the search effect.', 'NO'), ('If you want to cast Panglacial Wurm while searching your library, you must do so before you find any cards with the search effect.', 'NO'), ('While searching your library, you must keep your library in the same order until you shuffle it. This order could matter if you tap Millikin for mana, for example, to pay for a Panglacial Wurm you cast from your library.', 'NO'), ('Examples of creature types include Sliver, Goblin, and Soldier. Creature types appear after the dash on the type line of creatures.', 'NO'), ('The second ability checks how many creatures have been exiled with Colfenor’s Urn over the course of the entire game.', 'NO'), ('The second ability forces you to sacrifice Colfenor’s Urn. If the ability triggers and the Urn isn’t sacrificed (because it left the battlefield or changed controllers, for example), the exiled cards won’t be returned to the battlefield.', 'NO'), ('The first ability triggers when a token creature with toughness 4 or greater is put into your graveyard. However, that token will cease to exist before Colfenor’s Plans can exile it.', 'NO'), ('Examples of creature types include Sliver, Goblin, and Soldier. Creature types appear after the dash on the type line of creatures.', 'NO'), ('The opponent you clash with doesn’t have to be the player targeted by Pulling Teeth.', 'NO'), ('Kinship is an ability word that indicates a group of similar triggered abilities that appear on _Morningtide_ creatures. It doesn’t have any special rules associated with it.', 'NO'), ('The first two sentences of every kinship ability are the same (except for the creature’s name). Only the last sentence varies from one kinship ability to the next.', 'NO'), ('You don’t have to reveal the top card of your library, even if it shares a creature type with the creature that has the kinship ability.', 'NO'), ('After the kinship ability finishes resolving, the card you looked at remains on top of your library.', 'NO'), ('If you have multiple creatures with kinship abilities, each triggers and resolves separately. You’ll look at the same card for each one, unless you have some method of shuffling your library or moving that card to a different zone.', 'NO'), ('If the top card of your library is already revealed (due to Magus of the Future, for example), you still have the option to reveal it or not as part of a kinship ability’s effect.', 'NO'), ('Reins of the Vinesteed’s last ability triggers if it and the creature it’s enchanting are both put into the graveyard at the same time, or if the creature it’s enchanting is put into the graveyard but Reins of the Vinesteed isn’t. (In the second case, Rei', 'NO'), ('As the triggered ability resolves, check which creatures on the battlefield have any of the creature types that the previously enchanted creature had as it left the battlefield. If that creature was a Goblin Rogue, for example, Reins of the Vinesteed can ', 'NO'), ('This triggered ability doesn’t target a creature. You may return Reins of the Vinesteed to the battlefield attached to a creature that has shroud, for example. However, the creature must be able to be legally enchanted by Reins of the Vinesteed. You can’t', 'NO'), ('You can choose to return Reins of the Vinesteed to the battlefield attached to a creature another player controls. You still control Reins of the Vinesteed. When that creature is put into a graveyard, the ability of Reins of the Vinesteed will trigger aga', 'NO'), ('The effect doesn’t wear off until just before your next untap step (even if an effect will cause that untap step to be skipped).', 'NO'), ('This ability applies no matter who or what the damage would be dealt to: a creature, a player, or a planeswalker. It also doesn’t matter who controls the source.', 'NO'), ('If multiple effects modify how damage will be dealt, the player who would be dealt damage or the controller of the permanent that would be dealt damage chooses the order to apply the effects. For example, Mending Hands says, “Prevent the next 4 damage tha', 'NO'), ('If a spell or ability divides damage among multiple recipients (such as Fireball does), the damage is divided before this effect doubles it.', 'NO'), ('A plane card is treated as if its text box included “When you roll {PW}, put this card on the bottom of its owner’s planar deck face down, then move the top card of your planar deck off that planar deck and turn it face up.” This is called the “planeswalk', 'NO'), ('A face-up plane card that’s turned face down becomes a new object with no relation to its previous existence. In particular, it loses all counters it may have had.', 'NO'), ('The controller of a face-up plane card is the player designated as the “planar controller.” Normally, the planar controller is whoever the active player is. However, if the current planar controller would leave the game, instead the next player in turn or', 'NO'), ('If an ability of a plane refers to “you,” it’s referring to whoever the plane’s controller is at the time, not to the player that started the game with that plane card in their deck. Many abilities of plane cards affect all players, while many others affe', 'NO'), ('Stronghold Furnace’s first ability interacts with all damage, not just combat damage. Notably, it doubles the damage from its own chaos ability.', 'NO'), ('If multiple effects modify how damage will be dealt, the player who would be dealt damage or the controller of the creature that would be dealt damage chooses the order to apply the effects. For example, Mending Hands says, “Prevent the next 4 damage that', 'NO'), ('If a spell or ability divides damage among multiple recipients (such as Pyrotechnics does), the damage is divided before Stronghold Furnace’s effect doubles it. The same is true for combat damage.', 'NO'), ('A plane card is treated as if its text box included “When you roll {PW}, put this card on the bottom of its owner’s planar deck face down, then move the top card of your planar deck off that planar deck and turn it face up.” This is called the “planeswalk', 'NO'), ('A face-up plane card that’s turned face down becomes a new object with no relation to its previous existence. In particular, it loses all counters it may have had.', 'NO'), ('The controller of a face-up plane card is the player designated as the “planar controller.” Normally, the planar controller is whoever the active player is. However, if the current planar controller would leave the game, instead the next player in turn or', 'NO'), ('If an ability of a plane refers to “you,” it’s referring to whoever the plane’s controller is at the time, not to the player that started the game with that plane card in their deck. Many abilities of plane cards affect all players, while many others affe', 'NO'), ('Stronghold Furnace’s first ability interacts with all damage, not just combat damage. Notably, it doubles the damage from its own chaos ability.', 'NO'), ('If multiple effects modify how damage will be dealt, the player who would be dealt damage or the controller of the creature that would be dealt damage chooses the order to apply the effects. For example, Mending Hands says, “Prevent the next 4 damage that', 'NO'), ('If a spell or ability divides damage among multiple recipients (such as Pyrotechnics does), the damage is divided before Stronghold Furnace’s effect doubles it. The same is true for combat damage.', 'NO'), ('The targeted player will discard two cards even if some or all of Blightning’s damage is prevented or redirected.', 'NO'), ('Volcanic Fallout can be targeted by spells that try to counter it (such as Countersquall). Those spells will still resolve, but the part of their effect that would counter Volcanic Fallout won’t do anything. Any other effects those spells have will work a', 'NO'), ('If Oubliette leaves the battlefield before its triggered ability resolves, the target creature won’t be phased out or tapped.', 'NO'), ('While a permanent is phased out, it’s treated as though it doesn’t exist. It can’t be the target of spells or abilities, its static abilities have no effect on the game, its triggered abilities can’t trigger, it can’t attack or block, and so on.', 'NO'), ('Phasing out doesn’t cause any “leaves the battlefield” abilities to trigger. Similarly, phasing in won’t cause any “enters the battlefield” abilities to trigger.', 'NO'), ('Any one-shot effects that are waiting “until [this] leaves the battlefield,” such as that of Kitesail Freebooter, won’t happen when a permanent phases out.', 'NO'), ('Any continuous effects with a “for as long as” duration such as that of Awakener Druid ignore phased-out objects. Any such effects will expire if their conditions are no longer met after ignoring the phased-out objects.', 'NO'), ('Each Aura and Equipment attached to a permanent that’s phasing out also phases out. They will phase in with that permanent and still be attached to it. Similarly, permanents that phase out with counters phase in with those counters.', 'NO'), ('Choices made for permanents as they entered the battlefield are remembered when they phase in.', 'NO'), ('A creature phased out by Oubliette doesn’t phase in during its controller’s untap step as normal. Rather, it phases in immediately after Oubliette leaves the battlefield.', 'NO'), ('Abilities that trigger when a creature becomes tapped won’t trigger when the creature phases in tapped.', 'NO'), ('Panglacial Wurm’s ability works only while you’re searching your own library. The effect that caused you to search needs to say “search” and “library,” and you need to be looking through your own library for this to work. Examples of effects that let you ', 'NO'), ('Casting Panglacial Wurm while searching your library follows all the normal rules for casting a creature spell, except for timing (casting the Wurm this way always occurs during the resolution of another spell or ability) and what zone the Wurm is being c', 'NO'), ('After you cast Panglacial Wurm, you pick up the search effect where you left off. When the search effect finishes resolving, the active player gets priority with Panglacial Wurm on the stack. Any abilities that triggered when the spell was cast are put on', 'NO'), ('If you have enough mana, you can cast multiple Panglacial Wurms during a single search effect.', 'NO'), ('A Panglacial Wurm that you cast while searching your library can’t be found by the search effect.', 'NO'), ('If you want to cast Panglacial Wurm while searching your library, you must do so before you find any cards with the search effect.', 'NO'), ('While searching your library, you must keep your library in the same order until you shuffle it. This order could matter if you tap Millikin for mana, for example, to pay for a Panglacial Wurm you cast from your library.', 'NO'), ('The targeted player will discard two cards even if some or all of Blightning’s damage is prevented or redirected.', 'NO'), ('Volcanic Fallout can be targeted by spells that try to counter it (such as Countersquall). Those spells will still resolve, but the part of their effect that would counter Volcanic Fallout won’t do anything. Any other effects those spells have will work a', 'NO'), ('Each other creature copies the printed values of the targeted creature, plus any copy effects that have been applied to that creature. They won’t copy other effects that have changed the targeted creature’s power, toughness, types, color, or so on. They a', 'NO'), ('If the targeted creature is itself copying a creature, each other creature will become whatever it’s copying, as modified by that copy effect. For example, if you target a Cemetery Puca that’s copying a Grizzly Bears (a 2/2 creature with no abilities), ea', 'NO'), ('This effect can cause each other creature to stop being a creature. For example, if you target an animated Mutavault (a land with an activated ability that turns it into a creature), only the printed wording will be copied — the “becomes a creature” effec', 'NO'), ('Noncopy effects that have already applied to the other creatures will continue to apply to them. For example, if Giant Growth had given one of them +3/+3 earlier in the turn, then Mirrorweave made it a copy of Grizzly Bears, it will be a 5/5 Grizzly Bears', 'NO'), ('If the targeted creature is a token, each other creature copies the original characteristics of that token as stated by the effect that put it onto the battlefield. Those creatures don’t become tokens.', 'NO'), ('As the turn ends, the other creatures revert to what they were before. If two Mirrorweaves are cast on the same turn, they’ll both wear off at the same time.', 'NO'), ('If you use conspire to copy Traitor’s Roar, but you don’t change its target, the copy will resolve just fine but the original doesn’t resolve. That’s because the copy will resolve first, and as part of its resolution, it will tap the targeted creature. Th', 'NO'), ('The two revealed cards stay revealed until the ability resolves. If one of them is played, is discarded, or otherwise leaves your hand, the ability will still resolve as normal.', 'NO'), ('Colorless is not a color. You can’t reveal two colorless cards from your hand to activate this ability because those cards don’t share a color with one another.', 'NO')]","[('Oubliette', 'If Oubliette leaves the battlefield before its triggered ability resolves, the target creature won’t be phased out or tapped.'), ('Oubliette', 'While a permanent is phased out, it’s treated as though it doesn’t exist. It can’t be the target of spells or abilities, its static abilities have no effect on the game, its triggered abilities can’t trigger, it can’t attack or block, and so on.'), ('Oubliette', 'Phasing out doesn’t cause any “leaves the battlefield” abilities to trigger. Similarly, phasing in won’t cause any “enters the battlefield” abilities to trigger.'), ('Oubliette', 'Any one-shot effects that are waiting “until [this] leaves the battlefield,” such as that of Kitesail Freebooter, won’t happen when a permanent phases out.'), ('Oubliette', 'Any continuous effects with a “for as long as” duration such as that of Awakener Druid ignore phased-out objects. Any such effects will expire if their conditions are no longer met after ignoring the phased-out objects.'), ('Oubliette', 'Each Aura and Equipment attached to a permanent that’s phasing out also phases out. They will phase in with that permanent and still be attached to it. Similarly, permanents that phase out with counters phase in with those counters.'), ('Oubliette', 'Choices made for permanents as they entered the battlefield are remembered when they phase in.'), ('Oubliette', 'A creature phased out by Oubliette doesn’t phase in during its controller’s untap step as normal. Rather, it phases in immediately after Oubliette leaves the battlefield.'), ('Oubliette', 'Abilities that trigger when a creature becomes tapped won’t trigger when the creature phases in tapped.'), ('Blood Moon', 'If a nonbasic land has an ability that causes it to enter the battlefield tapped, it will lose that ability before it applies. The same is also true of any other abilities that modify how a land enters the battlefield or apply “as” a land enters the battl'), ('Blood Moon', 'Nonbasic lands will lose any other land types and abilities they had. They will gain the land type Mountain and gain the ability “{T}: Add {R}.”'), ('Blood Moon', 'This effect doesn’t affect names or supertypes. It won’t turn any land into a basic land or remove the legendary supertype from a legendary land, and the lands won’t be named “Mountain.”'), ('Blood Moon', 'If a nonbasic land has an ability that triggers “when” it enters the battlefield, it will lose that ability before it triggers.'), ('Jade Statue', 'It can only make itself into a creature during combat phases and therefore it is difficult to get Auras placed on it.'), ('Jade Statue', 'A delayed triggered ability that refers to Jade Statue still affects it even if it’s no longer a creature. For example, if Jade Statue blocks the Kashi-Tribe Warriors (“Whenever Kashi-Tribe Warriors deals combat damage to a creature, tap that creature and'), ('Jade Statue', 'If Jade Statue’s ability has been activated, abilities that trigger “at end of combat” will see Jade Statue as an artifact creature.'), ('Jade Statue', 'A noncreature permanent that turns into a creature can attack, and its {T} abilities can be activated, only if its controller has continuously controlled that permanent since the beginning of their most recent turn. It doesn’t matter how long the permanen'), ('Jade Statue', 'If Jade Statue is animated by some other effect, you get an artifact creature with whatever power, toughness, and creature types (if any) are specified by that effect. If you subsequently use Jade Statue’s ability during combat, it will become 3/6 and gai'), ('Mirrorweave', 'Each other creature copies the printed values of the targeted creature, plus any copy effects that have been applied to that creature. They won’t copy other effects that have changed the targeted creature’s power, toughness, types, color, or so on. They a'), ('Mirrorweave', 'If the targeted creature is itself copying a creature, each other creature will become whatever it’s copying, as modified by that copy effect. For example, if you target a Cemetery Puca that’s copying a Grizzly Bears (a 2/2 creature with no abilities), ea'), ('Mirrorweave', 'This effect can cause each other creature to stop being a creature. For example, if you target an animated Mutavault (a land with an activated ability that turns it into a creature), only the printed wording will be copied — the “becomes a creature” effec'), ('Mirrorweave', 'Noncopy effects that have already applied to the other creatures will continue to apply to them. For example, if Giant Growth had given one of them +3/+3 earlier in the turn, then Mirrorweave made it a copy of Grizzly Bears, it will be a 5/5 Grizzly Bears'), ('Mirrorweave', 'If the targeted creature is a token, each other creature copies the original characteristics of that token as stated by the effect that put it onto the battlefield. Those creatures don’t become tokens.'), ('Mirrorweave', 'As the turn ends, the other creatures revert to what they were before. If two Mirrorweaves are cast on the same turn, they’ll both wear off at the same time.'), ('Mirrorweave', 'Each other creature copies the printed values of the targeted creature, plus any copy effects that have been applied to that creature. They won’t copy other effects that have changed the targeted creature’s power, toughness, types, color, or so on. They a'), ('Mirrorweave', 'If the targeted creature is itself copying a creature, each other creature will become whatever it’s copying, as modified by that copy effect. For example, if you target a Cemetery Puca that’s copying a Grizzly Bears (a 2/2 creature with no abilities), ea'), ('Mirrorweave', 'This effect can cause each other creature to stop being a creature. For example, if you target an animated Mutavault (a land with an activated ability that turns it into a creature), only the printed wording will be copied — the “becomes a creature” effec'), ('Mirrorweave', 'Noncopy effects that have already applied to the other creatures will continue to apply to them. For example, if Giant Growth had given one of them +3/+3 earlier in the turn, then Mirrorweave made it a copy of Grizzly Bears, it will be a 5/5 Grizzly Bears'), ('Mirrorweave', 'If the targeted creature is a token, each other creature copies the original characteristics of that token as stated by the effect that put it onto the battlefield. Those creatures don’t become tokens.'), ('Mirrorweave', 'As the turn ends, the other creatures revert to what they were before. If two Mirrorweaves are cast on the same turn, they’ll both wear off at the same time.'), ('Panglacial Wurm', 'Panglacial Wurm’s ability works only while you’re searching your own library. The effect that caused you to search needs to say “search” and “library,” and you need to be looking through your own library for this to work. Examples of effects that let you '), ('Panglacial Wurm', 'Casting Panglacial Wurm while searching your library follows all the normal rules for casting a creature spell, except for timing (casting the Wurm this way always occurs during the resolution of another spell or ability) and what zone the Wurm is being c'), ('Panglacial Wurm', 'After you cast Panglacial Wurm, you pick up the search effect where you left off. When the search effect finishes resolving, the active player gets priority with Panglacial Wurm on the stack. Any abilities that triggered when the spell was cast are put on'), ('Panglacial Wurm', 'If you have enough mana, you can cast multiple Panglacial Wurms during a single search effect.'), ('Panglacial Wurm', 'A Panglacial Wurm that you cast while searching your library can’t be found by the search effect.'), ('Panglacial Wurm', 'If you want to cast Panglacial Wurm while searching your library, you must do so before you find any cards with the search effect.'), ('Panglacial Wurm', 'While searching your library, you must keep your library in the same order until you shuffle it. This order could matter if you tap Millikin for mana, for example, to pay for a Panglacial Wurm you cast from your library.'), ('Waves of Aggression', 'Casting a card by using its retrace ability works just like casting any other spell, with two exceptions: You’re casting it from your graveyard rather than your hand, and you must discard a land card in addition to any other costs.'), ('Waves of Aggression', 'A retrace card cast from your graveyard follows the normal timing rules for its card type.'), ('Waves of Aggression', 'When a retrace card you cast from your graveyard resolves, fails to resolve, or is countered, it’s put back into your graveyard. You may use the retrace ability to cast it again.'), ('Waves of Aggression', 'If the active player casts a spell that has retrace, that player may cast that card again after it resolves, before another player can remove the card from the graveyard. The active player has priority after the spell resolves, so they can immediately cas'), ('Waves of Aggression', 'Waves of Aggression untaps all creatures that attacked this turn, not just those that attacked during the most recent combat phase.'), ('Waves of Aggression', 'If it’s somehow not a main phase when Waves of Aggression resolves, all it does is untap all creatures that attacked that turn. No new phases are created.'), ('Panglacial Wurm', 'Panglacial Wurm’s ability works only while you’re searching your own library. The effect that caused you to search needs to say “search” and “library,” and you need to be looking through your own library for this to work. Examples of effects that let you '), ('Panglacial Wurm', 'Casting Panglacial Wurm while searching your library follows all the normal rules for casting a creature spell, except for timing (casting the Wurm this way always occurs during the resolution of another spell or ability) and what zone the Wurm is being c'), ('Panglacial Wurm', 'After you cast Panglacial Wurm, you pick up the search effect where you left off. When the search effect finishes resolving, the active player gets priority with Panglacial Wurm on the stack. Any abilities that triggered when the spell was cast are put on'), ('Panglacial Wurm', 'If you have enough mana, you can cast multiple Panglacial Wurms during a single search effect.'), ('Panglacial Wurm', 'A Panglacial Wurm that you cast while searching your library can’t be found by the search effect.'), ('Panglacial Wurm', 'If you want to cast Panglacial Wurm while searching your library, you must do so before you find any cards with the search effect.'), ('Panglacial Wurm', 'While searching your library, you must keep your library in the same order until you shuffle it. This order could matter if you tap Millikin for mana, for example, to pay for a Panglacial Wurm you cast from your library.'), ('Wings of Velis Vel', 'Examples of creature types include Sliver, Goblin, and Soldier. Creature types appear after the dash on the type line of creatures.'), (""Colfenor's Urn"", 'The second ability checks how many creatures have been exiled with Colfenor’s Urn over the course of the entire game.'), (""Colfenor's Urn"", 'The second ability forces you to sacrifice Colfenor’s Urn. If the ability triggers and the Urn isn’t sacrificed (because it left the battlefield or changed controllers, for example), the exiled cards won’t be returned to the battlefield.'), (""Colfenor's Urn"", 'The first ability triggers when a token creature with toughness 4 or greater is put into your graveyard. However, that token will cease to exist before Colfenor’s Plans can exile it.'), ('Wings of Velis Vel', 'Examples of creature types include Sliver, Goblin, and Soldier. Creature types appear after the dash on the type line of creatures.'), ('Pulling Teeth', 'The opponent you clash with doesn’t have to be the player targeted by Pulling Teeth.'), ('Squeaking Pie Grubfellows', 'Kinship is an ability word that indicates a group of similar triggered abilities that appear on _Morningtide_ creatures. It doesn’t have any special rules associated with it.'), ('Squeaking Pie Grubfellows', 'The first two sentences of every kinship ability are the same (except for the creature’s name). Only the last sentence varies from one kinship ability to the next.'), ('Squeaking Pie Grubfellows', 'You don’t have to reveal the top card of your library, even if it shares a creature type with the creature that has the kinship ability.'), ('Squeaking Pie Grubfellows', 'After the kinship ability finishes resolving, the card you looked at remains on top of your library.'), ('Squeaking Pie Grubfellows', 'If you have multiple creatures with kinship abilities, each triggers and resolves separately. You’ll look at the same card for each one, unless you have some method of shuffling your library or moving that card to a different zone.'), ('Squeaking Pie Grubfellows', 'If the top card of your library is already revealed (due to Magus of the Future, for example), you still have the option to reveal it or not as part of a kinship ability’s effect.'), ('Reins of the Vinesteed', 'Reins of the Vinesteed’s last ability triggers if it and the creature it’s enchanting are both put into the graveyard at the same time, or if the creature it’s enchanting is put into the graveyard but Reins of the Vinesteed isn’t. (In the second case, Rei'), ('Reins of the Vinesteed', 'As the triggered ability resolves, check which creatures on the battlefield have any of the creature types that the previously enchanted creature had as it left the battlefield. If that creature was a Goblin Rogue, for example, Reins of the Vinesteed can '), ('Reins of the Vinesteed', 'This triggered ability doesn’t target a creature. You may return Reins of the Vinesteed to the battlefield attached to a creature that has shroud, for example. However, the creature must be able to be legally enchanted by Reins of the Vinesteed. You can’t'), ('Reins of the Vinesteed', 'You can choose to return Reins of the Vinesteed to the battlefield attached to a creature another player controls. You still control Reins of the Vinesteed. When that creature is put into a graveyard, the ability of Reins of the Vinesteed will trigger aga'), ('Approach My Molten Realm', 'The effect doesn’t wear off until just before your next untap step (even if an effect will cause that untap step to be skipped).'), ('Approach My Molten Realm', 'This ability applies no matter who or what the damage would be dealt to: a creature, a player, or a planeswalker. It also doesn’t matter who controls the source.'), ('Approach My Molten Realm', 'If multiple effects modify how damage will be dealt, the player who would be dealt damage or the controller of the permanent that would be dealt damage chooses the order to apply the effects. For example, Mending Hands says, “Prevent the next 4 damage tha'), ('Approach My Molten Realm', 'If a spell or ability divides damage among multiple recipients (such as Fireball does), the damage is divided before this effect doubles it.'), ('Stronghold Furnace', 'A plane card is treated as if its text box included “When you roll {PW}, put this card on the bottom of its owner’s planar deck face down, then move the top card of your planar deck off that planar deck and turn it face up.” This is called the “planeswalk'), ('Stronghold Furnace', 'A face-up plane card that’s turned face down becomes a new object with no relation to its previous existence. In particular, it loses all counters it may have had.'), ('Stronghold Furnace', 'The controller of a face-up plane card is the player designated as the “planar controller.” Normally, the planar controller is whoever the active player is. However, if the current planar controller would leave the game, instead the next player in turn or'), ('Stronghold Furnace', 'If an ability of a plane refers to “you,” it’s referring to whoever the plane’s controller is at the time, not to the player that started the game with that plane card in their deck. Many abilities of plane cards affect all players, while many others affe'), ('Stronghold Furnace', 'Stronghold Furnace’s first ability interacts with all damage, not just combat damage. Notably, it doubles the damage from its own chaos ability.'), ('Stronghold Furnace', 'If multiple effects modify how damage will be dealt, the player who would be dealt damage or the controller of the creature that would be dealt damage chooses the order to apply the effects. For example, Mending Hands says, “Prevent the next 4 damage that'), ('Stronghold Furnace', 'If a spell or ability divides damage among multiple recipients (such as Pyrotechnics does), the damage is divided before Stronghold Furnace’s effect doubles it. The same is true for combat damage.'), ('Stronghold Furnace', 'A plane card is treated as if its text box included “When you roll {PW}, put this card on the bottom of its owner’s planar deck face down, then move the top card of your planar deck off that planar deck and turn it face up.” This is called the “planeswalk'), ('Stronghold Furnace', 'A face-up plane card that’s turned face down becomes a new object with no relation to its previous existence. In particular, it loses all counters it may have had.'), ('Stronghold Furnace', 'The controller of a face-up plane card is the player designated as the “planar controller.” Normally, the planar controller is whoever the active player is. However, if the current planar controller would leave the game, instead the next player in turn or'), ('Stronghold Furnace', 'If an ability of a plane refers to “you,” it’s referring to whoever the plane’s controller is at the time, not to the player that started the game with that plane card in their deck. Many abilities of plane cards affect all players, while many others affe'), ('Stronghold Furnace', 'Stronghold Furnace’s first ability interacts with all damage, not just combat damage. Notably, it doubles the damage from its own chaos ability.'), ('Stronghold Furnace', 'If multiple effects modify how damage will be dealt, the player who would be dealt damage or the controller of the creature that would be dealt damage chooses the order to apply the effects. For example, Mending Hands says, “Prevent the next 4 damage that'), ('Stronghold Furnace', 'If a spell or ability divides damage among multiple recipients (such as Pyrotechnics does), the damage is divided before Stronghold Furnace’s effect doubles it. The same is true for combat damage.'), ('Blightning', 'The targeted player will discard two cards even if some or all of Blightning’s damage is prevented or redirected.'), ('Volcanic Fallout', 'Volcanic Fallout can be targeted by spells that try to counter it (such as Countersquall). Those spells will still resolve, but the part of their effect that would counter Volcanic Fallout won’t do anything. Any other effects those spells have will work a'), ('Oubliette', 'If Oubliette leaves the battlefield before its triggered ability resolves, the target creature won’t be phased out or tapped.'), ('Oubliette', 'While a permanent is phased out, it’s treated as though it doesn’t exist. It can’t be the target of spells or abilities, its static abilities have no effect on the game, its triggered abilities can’t trigger, it can’t attack or block, and so on.'), ('Oubliette', 'Phasing out doesn’t cause any “leaves the battlefield” abilities to trigger. Similarly, phasing in won’t cause any “enters the battlefield” abilities to trigger.'), ('Oubliette', 'Any one-shot effects that are waiting “until [this] leaves the battlefield,” such as that of Kitesail Freebooter, won’t happen when a permanent phases out.'), ('Oubliette', 'Any continuous effects with a “for as long as” duration such as that of Awakener Druid ignore phased-out objects. Any such effects will expire if their conditions are no longer met after ignoring the phased-out objects.'), ('Oubliette', 'Each Aura and Equipment attached to a permanent that’s phasing out also phases out. They will phase in with that permanent and still be attached to it. Similarly, permanents that phase out with counters phase in with those counters.'), ('Oubliette', 'Choices made for permanents as they entered the battlefield are remembered when they phase in.'), ('Oubliette', 'A creature phased out by Oubliette doesn’t phase in during its controller’s untap step as normal. Rather, it phases in immediately after Oubliette leaves the battlefield.'), ('Oubliette', 'Abilities that trigger when a creature becomes tapped won’t trigger when the creature phases in tapped.'), ('Panglacial Wurm', 'Panglacial Wurm’s ability works only while you’re searching your own library. The effect that caused you to search needs to say “search” and “library,” and you need to be looking through your own library for this to work. Examples of effects that let you '), ('Panglacial Wurm', 'Casting Panglacial Wurm while searching your library follows all the normal rules for casting a creature spell, except for timing (casting the Wurm this way always occurs during the resolution of another spell or ability) and what zone the Wurm is being c'), ('Panglacial Wurm', 'After you cast Panglacial Wurm, you pick up the search effect where you left off. When the search effect finishes resolving, the active player gets priority with Panglacial Wurm on the stack. Any abilities that triggered when the spell was cast are put on'), ('Panglacial Wurm', 'If you have enough mana, you can cast multiple Panglacial Wurms during a single search effect.'), ('Panglacial Wurm', 'A Panglacial Wurm that you cast while searching your library can’t be found by the search effect.'), ('Panglacial Wurm', 'If you want to cast Panglacial Wurm while searching your library, you must do so before you find any cards with the search effect.'), ('Panglacial Wurm', 'While searching your library, you must keep your library in the same order until you shuffle it. This order could matter if you tap Millikin for mana, for example, to pay for a Panglacial Wurm you cast from your library.'), ('Blightning', 'The targeted player will discard two cards even if some or all of Blightning’s damage is prevented or redirected.'), ('Volcanic Fallout', 'Volcanic Fallout can be targeted by spells that try to counter it (such as Countersquall). Those spells will still resolve, but the part of their effect that would counter Volcanic Fallout won’t do anything. Any other effects those spells have will work a'), ('Mirrorweave', 'Each other creature copies the printed values of the targeted creature, plus any copy effects that have been applied to that creature. They won’t copy other effects that have changed the targeted creature’s power, toughness, types, color, or so on. They a'), ('Mirrorweave', 'If the targeted creature is itself copying a creature, each other creature will become whatever it’s copying, as modified by that copy effect. For example, if you target a Cemetery Puca that’s copying a Grizzly Bears (a 2/2 creature with no abilities), ea'), ('Mirrorweave', 'This effect can cause each other creature to stop being a creature. For example, if you target an animated Mutavault (a land with an activated ability that turns it into a creature), only the printed wording will be copied — the “becomes a creature” effec'), ('Mirrorweave', 'Noncopy effects that have already applied to the other creatures will continue to apply to them. For example, if Giant Growth had given one of them +3/+3 earlier in the turn, then Mirrorweave made it a copy of Grizzly Bears, it will be a 5/5 Grizzly Bears'), ('Mirrorweave', 'If the targeted creature is a token, each other creature copies the original characteristics of that token as stated by the effect that put it onto the battlefield. Those creatures don’t become tokens.'), ('Mirrorweave', 'As the turn ends, the other creatures revert to what they were before. If two Mirrorweaves are cast on the same turn, they’ll both wear off at the same time.'), (""Traitor's Roar"", 'If you use conspire to copy Traitor’s Roar, but you don’t change its target, the copy will resolve just fine but the original doesn’t resolve. That’s because the copy will resolve first, and as part of its resolution, it will tap the targeted creature. Th'), ('Illuminated Folio', 'The two revealed cards stay revealed until the ability resolves. If one of them is played, is discarded, or otherwise leaves your hand, the ability will still resolve as normal.'), ('Illuminated Folio', 'Colorless is not a color. You can’t reveal two colorless cards from your hand to activate this ability because those cards don’t share a color with one another.')]",Query results mismatch,0.060530415998073295
1126,european_football_2,False,simple,SELECT player_name FROM Player WHERE player_name LIKE '%Belgium%';,"[('Mark Volders',), ('Wouter Biebauw',), ('Bertrand Laquait',), ('Boubacar Barry Copa',), ('Stijn Stijnen',), ('Silvio Proto',), ('Cedric Berthelin',), ('Sammy Bossuyt',), ('Bram Verbist',), ('Frederic Herpoel',), ('Davy Schollen',), ('Peter Mollez',), ('Davino Verhulst',), ('Yves De Winter',), ('Jurgen Sierens',), ('Bojan Jorgacevic',), ('Bertrand Laquait',), ('Wouter Biebauw',), ('Silvio Proto',), ('Boubacar Barry Copa',), ('Cedric Berthelin',), ('Stijn Stijnen',), ('Sammy Bossuyt',), ('Sven De Volder',), ('Nicolas Ardouin',), ('Peter Mollez',), ('Bertrand Laquait',), ('Bojan Jorgacevic',), ('Frederic Herpoel',), ('Yves De Winter',), ('Jurgen Sierens',), ('Bram Verbist',), ('Davino Verhulst',), ('Davy Schollen',), ('Boubacar Barry Copa',), ('Sven De Volder',), ('Stijn Stijnen',), ('Sammy Bossuyt',), ('Cedric Berthelin',), ('Nicolas Ardouin',), ('Olivier Renard',), ('Davino Verhulst',), ('Sinan Bolat',), ('Davy Schollen',), ('Jurgen Sierens',), ('Silvio Proto',), ('Sinan Bolat',), ('Peter Mollez',), ('Frederic Herpoel',), ('Bertrand Laquait',), ('Bram Verbist',), ('Yves De Winter',), ('Sven De Volder',), ('Stijn Stijnen',), ('Nicolas Ardouin',), ('Olivier Renard',), ('Thibaut Courtois',), ('Cedric Berthelin',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Silvio Proto',), ('Bram Verbist',), ('Bertrand Laquait',), ('Jurgen Sierens',), ('Davy Schollen',), ('Sinan Bolat',), ('Boubacar Barry Copa',), ('Peter Mollez',), ('Nicolas Ardouin',), ('Sammy Bossuyt',), ('Cedric Berthelin',), ('Olivier Renard',), ('Bojan Jorgacevic',), ('Stijn Stijnen',), ('Yves De Winter',), ('Davino Verhulst',), ('Sven De Volder',), ('Sinan Bolat',), ('Bertrand Laquait',), ('Sven De Volder',), ('Kristof van Hout',), ('Boubacar Barry Copa',), ('Silvio Proto',), ('Davy Schollen',), ('Gregory Delwarte',), ('Jo Coppens',), ('Davino Verhulst',), ('Bojan Jorgacevic',), ('Sammy Bossuyt',), ('Cedric Berthelin',), ('Jurgen Sierens',), ('Olivier Renard',), ('Stijn Stijnen',), ('Yves De Winter',), ('Mario Matos',), ('Sinan Bolat',), ('Sebastien Chabbert',), ('Bram Verbist',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Simon Mignolet',), ('Sebastien Chabbert',), ('Olivier Renard',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Stijn Stijnen',), ('Silvio Proto',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Yves De Winter',), ('Kristof van Hout',), ('Simon Mignolet',), ('Sebastien Chabbert',), ('Jo Coppens',), ('Boubacar Barry Copa',), ('Olivier Renard',), ('Jurgen Sierens',), ('Stijn Stijnen',), ('Silvio Proto',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Glenn Verbauwhede',), ('Yves De Winter',), ('Sinan Bolat',), ('Davino Verhulst',), ('Sebastien Chabbert',), ('Jo Coppens',), ('Jugoslav Lazic',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Stijn Stijnen',), ('Silvio Proto',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Glenn Verbauwhede',), ('Yves De Winter',), ('Stijn Stijnen',), ('Silvio Proto',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Yves De Winter',), ('Tomislav Pacovski',), ('Sinan Bolat',), ('Davino Verhulst',), ('Sebastien Chabbert',), ('Bram Verbist',), ('Jugoslav Lazic',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Yves De Winter',), ('Tomislav Pacovski',), ('Silvio Proto',), ('Davino Verhulst',), ('Cyprien Baguette,23',), ('Jugoslav Lazic',), ('Glenn Verbauwhede',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Stijn Stijnen',), ('Silvio Proto',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Yves De Winter',), ('Tomislav Pacovski',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Bojan Jorgacevic',), ('Tomislav Pacovski',), ('Silvio Proto',), ('Laszlo Koteles',), ('Bram Verbist',), ('Jugoslav Lazic',), ('Glenn Verbauwhede',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Simon Mignolet',), ('Cyprien Baguette,23',), ('Bojan Jorgacevic',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Bram Verbist',), ('Jugoslav Lazic',), ('Glenn Verbauwhede',), ('Wouter Biebauw',), ('Yves De Winter',), ('Sinan Bolat',), ('Simon Mignolet',), ('Cyprien Baguette,23',), ('Bojan Jorgacevic',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Silvio Proto',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Bram Verbist',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Yves De Winter',), ('Sinan Bolat',), ('Cyprien Baguette,23',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Stijn Stijnen',), ('Silvio Proto',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Damien Lahaye',), ('Yves De Winter',), ('Simon Mignolet',), ('Cyprien Baguette,23',), ('Bram Verbist',), ('Jugoslav Lazic',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Geert De Vlieger',), ('Silvio Proto',), ('Tom Muyters',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Glenn Verbauwhede',), ('Yves De Winter',), ('Silvio Proto',), ('Davino Verhulst',), ('Sebastien Chabbert',), ('Jo Coppens',), ('Boubacar Barry Copa',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Sinan Bolat',), ('Laszlo Koteles',), ('Bram Verbist',), ('Boubacar Barry Copa',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Bojan Jorgacevic',), ('Yves De Winter',), ('Tomislav Pacovski',), ('Silvio Proto',), ('Davino Verhulst',), ('Jo Coppens',), ('Glenn Verbauwhede',), ('Wouter Biebauw',), ('Jurgen Sierens',), ('Yves De Winter',), ('Geert De Vlieger',), ('Sinan Bolat',), ('Simon Mignolet',), ('Sammy Bossuyt',), ('Sebastien Chabbert',), ('Bojan Jorgacevic',), ('Tomislav Pacovski',), ('Silvio Proto',), ('Davino Verhulst',), ('Jo Coppens',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Yves De Winter',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Simon Mignolet',), ('Sebastien Chabbert',), ('Bojan Jorgacevic',), ('Jurgen Sierens',), ('Tomislav Pacovski',), ('Silvio Proto',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Jo Coppens',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Yves De Winter',), ('Mark Volders',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Yves De Winter',), ('Silvio Proto',), ('Sinan Bolat',), ('Bram Verbist',), ('Thibaut Courtois',), ('Colin Coosemans',), ('Sinan Bolat',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Eiji Kawashima',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Olivier Werner',), ('Yves De Winter',), ('Bram Verbist',), ('Silvio Proto',), ('Kristof van Hout',), ('Mark Volders',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Vladan Kujovic',), ('Bram Verbist',), ('Geert De Vlieger',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Olivier Werner',), ('Yves De Winter',), ('Silvio Proto',), ('Kristof van Hout',), ('Sven van der Jeugt',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Vladan Kujovic',), ('Yves De Winter',), ('Bram Verbist',), ('Stijn Stijnen',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Jugoslav Lazic',), ('Olivier Werner',), ('Stijn Stijnen',), ('Bojan Jorgacevic',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Jugoslav Lazic',), ('Eiji Kawashima',), ('Olivier Werner',), ('Silvio Proto',), ('Srdjan Blazic',), ('Thibaut Courtois',), ('Laurent Henkinet',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Yves De Winter',), ('Bram Verbist',), ('Stijn Stijnen',), ('Thomas Kaminski',), ('Laurent Henkinet',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Jugoslav Lazic',), ('Eiji Kawashima',), ('Olivier Werner',), ('Silvio Proto',), ('Srdjan Blazic',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Yves De Winter',), ('Bram Verbist',), ('Stijn Stijnen',), ('Bojan Jorgacevic',), ('Tomislav Pacovski',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Boubacar Barry Copa',), ('Eiji Kawashima',), ('Radek Petr',), ('Stijn Stijnen',), ('Thomas Kaminski',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Eiji Kawashima',), ('Olivier Werner',), ('Silvio Proto',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Cyprien Baguette,23',), ('Olivier Renard',), ('Olivier Werner',), ('Yves De Winter',), ('Bram Verbist',), ('Colin Coosemans',), ('Srdjan Blazic',), ('Thomas Kaminski',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Eiji Kawashima',), ('Silvio Proto',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Rudy Riou',), ('Olivier Werner',), ('Yves De Winter',), ('Bram Verbist',), ('Colin Coosemans',), ('Srdjan Blazic',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Vladan Kujovic',), ('Silvio Proto',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Rudy Riou',), ('Olivier Werner',), ('Yves De Winter',), ('Bram Verbist',), ('Colin Coosemans',), ('Silvio Proto',), ('Srdjan Blazic',), ('Sven van der Jeugt',), ('Jugoslav Lazic',), ('Damien Lahaye',), ('Olivier Renard',), ('Eiji Kawashima',), ('Colin Coosemans',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Rudy Riou',), ('Radek Petr',), ('Bart Deelkens',), ('Silvio Proto',), ('Srdjan Blazic',), ('Sven van der Jeugt',), ('Boubacar Barry Copa',), ('Damien Lahaye',), ('Olivier Renard',), ('Eiji Kawashima',), ('Bram Verbist',), ('Colin Coosemans',), ('Frank Boeckx',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Rudy Riou',), ('Boubacar Barry Copa',), ('Radek Petr',), ('Silvio Proto',), ('Sinan Bolat',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Yves De Winter',), ('Bram Verbist',), ('Silvio Proto',), ('Sinan Bolat',), ('Sven van der Jeugt',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Stijn Stijnen',), ('Thomas Kaminski',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Cyprien Baguette,23',), ('Boubacar Barry Copa',), ('Eiji Kawashima',), ('Radek Petr',), ('Silvio Proto',), ('Sinan Bolat',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Cyprien Baguette,23',), ('Olivier Renard',), ('Yves De Winter',), ('Bram Verbist',), ('Stijn Stijnen',), ('Sinan Bolat',), ('Thomas Kaminski',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Eiji Kawashima',), ('Silvio Proto',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Cyprien Baguette,23',), ('Olivier Renard',), ('Radek Petr',), ('Bart Deelkens',), ('Bram Verbist',), ('Geert De Vlieger',), ('Sinan Bolat',), ('Sven van der Jeugt',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Glenn Verbauwhede',), ('Olivier Renard',), ('Eiji Kawashima',), ('Silvio Proto',), ('Bojan Jorgacevic',), ('Thibaut Courtois',), ('Thomas Kaminski',), ('Radek Petr',), ('Yves De Winter',), ('Bram Verbist',), ('Yves Lenaerts',), ('Cedric Berthelin',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Olivier Renard',), ('Colin Coosemans',), ('Colin Coosemans',), ('Silvio Proto',), ('Davino Verhulst',), ('Tom Muyters',), ('Thomas Kaminski',), ('Boubacar Barry Copa',), ('Olivier Renard',), ('Cedric Berthelin',), ('Sinan Bolat',), ('Laszlo Koteles',), ('Bojan Jorgacevic',), ('Stijn Stijnen',), ('Kristof van Hout',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Colin Coosemans',), ('Silvio Proto',), ('Davino Verhulst',), ('Tom Muyters',), ('Thomas Kaminski',), ('Boubacar Barry Copa',), ('Olivier Renard',), ('Cedric Berthelin',), ('Sinan Bolat',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Tomislav Pacovski',), ('Tom Muyters',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Laszlo Koteles',), ('Thomas Kaminski',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Olivier Renard',), ('Cedric Berthelin',), ('Sinan Bolat',), ('Sergio Padt',), ('Tomislav Pacovski',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Silvio Proto',), ('Sinan Bolat',), ('Tomislav Pacovski',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Laszlo Koteles',), ('Thomas Kaminski',), ('Boubacar Barry Copa',), ('Darren Keet',), ('Olivier Renard',), ('Olivier Werner',), ('Frank Boeckx',), ('Silvio Proto',), ('Sinan Bolat',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Thomas Kaminski',), ('Eiji Kawashima',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Tomislav Pacovski',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Olivier Renard',), ('Olivier Werner',), ('Silvio Proto',), ('Sinan Bolat',), ('Thomas Kaminski',), ('Bram Castro',), ('Sammy Bossuyt',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Silvio Proto',), ('Sinan Bolat',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Thomas Kaminski',), ('Olivier Renard',), ('Eiji Kawashima',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Tomislav Pacovski',), ('Jugoslav Lazic',), ('Kristof van Hout',), ('Cedric Berthelin',), ('Glenn Verbauwhede',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Sinan Bolat',), ('Davino Verhulst',), ('Thomas Kaminski',), ('Olivier Renard',), ('Eiji Kawashima',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Sergio Padt',), ('Tomislav Pacovski',), ('Jugoslav Lazic',), ('Kristof van Hout',), ('Olivier Werner',), ('Glenn Verbauwhede',), ('Jo Coppens',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Jugoslav Lazic',), ('Olivier Renard',), ('Eiji Kawashima',), ('Thomas Kaminski',), ('Sinan Bolat',), ('Logan Bailly',), ('Sergio Padt',), ('Stijn Stijnen',), ('Kristof van Hout',), ('Eiji Kawashima',), ('Glenn Verbauwhede',), ('Jo Coppens',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Thomas Kaminski',), ('Jugoslav Lazic',), ('Olivier Renard',), ('Olivier Werner',), ('Sinan Bolat',), ('Logan Bailly',), ('Stijn Stijnen',), ('Darren Keet',), ('Eiji Kawashima',), ('Glenn Verbauwhede',), ('Jo Coppens',), ('Sergio Padt',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Davino Verhulst',), ('Thomas Kaminski',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Olivier Renard',), ('Olivier Werner',), ('Sinan Bolat',), ('Sergio Padt',), ('Tomislav Pacovski',), ('Davino Verhulst',), ('Sammy Bossuyt',), ('Eiji Kawashima',), ('Glenn Verbauwhede',), ('Jo Coppens',), ('Colin Coosemans',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Thomas Kaminski',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Olivier Renard',), ('Cedric Berthelin',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Logan Bailly',), ('Yves Lenaerts',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Wouter Biebauw',), ('Olivier Werner',), ('Sinan Bolat',), ('Bram Castro',), ('Sammy Bossuyt',), ('Yves Lenaerts',), ('Eiji Kawashima',), ('Bart Deelkens',), ('Bram Verbist',), ('Silvio Proto',), ('Colin Coosemans',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Stijn Stijnen',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Cedric Berthelin',), ('Bart Deelkens',), ('Silvio Proto',), ('Sinan Bolat',), ('Hendrik van Crombrugge',), ('Sammy Bossuyt',), ('Yves Lenaerts',), ('Olivier Renard',), ('Bram Verbist',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Bojan Jorgacevic',), ('Stijn Stijnen',), ('Boubacar Barry Copa',), ('Kristof van Hout',), ('Cedric Berthelin',), ('Bart Deelkens',), ('Bram Verbist',), ('Colin Coosemans',), ('Silvio Proto',), ('Anthony Moris',), ('Bram Castro',), ('Sammy Bossuyt',), ('Yves Lenaerts',), ('Olivier Renard',), ('Eiji Kawashima',), ('Sinan Bolat',), ('Laszlo Koteles',), ('Bojan Jorgacevic',), ('Stijn Stijnen',), ('Kristof van Hout',), ('Cedric Berthelin',), ('Bart Deelkens',), ('Bram Verbist',), ('Kristof van Hout',), ('Stijn Stijnen',), ('Olivier Werner',), ('Eiji Kawashima',), ('Olivier Renard',), ('Vladan Kujovic',), ('Sergio Padt',), ('Laszlo Koteles',), ('Bojan Jorgacevic',), ('Eiji Kawashima',), ('Stijn Stijnen',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Tomislav Pacovski',), ('Michael Clepkens',), ('Silvio Proto',), ('Kristof van Hout',), ('Sergio Padt',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Matz Sels',), ('Cedric Berthelin',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Eiji Kawashima',), ('Sergio Padt',), ('Stijn Stijnen',), ('Parfait Mandanda',), ('Darren Keet',), ('Tomislav Pacovski',), ('Michael Clepkens',), ('Silvio Proto',), ('Kristof van Hout',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Boubacar Barry Copa',), ('Matz Sels',), ('Cedric Berthelin',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Eiji Kawashima',), ('Sergio Padt',), ('Koen Van Langendonck',), ('Parfait Mandanda',), ('Darren Keet',), ('Tomislav Pacovski',), ('Cedric Berthelin',), ('Silvio Proto',), ('Kristof van Hout',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Boubacar Barry Copa',), ('Matz Sels',), ('Colin Coosemans',), ('Bram Verbist',), ('Silvio Proto',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Boubacar Barry Copa',), ('Matz Sels',), ('Colin Coosemans',), ('Bram Verbist',), ('Vladan Kujovic',), ('Eiji Kawashima',), ('Kristof van Hout',), ('Sergio Padt',), ('Koen Van Langendonck',), ('Darren Keet',), ('Tomislav Pacovski',), ('Cedric Berthelin',), ('Vladan Kujovic',), ('Silvio Proto',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Boubacar Barry Copa',), ('Matz Sels',), ('Colin Coosemans',), ('Eiji Kawashima',), ('Kristof van Hout',), ('Sergio Padt',), ('Koen Van Langendonck',), ('Darren Keet',), ('Tomislav Pacovski',), ('Cedric Berthelin',), ('Bram Verbist',), ('Silvio Proto',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Jugoslav Lazic',), ('Matz Sels',), ('Michael Clepkens',), ('Bram Verbist',), ('Vladan Kujovic',), ('Silvio Proto',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Tomislav Pacovski',), ('Matz Sels',), ('Colin Coosemans',), ('Eiji Kawashima',), ('Kristof van Hout',), ('Sergio Padt',), ('Stijn Stijnen',), ('Logan Bailly',), ('Darren Keet',), ('Cedric Berthelin',), ('Bram Verbist',), ('Vladan Kujovic',), ('Silvio Proto',), ('Eiji Kawashima',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Tomislav Pacovski',), ('Colin Coosemans',), ('Silvio Proto',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Logan Bailly',), ('Darren Keet',), ('Matz Sels',), ('Cedric Berthelin',), ('Jo Coppens',), ('Vladan Kujovic',), ('Eiji Kawashima',), ('Stijn Stijnen',), ('Michalis Sifakis',), ('Sammy Bossuyt',), ('Jugoslav Lazic',), ('Tomislav Pacovski',), ('Colin Coosemans',), ('Silvio Proto',), ('Laszlo Koteles',), ('Frank Boeckx',), ('Logan Bailly',), ('Darren Keet',), ('Matz Sels',), ('Olivier Werner',), ('Bram Verbist',), ('Vladan Kujovic',), ('Eiji Kawashima',), ('Stijn Stijnen',), ('Michalis Sifakis',), ('Jugoslav Lazic',), ('Darren Keet',), ('Wouter Biebauw',), ('Colin Coosemans',), ('Silvio Proto',), ('Kristof van Hout',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Jugoslav Lazic',), ('Matz Sels',), ('Olivier Werner',), ('Bram Verbist',), ('Vladan Kujovic',), ('Eiji Kawashima',), ('Frank Boeckx',), ('Koen Van Langendonck',), ('Michalis Sifakis',), ('Darren Keet',), ('Tomislav Pacovski',), ('Colin Coosemans',), ('Silvio Proto',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Jugoslav Lazic',), ('Matz Sels',), ('Colin Coosemans',), ('Jo Coppens',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Sergio Padt',), ('Stijn Stijnen',), ('Darren Keet',), ('Olivier Renard',), ('Olivier Werner',), ('Bram Verbist',), ('Vladan Kujovic',), ('Eiji Kawashima',), ('Frank Boeckx',), ('Stefan Deloose',), ('Michalis Sifakis',), ('Darren Keet',), ('Tomislav Pacovski',), ('Olivier Werner',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Logan Bailly',), ('Boubacar Barry Copa',), ('Matz Sels',), ('Michael Clepkens',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Sergio Padt',), ('Stijn Stijnen',), ('Logan Bailly',), ('Darren Keet',), ('Olivier Werner',), ('Bram Verbist',), ('Bojan Jorgacevic',), ('Silvio Proto',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Olivier Renard',), ('Matz Sels',), ('Michael Clepkens',), ('Kristof van Hout',), ('Sergio Padt',), ('Stijn Stijnen',), ('Logan Bailly',), ('Darren Keet',), ('Matz Sels',), ('Olivier Werner',), ('Jo Coppens',), ('Bojan Jorgacevic',), ('Eiji Kawashima',), ('Koen Van Langendonck',), ('Parfait Mandanda',), ('Sammy Bossuyt',), ('Boubacar Barry Copa',), ('Tomislav Pacovski',), ('Michael Clepkens',), ('Silvio Proto',), ('Kristof van Hout',), ('Sergio Padt',), ('Logan Bailly',), ('Darren Keet',), ('Matz Sels',), ('Cedric Berthelin',), ('Jo Coppens',), ('Colin Coosemans',), ('Matz Sels',), ('Igor Berezovsky',), ('Didier Ovono',), ('Matz Sels',), ('Didier Ovono',), ('Kenny Steppe',), ('Igor Berezovsky',), ('Igor Berezovsky',), ('Jeremy Dumesnil',), ('Kenny Steppe',), ('Matz Sels',), ('Eiji Kawashima',), ('Colin Coosemans',), ('Olivier Werner',), ('Igor Berezovsky',), ('Koen Van Langendonck',), ('Tomislav Pacovski',), ('Thomas Kaminski',), ('Sammy Bossuyt',), ('Mathew Ryan',), ('Silvio Proto',), ('Nicolas Penneteau',), ('Patrick De Vlamynck',), ('Boubacar Barry Copa',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Boubacar Barry Copa',), ('Darren Keet',), ('Wouter Biebauw',), ('Olivier Werner',), ('Mathew Ryan',), ('Silvio Proto',), ('Nicolas Penneteau',), ('Sammy Bossuyt',), ('Patrick De Vlamynck',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Patrick De Vlamynck',), ('Boubacar Barry Copa',), ('Darren Keet',), ('Wouter Biebauw',), ('Olivier Werner',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Nicolas Penneteau',), ('Sammy Bossuyt',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Olivier Werner',), ('Mathew Ryan',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Patrick De Vlamynck',), ('Boubacar Barry Copa',), ('Darren Keet',), ('Wouter Biebauw',), ('Patrick De Vlamynck',), ('Boubacar Barry Copa',), ('Laurent Henkinet',), ('Mathew Ryan',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Nicolas Penneteau',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Sammy Bossuyt',), ('Wouter Biebauw',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Olivier Werner',), ('Mathew Ryan',), ('Matz Sels',), ('Didier Ovono',), ('Nicolas Penneteau',), ('Patrick De Vlamynck',), ('Boubacar Barry Copa',), ('Darren Keet',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Wouter Biebauw',), ('Boban Bajkovic',), ('Colin Coosemans',), ('Olivier Werner',), ('Mathew Ryan',), ('Marco Bizot',), ('Matz Sels',), ('Didier Ovono',), ('Parfait Mandanda',), ('Pierrick Cros',), ('Davino Verhulst',), ('Darren Keet',), ('Mathew Ryan',), ('Matz Sels',), ('Didier Ovono',), ('Maxime Vandermeulen',), ('Pierrick Cros',), ('Boubacar Barry Copa',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Darren Keet',), ('Wouter Biebauw',), ('Boban Bajkovic',), ('Olivier Werner',), ('Vladan Kujovic',), ('Silvio Proto',), ('Jeremy Dumesnil',), ('Nicolas Penneteau',), ('Pierrick Cros',), ('Davino Verhulst',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Yohan Thuram Ulien',), ('Laszlo Koteles',), ('Matz Sels',), ('Sammy Bossuyt',), ('Laurent Henkinet',), ('Wouter Biebauw',), ('Boban Bajkovic',), ('Olivier Werner',), ('Vladan Kujovic',), ('Silvio Proto',), ('Nicolas Penneteau',), ('Pierrick Cros',), ('Davino Verhulst',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Kenny Steppe',), ('Yohan Thuram Ulien',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Sammy Bossuyt',), ('Laurent Henkinet',), ('Wouter Biebauw',), ('Olivier Werner',), ('Silvio Proto',), ('Mathew Ryan',), ('Nicolas Penneteau',), ('Sammy Bossuyt',), ('Pierrick Cros',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Kenny Steppe',), ('Yohan Thuram Ulien',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Davino Verhulst',), ('Laurent Henkinet',), ('Wouter Biebauw',), ('Olivier Werner',), ('Mathew Ryan',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Nicolas Penneteau',), ('Sammy Bossuyt',), ('Boban Bajkovic',), ('Koen Van Langendonck',), ('Kenny Steppe',), ('Mathew Ryan',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Pierrick Cros',), ('Davino Verhulst',), ('Laurent Henkinet',), ('Wouter Biebauw',), ('Silvio Proto',), ('Eiji Kawashima',), ('Marco Bizot',), ('Sammy Bossuyt',), ('Tomislav Pacovski',), ('Igor Berezovsky',), ('Colin Coosemans',), ('Olivier Werner',), ('Nicolas Penneteau',), ('Silvio Proto',), ('Sammy Bossuyt',), ('Yohan Thuram Ulien',), ('Koen Van Langendonck',), ('Olivier Werner',), ('Kenny Steppe',), ('Boban Bajkovic',), ('Mathew Ryan',), ('Matz Sels',), ('Didier Ovono',), ('Parfait Mandanda',), ('Pierrick Cros',), ('Davino Verhulst',), ('Darren Keet',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Sammy Bossuyt',), ('Darren Keet',), ('Wouter Biebauw',), ('Igor Berezovsky',), ('Olivier Werner',), ('Mathew Ryan',), ('Matz Sels',), ('Didier Ovono',), ('Nicolas Penneteau',), ('Pierrick Cros',), ('Boubacar Barry Copa',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Matz Sels',), ('Sammy Bossuyt',), ('Darren Keet',), ('Wouter Biebauw',), ('Igor Berezovsky',), ('Olivier Werner',), ('Mathew Ryan',), ('Silvio Proto',), ('Didier Ovono',), ('Nicolas Penneteau',), ('Pierrick Cros',), ('Boubacar Barry Copa',), ('Koen Van Langendonck',), ('Colin Coosemans',), ('Eiji Kawashima',), ('Laszlo Koteles',), ('Matz Sels',), ('Didier Ovono',), ('Sammy Bossuyt',), ('Darren Keet',), ('Wouter Biebauw',), ('Olivier Werner',), ('William Dutoit',), ('Darren Keet',), ('Laszlo Koteles',), ('Didier Ovono',), ('Sammy Bossuyt',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Nicolas Penneteau',), ('Silvio Proto',), ('Matz Sels',), ('Laszlo Koteles',), ('Didier Ovono',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('William Dutoit',), ('Sebastien Bruzzese',), ('Yohan Thuram Ulien',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Vagner',), ('Davino Verhulst',), ('Darren Keet',), ('Merveille Goblet',), ('Silvio Proto',), ('Matz Sels',), ('Laszlo Koteles',), ('Jean-Francois Gillet',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('William Dutoit',), ('Sebastien Bruzzese',), ('Guillaume Hubert',), ('Didier Ovono',), ('Sammy Bossuyt',), ('Vagner',), ('Davino Verhulst',), ('Darren Keet',), ('Merveille Goblet',), ('Silvio Proto',), ('Laszlo Koteles',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Parfait Mandanda',), ('Rudy Riou',), ('Koen Van Langendonck',), ('William Dutoit',), ('Sebastien Bruzzese',), ('Guillaume Hubert',), ('Matz Sels',), ('Didier Ovono',), ('Vagner',), ('Davino Verhulst',), ('Darren Keet',), ('Merveille Goblet',), ('Sebastien Bruzzese',), ('Guillaume Hubert',), ('Matz Sels',), ('Jean-Francois Gillet',), ('Vagner',), ('Davino Verhulst',), ('Rudy Riou',), ('Merveille Goblet',), ('Silvio Proto',), ('Laszlo Koteles',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Darren Keet',), ('Parfait Mandanda',), ('Koen Van Langendonck',), ('William Dutoit',), ('Sebastien Bruzzese',), ('Matz Sels',), ('Marco Bizot',), ('Didier Ovono',), ('Vagner',), ('Davino Verhulst',), ('Rudy Riou',), ('Merveille Goblet',), ('Silvio Proto',), ('Guillaume Hubert',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Darren Keet',), ('Parfait Mandanda',), ('Koen Van Langendonck',), ('William Dutoit',), ('Matz Sels',), ('Sebastien Bruzzese',), ('Laurent Henkinet',), ('Didier Ovono',), ('Ofir Marciano',), ('Davino Verhulst',), ('Yohan Thuram Ulien',), ('Rudy Riou',), ('Sebastien Bruzzese',), ('Matz Sels',), ('Marco Bizot',), ('Didier Ovono',), ('Vagner',), ('Davino Verhulst',), ('Rudy Riou',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Guillaume Hubert',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Darren Keet',), ('Nicolas Penneteau',), ('Merveille Goblet',), ('Yves De Winter',), ('Ludovic Butelle',), ('Matz Sels',), ('Marco Bizot',), ('Didier Ovono',), ('Davino Verhulst',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Guillaume Hubert',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Vagner',), ('Darren Keet',), ('Laurent Henkinet',), ('William Dutoit',), ('Ludovic Butelle',), ('Matz Sels',), ('Marco Bizot',), ('Didier Ovono',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('William Dutoit',), ('Ludovic Butelle',), ('Victor Valdes',), ('Jean-Francois Gillet',), ('Kenny Steppe',), ('Vagner',), ('Davino Verhulst',), ('Darren Keet',), ('Laurent Henkinet',), ('Silvio Proto',), ('Matz Sels',), ('Marco Bizot',), ('Wouter Biebauw',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('William Dutoit',), ('Ludovic Butelle',), ('Guillaume Hubert',), ('Wouter Biebauw',), ('Sammy Bossuyt',), ('Vagner',), ('Davino Verhulst',), ('Darren Keet',), ('Laurent Henkinet',), ('Silvio Proto',), ('Matz Sels',), ('Marco Bizot',), ('Jean-Francois Gillet',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('William Dutoit',), ('Ludovic Butelle',), ('Victor Valdes',), ('Matz Sels',), ('Wouter Biebauw',), ('Vagner',), ('Davino Verhulst',), ('Darren Keet',), ('Laurent Henkinet',), ('Sammy Bossuyt',), ('Darren Keet',), ('Koen Van Langendonck',), ('William Dutoit',), ('Jean-Francois Gillet',), ('Silvio Proto',), ('Nicolas Penneteau',), ('Yohan Thuram Ulien',), ('Silvio Proto',), ('Marco Bizot',), ('Jean-Francois Gillet',), ('Kenny Steppe',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Kristof van Hout',), ('William Dutoit',), ('Sebastien Bruzzese',), ('Ofir Marciano',), ('Boubacar Barry Copa',), ('Laurent Henkinet',), ('Laszlo Koteles',), ('Didier Ovono',), ('Matz Sels',), ('Rudy Riou',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Darren Keet',), ('Nicolas Penneteau',), ('Laurent Henkinet',), ('William Dutoit',), ('Sinan Bolat',), ('Laszlo Koteles',), ('Matz Sels',), ('Rudy Riou',), ('Boubacar Barry Copa',), ('Ofir Marciano',), ('Didier Ovono',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Vagner',), ('Darren Keet',), ('Laurent Henkinet',), ('William Dutoit',), ('Sinan Bolat',), ('Matz Sels',), ('Marco Bizot',), ('Didier Ovono',), ('Boubacar Barry Copa',), ('Nicolas Penneteau',), ('Rudy Riou',), ('Koen Van Langendonck',), ('Silvio Proto',), ('Yohan Thuram Ulien',), ('Jean-Francois Gillet',), ('Sammy Bossuyt',), ('Vagner',), ('Boubacar Barry Copa',), ('Darren Keet',), ('Laurent Henkinet',)]",[],Query results mismatch,0.0012803749996237457
1292,thrombosis_prediction,False,challenging,"SELECT p.ID, l.""UA"", e.""aCL IgG"" 
FROM Patient p 
JOIN Laboratory l ON p.ID = l.ID 
JOIN Examination e ON p.ID = e.ID 
WHERE p.SEX = 'F' AND l.""UA"" BETWEEN 3.8 AND 4.9 
ORDER BY l.""UA"" DESC 
LIMIT 1","[(1.3, 2.0, 3)]","[(102490, 4.9, 2.3)]",Query results mismatch,0.00047487500705756247
9,california_schools,True,simple,"SELECT COUNT(*) 
FROM frpm 
JOIN satscores ON frpm.""CDSCode"" = satscores.cds 
WHERE satscores.AvgScrMath > 560 AND frpm.""Charter Funding Type"" = 'Directly funded'","[(2,)]","[(2,)]",Query executed successfully,0.0014865830016788095
152,financial,False,moderate,,,,Query generation failed,
1254,thrombosis_prediction,False,moderate,,,,Query generation failed,
609,codebase_community,True,simple,SELECT COUNT(*) FROM posts WHERE score = 10,"[(741,)]","[(741,)]",Query executed successfully,0.026909499982139096
823,superhero,False,moderate,SELECT COUNT(*) FROM superhero WHERE publisher_id = 1 AND gender_id = 2,"[(111,)]","[(2,)]",Query results mismatch,9.883299935609102e-05
467,card_games,False,simple,SELECT COUNT(*) FROM cards WHERE setCode = '10E',"[(383,)]","[(508,)]",Query results mismatch,0.018542083009378985
489,card_games,True,simple,SELECT keyruneCode FROM sets WHERE code = 'PKHC',"[('KHC',)]","[('KHC',)]",Query executed successfully,1.362498733215034e-05
1133,european_football_2,True,simple,SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01',"[(9,)]","[(9,)]",Query executed successfully,0.0011276250006631017
535,codebase_community,False,simple,"SELECT COUNT(DISTINCT v.UserId) AS UsersWithMoreThan100UpvotesAndMoreThan1Downvote
FROM votes v
JOIN users u ON v.UserId = u.Id
WHERE u.UpVotes > 100 AND u.DownVotes > 1","[(207,)]","[(51,)]",Query results mismatch,0.005963167001027614
1019,formula_1,True,moderate,"SELECT AVG(milliseconds) AS average_lap_time 
FROM lapTimes 
WHERE raceId IN (SELECT raceId 
                 FROM races 
                 WHERE circuitId IN (SELECT circuitId 
                                     FROM circuits 
                                     WHERE country = 'Italy'))","[(90064.80409421088,)]","[(90064.80409421088,)]",Query executed successfully,0.0023618339910171926
1154,thrombosis_prediction,False,simple,"SELECT SEX, Birthday, ""First Date"", Diagnosis 
FROM Patient 
WHERE ID = 163109;","[('F', '1950-10-16', '1997-07-01', 'CNS lupus')]","[('F', '1950-10-16', None, 'SLE')]",Query results mismatch,3.6290992284193635e-05
54,california_schools,True,simple,"SELECT School, MailZip 
FROM schools 
WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'","[('Fairview Middle', '93926-0238')]","[('Fairview Middle', '93926-0238')]",Query executed successfully,0.0033549579966347665
53,california_schools,False,simple,SELECT COUNT(*) AS Total_Test_Takers FROM schools WHERE MailCity = 'Fresno',"[(6,), (5,), (328,), (335,), (2216,), (74,), (8,), (113,), (10,), (334,), (0,), (104,), (0,), (421,), (0,), (368,), (144,), (211,), (212,), (217,), (0,), (0,), (0,), (0,), (0,), (368,), (0,), (368,), (114,), (0,), (1,), (113,)]","[(273,)]",Query results mismatch,0.004708166990894824
34,california_schools,False,moderate,"SELECT ""Percent (%) Eligible Free (Ages 5-17)"" FROM frpm WHERE ""School Name"" = 'FAME Public Charter'","[(0.20174165457184326,)]","[(0.516822429906542,)]",Query results mismatch,0.001964750001206994
904,formula_1,True,moderate,"SELECT races.name AS race, races.year 
FROM races 
JOIN lapTimes ON races.raceId = lapTimes.raceId 
WHERE lapTimes.driverId = 30 
ORDER BY lapTimes.milliseconds ASC 
LIMIT 1","[('Austrian Grand Prix', 2003)]","[('Austrian Grand Prix', 2003)]",Query executed successfully,0.010969249997287989
542,codebase_community,False,simple,"SELECT COUNT(*) AS total_comments 
FROM comments 
WHERE post_id IN (
    SELECT id 
    FROM posts 
    WHERE owner_user_id = (
        SELECT id 
        FROM users 
        WHERE display_name = 'csgillespie'
    )
)",,,Error executing query: no such column: owner_user_id,
1341,student_club,False,simple,SELECT * FROM event WHERE event_name = 'Spring Budget Review',"[('Conference Room BA 452',)]","[('rectsBOijA23838qh', 'Spring Budget Review', '2020-01-12T03:00:00', 'Budget', 'Officers and Budget Committee only', 'Conference Room BA 452', 'Open')]",Query results mismatch,2.8958020266145468e-05
279,toxicology,False,simple,SELECT * FROM bond WHERE bond_id = 'TR001_10_11',"[('+',)]","[('TR001_10_11', 'TR001', '=')]",Query results mismatch,7.554198964498937e-05
491,card_games,True,simple,SELECT name FROM sets WHERE releaseDate = '2017-06-09',"[('Commander Anthology',)]","[('Commander Anthology',)]",Query executed successfully,0.0001718339917715639
1314,student_club,False,simple,"SELECT first_name || ' ' || last_name AS full_name
FROM member
WHERE link_to_major = 'recxK3MHQFbR9J5uO' OR link_to_major = 'rec7BxKpjJ7bNph3O' OR link_to_major = 'recdIBgeU38UbV2sy'","[('Amy', 'Firth')]","[('Angela Sanders',), ('Grant Gilmour',), ('Luisa Guidi',), ('Kevin Pierce',)]",Query results mismatch,6.466699414886534e-05
1161,thrombosis_prediction,False,challenging,,,,Query generation failed,
268,toxicology,False,challenging,SELECT * FROM bond WHERE bond_id = 'TR001_10_11',"[('c',), ('o',)]","[('TR001_10_11', 'TR001', '=')]",Query results mismatch,2.2374995751306415e-05
841,superhero,False,simple,"SELECT weight_kg, race_id FROM superhero WHERE id = 40","[(63, 'Human')]","[(63, 24)]",Query results mismatch,4.083299427293241e-05
1102,european_football_2,False,moderate,"SELECT Player.player_name 
FROM Player 
INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id 
WHERE Player_Attributes.overall_rating = 77 
AND Player_Attributes.date = '2016-06-23' 
ORDER BY strftime('%Y-%m-%d', Player.birthday) 
LIMIT 1","[('Laurent Ciman',)]",[],Query results mismatch,0.021794166998006403
847,formula_1,False,simple,"SELECT drivers.surname 
FROM drivers 
JOIN qualifying ON drivers.driverId = qualifying.driverId 
JOIN races ON qualifying.raceId = races.raceId 
JOIN results ON results.raceId = races.raceId AND results.driverId = drivers.driverId 
WHERE races.round = 19 AND qualifying.position = 1 
ORDER BY results.fastestLapTime ASC 
LIMIT 1","[('Fisichella',)]","[('Vettel',)]",Query results mismatch,0.01664441599859856
1300,thrombosis_prediction,False,moderate,"SELECT p.Diagnosis
FROM Laboratory l
JOIN Patient p ON l.ID = p.ID
WHERE l.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG <= 150)","[('SLE',)]","[(""Raynaud's phenomenon"",), ('SLE',), ('PSS',), ('DM, RA',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('SLE',), ('Adult STILL',), ('DM',), ('SLE',), ('SLE, SJS',), ('SLE, SJS susp',), ('SJS',), ('ITP',), ('SJS, MCTD',), ('SJS',), ('SLE, SJS',), ('SLE',), ('SLE',), ('SJS',), ('RA',), ('Adult STILL',), ('MCTD, SJS',), ('MCTD, SJS',), ('SLE',), ('SLE',), ('PM',), ('SLE, ITP',), ('DM (amyopathic)',), ('RA',), ('RA',), ('SLE',), ('SJS',)]",Query results mismatch,0.00398645902168937
1120,european_football_2,False,moderate,"SELECT Player.player_name, Match.away_team_goal 
FROM Player 
JOIN Match ON Player.player_api_id = Match.away_player_1 OR Player.player_api_id = Match.away_player_2 
WHERE Player.player_name = 'Daan Smith' OR Player.player_name = 'Filipe Ferreira'","[(29,)]","[('Filipe Ferreira', 1)]",Query results mismatch,0.04068437498062849
1441,student_club,False,moderate,SELECT COUNT(*) FROM member WHERE link_to_major = 'recxK3MHQFbR9J5uO',"[(2,)]","[(1,)]",Query results mismatch,6.441600271500647e-05
920,formula_1,True,simple,SELECT DISTINCT year FROM races WHERE circuitId = 9,"[(2009,), (2008,), (2007,), (2006,), (2005,), (2004,), (2003,), (2002,), (2001,), (2000,), (1999,), (1998,), (1997,), (1996,), (1995,), (1994,), (1993,), (1992,), (1991,), (1990,), (2010,), (1989,), (1988,), (1987,), (1985,), (1983,), (1981,), (1979,), (1977,), (1975,), (1973,), (1971,), (1969,), (1967,), (1965,), (1963,), (1960,), (1958,), (1956,), (1954,), (1953,), (1952,), (1951,), (1950,), (2011,), (2012,), (2013,), (2014,), (2015,), (2016,), (2017,)]","[(2009,), (2008,), (2007,), (2006,), (2005,), (2004,), (2003,), (2002,), (2001,), (2000,), (1999,), (1998,), (1997,), (1996,), (1995,), (1994,), (1993,), (1992,), (1991,), (1990,), (2010,), (1989,), (1988,), (1987,), (1985,), (1983,), (1981,), (1979,), (1977,), (1975,), (1973,), (1971,), (1969,), (1967,), (1965,), (1963,), (1960,), (1958,), (1956,), (1954,), (1953,), (1952,), (1951,), (1950,), (2011,), (2012,), (2013,), (2014,), (2015,), (2016,), (2017,)]",Query executed successfully,0.00015162501949816942
648,codebase_community,True,simple,"SELECT u.DisplayName, u.WebsiteUrl 
FROM users u 
JOIN posts p ON u.Id = p.OwnerUserId 
WHERE p.FavoriteCount > 150","[('Fabian Fagerholm', 'http://www.cs.helsinki.fi/fabian.fagerholm/'), ('claws', None)]","[('Fabian Fagerholm', 'http://www.cs.helsinki.fi/fabian.fagerholm/'), ('claws', None)]",Query executed successfully,0.03158762498060241
113,financial,False,simple,"SELECT c.birth_date 
FROM client c 
JOIN loan l ON c.client_id = l.account_id 
WHERE l.amount = 98832 AND l.date = '1996-01-03'","[('1970-09-10',)]","[('1974-05-31',)]",Query results mismatch,5.908298771828413e-05
686,codebase_community,False,simple,"SELECT COUNT(*) 
FROM posts 
WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)","[(1,), (2,), (3,), (4,), (6,), (7,), (10,), (17,), (22,), (23,), (25,), (26,), (30,), (31,), (33,), (35,), (36,), (50,), (53,), (58,), (73,), (75,), (97,), (100,), (103,), (109,), (114,), (118,), (124,), (125,), (128,), (130,), (134,), (138,), (145,), (146,), (152,), (155,), (161,), (165,), (166,), (168,), (170,), (173,), (175,), (181,), (183,), (192,), (194,), (196,), (203,), (206,), (213,), (220,), (222,), (224,), (225,), (256,), (257,), (258,), (267,), (269,), (270,), (276,), (277,), (283,), (287,), (288,), (290,), (298,), (305,), (321,), (322,), (328,), (346,), (354,), (362,), (363,), (372,), (373,), (396,), (411,), (414,), (418,), (421,), (423,), (452,), (480,), (481,), (485,), (486,), (490,), (498,), (507,), (517,), (527,), (534,), (539,), (548,), (555,), (562,), (563,), (564,), (570,), (573,), (575,), (577,), (581,), (608,), (612,), (614,), (622,), (631,), (638,), (641,), (643,), (645,), (652,), (665,), (672,), (712,), (715,), (723,), (725,), (726,), (764,), (775,), (779,), (790,), (795,), (798,), (806,), (812,), (825,), (834,), (837,), (841,), (856,), (859,), (866,), (868,), (870,), (871,), (877,), (884,), (886,), (887,), (890,), (897,), (898,), (899,), (913,), (920,), (924,), (927,), (928,), (942,), (946,), (949,), (951,), (955,), (961,), (973,), (980,), (1001,), (1015,), (1016,), (1023,), (1028,), (1040,), (1047,), (1052,), (1053,), (1060,), (1062,), (1063,), (1082,), (1084,), (1099,), (1112,), (1115,), (1133,), (1142,), (1149,), (1164,), (1169,), (1173,), (1174,), (1184,), (1194,), (1205,), (1207,), (1223,), (1241,), (1252,), (1256,), (1266,), (1268,), (1274,), (1278,), (1286,), (1289,), (1292,), (1293,), (1296,), (1308,), (1315,), (1337,), (1350,), (1352,), (1357,), (1380,), (1385,), (1386,), (1389,), (1399,), (1405,), (1412,), (1424,), (1430,), (1432,), (1444,), (1447,), (1455,), (1458,), (1459,), (1460,), (1462,), (1471,), (1475,), (1517,), (1519,), (1520,), (1521,), (1525,), (1531,), (1536,), (1538,), (1540,), (1542,), (1555,), (1556,), (1562,), (1564,), (1571,), (1576,), (1580,), (1590,), (1595,), (1601,), (1610,), (1611,), (1637,), (1645,), (1646,), (1651,), (1660,), (1667,), (1668,), (1676,), (1699,), (1708,), (1709,), (1713,), (1719,), (1729,), (1735,), (1736,), (1737,), (1753,), (1761,), (1764,), (1773,), (1781,), (1787,), (1797,), (1799,), (1805,), (1807,), (1812,), (1815,), (1818,), (1822,), (1826,), (1829,), (1838,), (1844,), (1848,), (1850,), (1853,), (1856,), (1862,), (1863,), (1866,), (1875,), (1881,), (1883,), (1915,), (1927,), (1935,), (1961,), (1963,), (1964,), (1972,), (1980,), (1995,), (1998,), (2002,), (2007,), (2032,), (2035,), (2037,), (2038,), (2061,), (2066,), (2067,), (2077,), (2085,), (2086,), (2091,), (2092,), (2093,), (2099,), (2104,), (2108,), (2111,), (2116,), (2119,), (2121,), (2125,), (2131,), (2134,), (2140,), (2142,), (2149,), (2151,), (2167,), (2171,), (2179,), (2181,), (2182,), (2198,), (2213,), (2219,), (2220,), (2230,), (2234,), (2244,), (2245,), (2248,), (2256,), (2259,), (2262,), (2272,), (2290,), (2291,), (2296,), (2306,), (2328,), (2335,), (2337,), (2344,), (2348,), (2350,), (2352,), (2356,), (2358,), (2374,), (2377,), (2379,), (2390,), (2391,), (2397,), (2401,), (2419,), (2423,), (2427,), (2430,), (2432,), (2455,), (2457,), (2467,), (2469,), (2476,), (2481,), (2492,), (2493,), (2499,), (2504,), (2513,), (2516,), (2537,), (2541,), (2547,), (2563,), (2572,), (2573,), (2576,), (2579,), (2591,), (2592,), (2597,), (2602,), (2611,), (2613,), (2617,), (2619,), (2623,), (2628,), (2635,), (2639,), (2641,), (2650,), (2661,), (2670,), (2675,), (2679,), (2684,), (2688,), (2689,), (2691,), (2715,), (2717,), (2728,), (2730,), (2742,), (2743,), (2746,), (2748,), (2764,), (2768,), (2770,), (2772,), (2777,), (2788,), (2794,), (2806,), (2819,), (2824,), (2828,), (2844,), (2846,), (2849,), (2852,), (2854,), (2860,), (2863,), (2886,), (2892,), (2893,), (2904,), (2909,), (2910,), (2914,), (2917,), (2918,), (2934,), (2938,), (2948,), (2950,), (2957,), (2962,), (2971,), (2972,), (2975,), (2976,), (2981,), (2982,), (2988,), (3006,), (3024,), (3031,), (3038,), (3048,), (3051,), (3052,), (3069,), (3082,), (3086,), (3091,), (3104,), (3105,), (3112,), (3113,), (3115,), (3136,), (3140,), (3143,), (3158,), (3165,), (3173,), (3175,), (3176,), (3179,), (3181,), (3194,), (3199,), (3200,), (3212,), (3215,), (3235,), (3238,), (3242,), (3244,), (3249,), (3252,), (3259,), (3262,), (3270,), (3271,), (3275,), (3286,), (3287,), (3294,), (3316,), (3321,), (3324,), (3328,), (3331,), (3333,), (3342,), (3359,), (3362,), (3364,), (3369,), (3372,), (3377,), (3381,), (3383,), (3386,), (3390,), (3392,), (3400,), (3407,), (3412,), (3413,), (3425,), (3438,), (3445,), (3446,), (3458,), (3460,), (3463,), (3466,), (3474,), (3476,), (3479,), (3484,), (3489,), (3496,), (3504,), (3511,), (3514,), (3516,), (3519,), (3520,), (3526,), (3537,), (3539,), (3542,), (3549,), (3556,), (3559,), (3561,), (3564,), (3575,), (3584,), (3586,), (3589,), (3595,), (3609,), (3611,), (3614,), (3616,), (3628,), (3634,), (3640,), (3652,), (3653,), (3661,), (3685,), (3695,), (3698,), (3704,), (3707,), (3708,), (3713,), (3719,), (3724,), (3730,), (3734,), (3746,), (3749,), (3754,), (3757,), (3758,), (3772,), (3779,), (3782,), (3787,), (3788,), (3795,), (3804,), (3810,), (3814,), (3818,), (3820,), (3826,), (3842,), (3845,), (3849,), (3853,), (3857,), (3872,), (3874,), (3879,), (3888,), (3890,), (3892,), (3893,), (3898,), (3902,), (3907,), (3911,), (3915,), (3921,), (3930,), (3931,), (3943,), (3944,), (3947,), (3965,), (3967,), (3982,), (3984,), (3989,), (3997,), (3999,), (4004,), (4009,), (4013,), (4017,), (4019,), (4023,), (4025,), (4030,), (4034,), (4040,), (4044,), (4052,), (4058,), (4062,), (4068,), (4072,), (4075,), (4081,), (4084,), (4086,), (4089,), (4093,), (4099,), (4101,), (4104,), (4111,), (4121,), (4125,), (4131,), (4150,), (4165,), (4175,), (4185,), (4187,), (4191,), (4200,), (4211,), (4219,), (4220,), (4239,), (4245,), (4252,), (4258,), (4259,), (4267,), (4272,), (4276,), (4279,), (4284,), (4292,), (4294,), (4296,), (4298,), (4303,), (4305,), (4312,), (4316,), (4320,), (4328,), (4331,), (4334,), (4335,), (4337,), (4341,), (4353,), (4354,), (4356,), (4360,), (4364,), (4367,), (4368,), (4383,), (4392,), (4394,), (4396,), (4401,), (4407,), (4422,), (4429,), (4437,), (4441,), (4445,), (4451,), (4453,), (4462,), (4465,), (4466,), (4471,), (4473,), (4485,), (4489,), (4496,), (4498,), (4510,), (4517,), (4528,), (4530,), (4539,), (4543,), (4544,), (4551,), (4556,), (4561,), (4568,), (4569,), (4575,), (4579,), (4580,), (4585,), (4600,), (4603,), (4608,), (4609,), (4610,), (4612,), (4620,), (4639,), (4640,), (4642,), (4649,), (4652,), (4655,), (4658,), (4659,), (4663,), (4671,), (4685,), (4687,), (4689,), (4691,), (4700,), (4708,), (4713,), (4717,), (4734,), (4735,), (4737,), (4753,), (4756,), (4759,), (4762,), (4766,), (4768,), (4775,), (4783,), (4799,), (4805,), (4810,), (4812,), (4814,), (4816,), (4818,), (4823,), (4830,), (4831,), (4832,), (4834,), (4839,), (4844,), (4854,), (4856,), (4858,), (4868,), (4878,), (4892,), (4898,), (4901,), (4912,), (4920,), (4930,), (4934,), (4936,), (4939,), (4942,), (4945,), (4949,), (4959,), (4961,), (4964,), (4970,), (4978,), (4980,), (4983,), (4987,), (4989,), (4991,), (4997,), (5004,), (5007,), (5013,), (5015,), (5025,), (5026,), (5038,), (5042,), (5056,), (5058,), (5062,), (5065,), (5070,), (5073,), (5077,), (5078,), (5079,), (5081,), (5092,), (5093,), (5097,), (5109,), (5115,), (5119,), (5135,), (5149,), (5150,), (5158,), (5159,), (5160,), (5170,), (5171,), (5172,), (5184,), (5187,), (5189,), (5195,), (5196,), (5206,), (5207,), (5220,), (5228,), (5235,), (5238,), (5247,), (5250,), (5253,), (5270,), (5271,), (5275,), (5278,), (5288,), (5290,), (5292,), (5293,), (5299,), (5304,), (5305,), (5306,), (5308,), (5321,), (5327,), (5333,), (5340,), (5343,), (5344,), (5346,), (5347,), (5351,), (5354,), (5360,), (5364,), (5366,), (5382,), (5387,), (5392,), (5399,), (5414,), (5418,), (5431,), (5434,), (5448,), (5450,), (5452,), (5457,), (5462,), (5465,), (5479,), (5487,), (5502,), (5504,), (5517,), (5525,), (5543,), (5559,), (5563,), (5571,), (5591,), (5601,), (5604,), (5614,), (5617,), (5619,), (5634,), (5647,), (5654,), (5656,), (5675,), (5680,), (5682,), (5686,), (5690,), (5691,), (5700,), (5713,), (5727,), (5728,), (5733,), (5734,), (5747,), (5750,), (5757,), (5768,), (5774,), (5782,), (5786,), (5788,), (5791,), (5792,), (5807,), (5808,), (5819,), (5826,), (5827,), (5836,), (5842,), (5844,), (5847,), (5853,), (5854,), (5859,), (5880,), (5885,), (5893,), (5903,), (5912,), (5913,), (5918,), (5926,), (5934,), (5935,), (5937,), (5945,), (5952,), (5954,), (5960,), (5962,), (5967,), (5969,), (5995,), (5997,), (6005,), (6008,), (6013,), (6020,), (6021,), (6022,), (6026,), (6033,), (6042,), (6044,), (6046,), (6050,), (6056,), (6063,), (6067,), (6071,), (6074,), (6076,), (6077,), (6079,), (6081,), (6093,), (6104,), (6119,), (6122,), (6127,), (6139,), (6141,), (6142,), (6146,), (6151,), (6152,), (6155,), (6163,), (6169,), (6176,), (6181,), (6187,), (6189,), (6195,), (6206,), (6208,), (6214,), (6219,), (6224,), (6225,), (6226,), (6232,), (6234,), (6239,), (6247,), (6252,), (6265,), (6275,), (6279,), (6281,), (6294,), (6298,), (6302,), (6304,), (6306,), (6308,), (6309,), (6312,), (6314,), (6318,), (6329,), (6330,), (6342,), (6350,), (6353,), (6355,), (6358,), (6364,), (6368,), (6380,), (6400,), (6410,), (6412,), (6421,), (6442,), (6448,), (6453,), (6454,), (6455,), (6468,), (6469,), (6473,), (6475,), (6477,), (6478,), (6484,), (6487,), (6492,), (6493,), (6498,), (6502,), (6505,), (6513,), (6524,), (6534,), (6538,), (6540,), (6544,), (6549,), (6557,), (6579,), (6581,), (6582,), (6599,), (6601,), (6604,), (6609,), (6613,), (6624,), (6630,), (6637,), (6638,), (6652,), (6653,), (6655,), (6658,), (6660,), (6664,), (6670,), (6684,), (6688,), (6702,), (6705,), (6706,), (6720,), (6723,), (6728,), (6731,), (6734,), (6740,), (6753,), (6755,), (6758,), (6759,), (6770,), (6772,), (6773,), (6776,), (6779,), (6780,), (6791,), (6794,), (6795,), (6806,), (6809,), (6814,), (6824,), (6827,), (6835,), (6840,), (6841,), (6852,), (6853,), (6855,), (6856,), (6860,), (6865,), (6867,), (6870,), (6874,), (6876,), (6883,), (6890,), (6896,), (6907,), (6912,), (6913,), (6920,), (6927,), (6939,), (6940,), (6943,), (6946,), (6954,), (6956,), (6958,), (6966,), (6989,), (7004,), (7007,), (7009,), (7015,), (7020,), (7022,), (7029,), (7036,), (7040,), (7045,), (7047,), (7048,), (7049,), (7057,), (7059,), (7070,), (7074,), (7079,), (7084,), (7088,), (7089,), (7100,), (7101,), (7102,), (7110,), (7111,), (7112,), (7129,), (7132,), (7146,), (7152,), (7155,), (7156,), (7173,), (7175,), (7180,), (7185,), (7197,), (7200,), (7202,), (7207,), (7208,), (7211,), (7218,), (7223,), (7224,), (7225,), (7233,), (7238,), (7239,), (7240,), (7244,), (7249,), (7250,), (7259,), (7261,), (7263,), (7268,), (7270,), (7271,), (7278,), (7279,), (7286,), (7292,), (7295,), (7307,), (7308,), (7314,), (7316,), (7318,), (7319,), (7322,), (7344,), (7348,), (7351,), (7357,), (7358,), (7362,), (7366,), (7376,), (7385,), (7389,), (7394,), (7400,), (7402,), (7415,), (7419,), (7422,), (7426,), (7429,), (7430,), (7432,), (7438,), (7439,), (7440,), (7447,), (7450,), (7457,), (7466,), (7467,), (7471,), (7475,), (7476,), (7481,), (7487,), (7497,), (7508,), (7513,), (7515,), (7519,), (7527,), (7531,), (7532,), (7535,), (7542,), (7551,), (7554,), (7555,), (7559,), (7562,), (7579,), (7581,), (7595,), (7610,), (7611,), (7613,), (7625,), (7630,), (7631,), (7637,), (7638,), (7648,), (7675,), (7679,), (7683,), (7698,), (7699,), (7701,), (7714,), (7718,), (7720,), (7723,), (7727,), (7730,), (7732,), (7734,), (7754,), (7757,), (7766,), (7771,), (7774,), (7775,), (7780,), (7782,), (7790,), (7795,), (7799,), (7813,), (7815,), (7825,), (7826,), (7829,), (7836,), (7839,), (7845,), (7850,), (7853,), (7860,), (7876,), (7882,), (7884,), (7899,), (7900,), (7902,), (7903,), (7912,), (7915,), (7919,), (7923,), (7925,), (7929,), (7935,), (7939,), (7941,), (7946,), (7948,), (7952,), (7956,), (7959,), (7975,), (7977,), (7999,), (8000,), (8006,), (8013,), (8015,), (8019,), (8021,), (8025,), (8029,), (8033,), (8040,), (8052,), (8055,), (8058,), (8063,), (8071,), (8072,), (8082,), (8083,), (8088,), (8090,), (8096,), (8104,), (8106,), (8107,), (8114,), (8117,), (8119,), (8126,), (8135,), (8137,), (8143,), (8148,), (8151,), (8152,), (8167,), (8180,), (8182,), (8184,), (8185,), (8192,), (8196,), (8206,), (8213,), (8222,), (8225,), (8232,), (8237,), (8242,), (8243,), (8251,), (8254,), (8261,), (8266,), (8267,), (8271,), (8273,), (8285,), (8291,), (8297,), (8300,), (8303,), (8306,), (8309,), (8318,), (8321,), (8328,), (8330,), (8334,), (8335,), (8340,), (8342,), (8344,), (8347,), (8351,), (8370,), (8371,), (8373,), (8375,), (8377,), (8396,), (8399,), (8401,), (8405,), (8407,), (8419,), (8428,), (8447,), (8455,), (8456,), (8466,), (8472,), (8485,), (8487,), (8501,), (8504,), (8505,), (8511,), (8513,), (8514,), (8515,), (8528,), (8545,), (8557,), (8561,), (8567,), (8572,), (8573,), (8583,), (8590,), (8598,), (8604,), (8605,), (8614,), (8617,), (8625,), (8634,), (8642,), (8649,), (8661,), (8662,), (8663,), (8664,), (8689,), (8692,), (8695,), (8696,), (8714,), (8718,), (8729,), (8732,), (8733,), (8734,), (8742,), (8744,), (8749,), (8750,), (8754,), (8755,), (8774,), (8777,), (8779,), (8784,), (8788,), (8797,), (8798,), (8799,), (8807,), (8812,), (8817,), (8818,), (8823,), (8844,), (8846,), (8854,), (8859,), (8868,), (8877,), (8883,), (8891,), (8903,), (8904,), (8907,), (8911,), (8918,), (8924,), (8930,), (8933,), (8955,), (8956,), (8959,), (8960,), (8974,), (8980,), (8997,), (9001,), (9013,), (9016,), (9023,), (9027,), (9029,), (9036,), (9040,), (9050,), (9053,), (9062,), (9067,), (9068,), (9071,), (9074,), (9085,), (9099,), (9104,), (9105,), (9109,), (9111,), (9116,), (9127,), (9131,), (9137,), (9155,), (9156,), (9159,), (9171,), (9182,), (9192,), (9198,), (9201,), (9202,), (9220,), (9225,), (9233,), (9240,), (9242,), (9253,), (9267,), (9275,), (9276,), (9281,), (9283,), (9311,), (9312,), (9315,), (9318,), (9322,), (9327,), (9329,), (9331,), (9334,), (9342,), (9354,), (9357,), (9358,), (9365,), (9378,), (9385,), (9390,), (9396,), (9398,), (9405,), (9407,), (9415,), (9425,), (9427,), (9429,), (9446,), (9449,), (9454,), (9456,), (9457,), (9475,), (9477,), (9478,), (9483,), (9494,), (9500,), (9501,), (9506,), (9507,), (9508,), (9510,), (9512,), (9535,), (9541,), (9542,), (9549,), (9557,), (9561,), (9566,), (9573,), (9581,), (9586,), (9587,), (9590,), (9592,), (9599,), (9604,), (9607,), (9610,), (9614,), (9617,), (9623,), (9625,), (9626,), (9627,), (9629,), (9637,), (9653,), (9656,), (9664,), (9674,), (9685,), (9691,), (9692,), (9693,), (9695,), (9699,), (9712,), (9715,), (9718,), (9729,), (9735,), (9738,), (9739,), (9745,), (9749,), (9751,), (9759,), (9763,), (9767,), (9775,), (9779,), (9785,), (9801,), (9807,), (9809,), (9810,), (9825,), (9833,), (9836,), (9839,), (9842,), (9845,), (9850,), (9852,), (9854,), (9859,), (9867,), (9868,), (9871,), (9872,), (9879,), (9885,), (9886,), (9892,), (9893,), (9895,), (9898,), (9904,), (9913,), (9918,), (9920,), (9930,), (9931,), (9937,), (9951,), (9959,), (9961,), (9962,), (9971,), (9972,), (9981,), (9987,), (9988,), (9990,), (10001,), (10005,), (10008,), (10011,), (10017,), (10020,), (10030,), (10036,), (10037,), (10038,), (10049,), (10053,), (10059,), (10062,), (10066,), (10074,), (10075,), (10078,), (10079,), (10088,), (10092,), (10095,), (10111,), (10137,), (10146,), (10159,), (10160,), (10162,), (10167,), (10171,), (10177,), (10182,), (10185,), (10204,), (10211,), (10213,), (10220,), (10225,), (10228,), (10234,), (10236,), (10238,), (10241,), (10250,), (10251,), (10267,), (10271,), (10285,), (10289,), (10302,), (10305,), (10308,), (10309,), (10316,), (10328,), (10337,), (10338,), (10342,), (10343,), (10347,), (10353,), (10356,), (10359,), (10363,), (10366,), (10370,), (10375,), (10378,), (10388,), (10396,), (10411,), (10419,), (10420,), (10423,), (10425,), (10427,), (10429,), (10433,), (10439,), (10441,), (10444,), (10454,), (10459,), (10464,), (10478,), (10480,), (10497,), (10501,), (10510,), (10517,), (10519,), (10532,), (10534,), (10539,), (10540,), (10543,), (10544,), (10546,), (10551,), (10553,), (10557,), (10562,), (10564,), (10567,), (10569,), (10574,), (10578,), (10591,), (10594,), (10597,), (10603,), (10604,), (10607,), (10608,), (10613,), (10621,), (10639,), (10640,), (10649,), (10655,), (10672,), (10676,), (10680,), (10687,), (10697,), (10700,), (10702,), (10712,), (10723,), (10726,), (10744,), (10750,), (10766,), (10773,), (10774,), (10784,), (10787,), (10788,), (10795,), (10800,), (10807,), (10821,), (10827,), (10832,), (10838,), (10856,), (10858,), (10867,), (10884,), (10890,), (10900,), (10904,), (10905,), (10907,), (10910,), (10926,), (10943,), (10947,), (10951,), (10964,), (10965,), (10975,), (10985,), (10986,), (10987,), (10996,), (11000,), (11008,), (11009,), (11018,), (11021,), (11033,), (11043,), (11050,), (11054,), (11060,), (11064,), (11066,), (11079,), (11084,), (11085,), (11087,), (11088,), (11093,), (11096,), (11102,), (11105,), (11107,), (11108,), (11109,), (11112,), (11113,), (11115,), (11120,), (11127,), (11131,), (11135,), (11141,), (11142,), (11149,), (11165,), (11168,), (11172,), (11175,), (11178,), (11182,), (11189,), (11191,), (11193,), (11200,), (11202,), (11209,), (11210,), (11219,), (11231,), (11233,), (11249,), (11252,), (11256,), (11257,), (11263,), (11266,), (11273,), (11280,), (11290,), (11296,), (11310,), (11315,), (11336,), (11337,), (11347,), (11351,), (11359,), (11368,), (11372,), (11375,), (11381,), (11384,), (11385,), (11402,), (11405,), (11406,), (11412,), (11413,), (11414,), (11418,), (11419,), (11420,), (11421,), (11437,), (11440,), (11448,), (11450,), (11457,), (11459,), (11462,), (11473,), (11490,), (11494,), (11505,), (11527,), (11531,), (11541,), (11544,), (11546,), (11551,), (11553,), (11578,), (11580,), (11583,), (11590,), (11595,), (11602,), (11607,), (11609,), (11622,), (11628,), (11632,), (11634,), (11636,), (11645,), (11646,), (11650,), (11653,), (11657,), (11659,), (11661,), (11662,), (11676,), (11677,), (11680,), (11682,), (11691,), (11699,), (11703,), (11707,), (11713,), (11714,), (11724,), (11746,), (11764,), (11769,), (11795,), (11800,), (11807,), (11808,), (11812,), (11821,), (11829,), (11832,), (11835,), (11850,), (11856,), (11859,), (11869,), (11872,), (11876,), (11887,), (11899,), (11919,), (11923,), (11924,), (11927,), (11935,), (11945,), (11947,), (11950,), (11959,), (11960,), (11971,), (11985,), (11987,), (11989,), (11991,), (12002,), (12005,), (12007,), (12023,), (12029,), (12030,), (12039,), (12041,), (12046,), (12053,), (12054,), (12059,), (12067,), (12068,), (12069,), (12072,), (12081,), (12087,), (12090,), (12094,), (12107,), (12112,), (12118,), (12119,), (12124,), (12128,), (12140,), (12151,), (12152,), (12155,), (12156,), (12163,), (12164,), (12174,), (12177,), (12186,), (12187,), (12197,), (12200,), (12205,), (12209,), (12223,), (12225,), (12231,), (12232,), (12260,), (12261,), (12262,), (12273,), (12275,), (12282,), (12285,), (12290,), (12294,), (12305,), (12313,), (12320,), (12330,), (12341,), (12345,), (12355,), (12362,), (12378,), (12382,), (12385,), (12386,), (12389,), (12392,), (12395,), (12397,), (12398,), (12404,), (12405,), (12410,), (12411,), (12412,), (12415,), (12421,), (12425,), (12432,), (12435,), (12438,), (12446,), (12461,), (12465,), (12466,), (12469,), (12484,), (12490,), (12492,), (12494,), (12495,), (12498,), (12517,), (12525,), (12546,), (12549,), (12554,), (12558,), (12562,), (12573,), (12580,), (12587,), (12588,), (12592,), (12597,), (12602,), (12605,), (12612,), (12623,), (12643,), (12647,), (12648,), (12651,), (12661,), (12665,), (12670,), (12673,), (12681,), (12687,), (12706,), (12709,), (12715,), (12725,), (12726,), (12739,), (12742,), (12753,), (12756,), (12759,), (12762,), (12763,), (12765,), (12768,), (12769,), (12772,), (12781,), (12790,), (12796,), (12797,), (12810,), (12819,), (12823,), (12842,), (12843,), (12853,), (12854,), (12857,), (12867,), (12869,), (12873,), (12887,), (12900,), (12906,), (12907,), (12919,), (12922,), (12936,), (12945,), (12953,), (12955,), (12969,), (12980,), (12984,), (12993,), (12997,), (13000,), (13004,), (13018,), (13019,), (13026,), (13047,), (13052,), (13053,), (13054,), (13056,), (13065,), (13069,), (13084,), (13086,), (13091,), (13095,), (13103,), (13106,), (13112,), (13126,), (13132,), (13142,), (13149,), (13151,), (13152,), (13159,), (13166,), (13169,), (13172,), (13182,), (13186,), (13197,), (13213,), (13221,), (13243,), (13252,), (13259,), (13262,), (13264,), (13266,), (13267,), (13272,), (13275,), (13300,), (13306,), (13314,), (13318,), (13322,), (13326,), (13329,), (13331,), (13334,), (13340,), (13342,), (13346,), (13353,), (13371,), (13376,), (13382,), (13389,), (13399,), (13412,), (13419,), (13430,), (13433,), (13438,), (13442,), (13446,), (13454,), (13456,), (13458,), (13462,), (13465,), (13468,), (13470,), (13471,), (13487,), (13494,), (13497,), (13499,), (13500,), (13504,), (13509,), (13510,), (13526,), (13532,), (13533,), (13535,), (13536,), (13550,), (13555,), (13560,), (13564,), (13568,), (13582,), (13584,), (13586,), (13597,), (13605,), (13607,), (13614,), (13615,), (13617,), (13623,), (13636,), (13637,), (13638,), (13643,), (13655,), (13658,), (13659,), (13666,), (13675,), (13676,), (13685,), (13686,), (13690,), (13702,), (13705,), (13707,), (13709,), (13726,), (13736,), (13747,), (13757,), (13778,), (13781,), (13783,), (13784,), (13786,), (13788,), (13797,), (13805,), (13810,), (13817,), (13828,), (13833,), (13834,), (13845,), (13850,), (13853,), (13855,), (13857,), (13859,), (13862,), (13869,), (13875,), (13880,), (13887,), (13895,), (13902,), (13927,), (13932,), (13936,), (13941,), (13944,), (13950,), (13952,), (13954,), (13961,), (13965,), (13983,), (13984,), (13989,), (13999,), (14002,), (14004,), (14005,), (14007,), (14009,), (14033,), (14034,), (14045,), (14048,), (14059,), (14061,), (14064,), (14066,), (14072,), (14076,), (14078,), (14079,), (14082,), (14088,), (14089,), (14095,), (14099,), (14101,), (14108,), (14110,), (14113,), (14118,), (14127,), (14140,), (14143,), (14146,), (14147,), (14153,), (14158,), (14175,), (14183,), (14204,), (14206,), (14210,), (14219,), (14220,), (14226,), (14231,), (14237,), (14246,), (14301,), (14322,), (14323,), (14324,), (14332,), (14336,), (14355,), (14360,), (14368,), (14374,), (14377,), (14381,), (14383,), (14393,), (14399,), (14408,), (14410,), (14426,), (14434,), (14437,), (14444,), (14448,), (14449,), (14457,), (14458,), (14469,), (14471,), (14473,), (14474,), (14480,), (14481,), (14482,), (14483,), (14497,), (14500,), (14504,), (14515,), (14516,), (14522,), (14523,), (14524,), (14531,), (14539,), (14543,), (14546,), (14547,), (14548,), (14558,), (14561,), (14567,), (14572,), (14578,), (14585,), (14595,), (14616,), (14620,), (14634,), (14643,), (14661,), (14673,), (14679,), (14682,), (14689,), (14697,), (14711,), (14721,), (14742,), (14754,), (14757,), (14765,), (14785,), (14791,), (14792,), (14793,), (14797,), (14798,), (14803,), (14810,), (14822,), (14827,), (14832,), (14838,), (14842,), (14850,), (14853,), (14856,), (14872,), (14876,), (14877,), (14887,), (14893,), (14914,), (14922,), (14928,), (14942,), (14947,), (14948,), (14951,), (14955,), (14957,), (14966,), (14976,), (14978,), (14986,), (14987,), (14999,), (15007,), (15008,), (15011,), (15021,), (15025,), (15028,), (15031,), (15036,), (15039,), (15043,), (15047,), (15052,), (15058,), (15062,), (15064,), (15068,), (15070,), (15075,), (15076,), (15084,), (15090,), (15102,), (15104,), (15114,), (15127,), (15130,), (15141,), (15145,), (15154,), (15157,), (15158,), (15160,), (15163,), (15164,), (15167,), (15168,), (15171,), (15181,), (15187,), (15198,), (15207,), (15223,), (15224,), (15225,), (15227,), (15228,), (15261,), (15287,), (15289,), (15296,), (15299,), (15303,), (15305,), (15307,), (15315,), (15319,), (15322,), (15324,), (15329,), (15336,), (15338,), (15349,), (15350,), (15371,), (15387,), (15413,), (15422,), (15423,), (15424,), (15426,), (15427,), (15429,), (15447,), (15448,), (15456,), (15463,), (15469,), (15475,), (15486,), (15496,), (15497,), (15501,), (15505,), (15511,), (15514,), (15522,), (15526,), (15540,), (15548,), (15552,), (15556,), (15565,), (15567,), (15569,), (15570,), (15574,), (15577,), (15579,), (15580,), (15581,), (15584,), (15585,), (15592,), (15593,), (15596,), (15598,), (15603,), (15608,), (15618,), (15631,), (15635,), (15641,), (15649,), (15651,), (15664,), (15670,), (15686,), (15692,), (15696,), (15707,), (15713,), (15717,), (15722,), (15724,), (15728,), (15735,), (15738,), (15741,), (15744,), (15749,), (15757,), (15761,), (15768,), (15770,), (15776,), (15777,), (15791,), (15798,), (15800,), (15815,), (15824,), (15839,), (15840,), (15841,), (15842,), (15867,), (15872,), (15889,), (15891,), (15897,), (15899,), (15900,), (15940,), (15950,), (15951,), (15957,), (15958,), (15967,), (15970,), (15971,), (15974,), (15976,), (15978,), (15979,), (15981,), (15982,), (15983,), (15984,), (16001,), (16003,), (16008,), (16013,), (16018,), (16032,), (16037,), (16046,), (16054,), (16057,), (16069,), (16084,), (16095,), (16098,), (16117,), (16121,), (16130,), (16146,), (16164,), (16170,), (16178,), (16185,), (16193,), (16198,), (16207,), (16214,), (16218,), (16219,), (16229,), (16230,), (16239,), (16247,), (16262,), (16263,), (16270,), (16276,), (16278,), (16282,), (16302,), (16308,), (16312,), (16319,), (16320,), (16321,), (16327,), (16331,), (16333,), (16334,), (16348,), (16349,), (16358,), (16362,), (16364,), (16365,), (16381,), (16390,), (16407,), (16408,), (16413,), (16416,), (16428,), (16432,), (16445,), (16456,), (16458,), (16464,), (16467,), (16480,), (16485,), (16488,), (16493,), (16501,), (16507,), (16508,), (16513,), (16514,), (16516,), (16528,), (16533,), (16539,), (16540,), (16546,), (16552,), (16557,), (16564,), (16565,), (16566,), (16574,), (16576,), (16583,), (16597,), (16601,), (16602,), (16605,), (16608,), (16611,), (16630,), (16631,), (16632,), (16636,), (16646,), (16653,), (16665,), (16686,), (16688,), (16689,), (16692,), (16709,), (16710,), (16721,), (16727,), (16747,), (16750,), (16755,), (16756,), (16758,), (16770,), (16778,), (16779,), (16796,), (16802,), (16814,), (16816,), (16822,), (16827,), (16834,), (16837,), (16847,), (16857,), (16865,), (16883,), (16889,), (16894,), (16912,), (16915,), (16916,), (16921,), (16928,), (16930,), (16939,), (16946,), (16947,), (16950,), (16951,), (16953,), (16958,), (16969,), (16974,), (16979,), (16982,), (16988,), (16998,), (17006,), (17015,), (17019,), (17028,), (17039,), (17042,), (17044,), (17047,), (17050,), (17052,), (17065,), (17066,), (17068,), (17077,), (17090,), (17091,), (17094,), (17107,), (17109,), (17110,), (17111,), (17117,), (17119,), (17121,), (17126,), (17149,), (17164,), (17167,), (17173,), (17174,), (17195,), (17196,), (17215,), (17219,), (17225,), (17226,), (17227,), (17251,), (17256,), (17258,), (17263,), (17264,), (17272,), (17281,), (17285,), (17294,), (17298,), (17300,), (17302,), (17303,), (17304,), (17331,), (17334,), (17336,), (17342,), (17343,), (17345,), (17349,), (17354,), (17368,), (17371,), (17378,), (17391,), (17402,), (17408,), (17416,), (17424,), (17431,), (17436,), (17451,), (17455,), (17463,), (17468,), (17472,), (17474,), (17480,), (17488,), (17495,), (17501,), (17506,), (17511,), (17523,), (17533,), (17537,), (17549,), (17565,), (17571,), (17581,), (17587,), (17595,), (17602,), (17604,), (17609,), (17618,), (17623,), (17624,), (17628,), (17633,), (17656,), (17662,), (17672,), (17673,), (17686,), (17696,), (17706,), (17710,), (17711,), (17730,), (17737,), (17760,), (17773,), (17781,), (17788,), (17800,), (17811,), (17815,), (17816,), (17827,), (17842,), (17843,), (17853,), (17868,), (17876,), (17881,), (17890,), (17897,), (17904,), (17918,), (17920,), (17927,), (17932,), (17938,), (17942,), (17955,), (17969,), (17992,), (18001,), (18004,), (18006,), (18016,), (18030,), (18042,), (18045,), (18054,), (18058,), (18072,), (18073,), (18082,), (18084,), (18088,), (18111,), (18112,), (18116,), (18119,), (18133,), (18135,), (18137,), (18152,), (18155,), (18162,), (18167,), (18178,), (18185,), (18197,), (18208,), (18212,), (18214,), (18215,), (18232,), (18233,), (18234,), (18238,), (18247,), (18248,), (18271,), (18275,), (18284,), (18286,), (18293,), (18314,), (18320,), (18333,), (18336,), (18339,), (18348,), (18362,), (18375,), (18379,), (18391,), (18396,), (18404,), (18406,), (18407,), (18408,), (18424,), (18428,), (18431,), (18433,), (18434,), (18438,), (18450,), (18456,), (18459,), (18468,), (18470,), (18480,), (18486,), (18487,), (18490,), (18496,), (18510,), (18511,), (18518,), (18526,), (18533,), (18538,), (18542,), (18550,), (18558,), (18563,), (18576,), (18579,), (18590,), (18595,), (18599,), (18603,), (18606,), (18615,), (18617,), (18621,), (18626,), (18633,), (18638,), (18651,), (18655,), (18661,), (18669,), (18680,), (18693,), (18694,), (18706,), (18707,), (18709,), (18718,), (18727,), (18745,), (18746,), (18750,), (18757,), (18761,), (18764,), (18771,), (18774,), (18775,), (18781,), (18796,), (18799,), (18809,), (18815,), (18816,), (18821,), (18833,), (18844,), (18848,), (18856,), (18880,), (18882,), (18885,), (18887,), (18890,), (18891,), (18896,), (18897,), (18901,), (18905,), (18913,), (18915,), (18916,), (18935,), (18938,), (18945,), (18954,), (18969,), (18971,), (18973,), (18987,), (18988,), (19005,), (19019,), (19044,), (19048,), (19060,), (19067,), (19069,), (19073,), (19096,), (19102,), (19103,), (19110,), (19126,), (19134,), (19139,), (19143,), (19147,), (19165,), (19181,), (19195,), (19210,), (19216,), (19224,), (19227,), (19243,), (19271,), (19280,), (19281,), (19291,), (19311,), (19314,), (19319,), (19321,), (19328,), (19340,), (19344,), (19350,), (19351,), (19355,), (19384,), (19391,), (19403,), (19426,), (19431,), (19459,), (19469,), (19470,), (19471,), (19490,), (19506,), (19518,), (19523,), (19524,), (19537,), (19549,), (19555,), (19571,), (19576,), (19591,), (19593,), (19594,), (19599,), (19601,), (19605,), (19607,), (19613,), (19620,), (19636,), (19639,), (19644,), (19650,), (19654,), (19675,), (19681,), (19692,), (19698,), (19701,), (19703,), (19706,), (19715,), (19724,), (19729,), (19736,), (19739,), (19763,), (19764,), (19772,), (19783,), (19787,), (19788,), (19792,), (19794,), (19818,), (19823,), (19856,), (19857,), (19866,), (19884,), (19889,), (19890,), (19891,), (19895,), (19941,), (19945,), (19948,), (19952,), (19958,), (19966,), (19968,), (19975,), (19996,), (19999,), (20001,), (20002,), (20010,), (20011,), (20013,), (20022,), (20029,), (20032,), (20034,), (20035,), (20040,), (20059,), (20068,), (20076,), (20079,), (20092,), (20101,), (20110,), (20117,), (20118,), (20124,), (20125,), (20129,), (20150,), (20158,), (20166,), (20176,), (20177,), (20196,), (20200,), (20209,), (20217,), (20225,), (20227,), (20235,), (20240,), (20245,), (20251,), (20271,), (20291,), (20295,), (20297,), (20298,), (20305,), (20330,), (20341,), (20349,), (20366,), (20386,), (20397,), (20416,), (20421,), (20424,), (20429,), (20435,), (20437,), (20438,), (20441,), (20445,), (20447,), (20452,), (20457,), (20463,), (20476,), (20503,), (20506,), (20514,), (20519,), (20520,), (20523,), (20532,), (20533,), (20537,), (20543,), (20553,), (20555,), (20558,), (20563,), (20579,), (20583,), (20586,), (20590,), (20593,), (20608,), (20612,), (20613,), (20616,), (20622,), (20628,), (20632,), (20643,), (20648,), (20653,), (20680,), (20681,), (20682,), (20701,), (20712,), (20714,), (20726,), (20729,), (20733,), (20734,), (20735,), (20741,), (20746,), (20749,), (20756,), (20772,), (20773,), (20786,), (20789,), (20793,), (20802,), (20806,), (20813,), (20825,), (20826,), (20835,), (20836,), (20854,), (20863,), (20864,), (20881,), (20890,), (20891,), (20904,), (20912,), (20917,), (20918,), (20936,), (20939,), (20944,), (20947,), (20948,), (20949,), (20973,), (20977,), (20988,), (20996,), (21002,), (21003,), (21020,), (21022,), (21023,), (21024,), (21032,), (21036,), (21042,), (21050,), (21067,), (21075,), (21076,), (21081,), (21086,), (21103,), (21104,), (21106,), (21112,), (21119,), (21121,), (21137,), (21139,), (21140,), (21141,), (21145,), (21152,), (21153,), (21162,), (21164,), (21167,), (21169,), (21173,), (21180,), (21193,), (21203,), (21207,), (21214,), (21222,), (21224,), (21229,), (21233,), (21237,), (21265,), (21282,), (21291,), (21297,), (21298,), (21311,), (21315,), (21317,), (21319,), (21332,), (21340,), (21343,), (21346,), (21350,), (21370,), (21380,), (21393,), (21395,), (21398,), (21403,), (21419,), (21429,), (21439,), (21447,), (21463,), (21465,), (21473,), (21486,), (21499,), (21510,), (21515,), (21530,), (21539,), (21549,), (21551,), (21557,), (21565,), (21567,), (21572,), (21581,), (21591,), (21592,), (21596,), (21613,), (21619,), (21649,), (21659,), (21681,), (21685,), (21691,), (21692,), (21700,), (21717,), (21720,), (21735,), (21738,), (21760,), (21768,), (21770,), (21771,), (21790,), (21791,), (21807,), (21811,), (21815,), (21822,), (21825,), (21844,), (21847,), (21850,), (21854,), (21868,), (21872,), (21875,), (21896,), (21907,), (21914,), (21919,), (21927,), (21935,), (21949,), (21955,), (21960,), (21964,), (21970,), (21997,), (21999,), (22009,), (22017,), (22019,), (22021,), (22029,), (22035,), (22036,), (22064,), (22066,), (22068,), (22071,), (22073,), (22084,), (22085,), (22098,), (22116,), (22143,), (22149,), (22156,), (22161,), (22177,), (22184,), (22188,), (22196,), (22198,), (22200,), (22209,), (22210,), (22212,), (22216,), (22233,), (22239,), (22248,), (22252,), (22258,), (22283,), (22285,), (22293,), (22304,), (22309,), (22328,), (22329,), (22344,), (22346,), (22347,), (22363,), (22381,), (22386,), (22387,), (22388,), (22392,), (22393,), (22406,), (22414,), (22422,), (22425,), (22426,), (22428,), (22434,), (22441,), (22468,), (22472,), (22488,), (22489,), (22491,), (22494,), (22501,), (22502,), (22504,), (22508,), (22528,), (22539,), (22546,), (22554,), (22557,), (22568,), (22569,), (22572,), (22600,), (22607,), (22620,), (22625,), (22627,), (22628,), (22648,), (22653,), (22662,), (22665,), (22680,), (22684,), (22694,), (22697,), (22699,), (22711,), (22718,), (22719,), (22731,), (22737,), (22742,), (22757,), (22764,), (22768,), (22774,), (22786,), (22787,), (22796,), (22800,), (22804,), (22805,), (22815,), (22816,), (22840,), (22843,), (22846,), (22850,), (22856,), (22869,), (22879,), (22880,), (22884,), (22890,), (22902,), (22910,), (22916,), (22920,), (22925,), (22932,), (22938,), (22945,), (22952,), (22955,), (22961,), (22974,), (22979,), (22988,), (22989,), (22999,), (23007,), (23010,), (23027,), (23036,), (23037,), (23042,), (23054,), (23059,), (23060,), (23079,), (23081,), (23090,), (23098,), (23099,), (23106,), (23110,), (23117,), (23128,), (23134,), (23136,), (23142,), (23144,), (23152,), (23158,), (23159,), (23163,), (23173,), (23177,), (23197,), (23224,), (23225,), (23234,), (23235,), (23238,), (23267,), (23275,), (23276,), (23297,), (23302,), (23305,), (23308,), (23317,), (23319,), (23323,), (23331,), (23348,), (23353,), (23382,), (23388,), (23391,), (23420,), (23439,), (23445,), (23451,), (23459,), (23465,), (23472,), (23479,), (23481,), (23488,), (23490,), (23497,), (23509,), (23519,), (23520,), (23531,), (23536,), (23538,), (23539,), (23547,), (23548,), (23566,), (23590,), (23591,), (23593,), (23611,), (23617,), (23629,), (23634,), (23640,), (23656,), (23664,), (23666,), (23668,), (23680,), (23696,), (23704,), (23708,), (23713,), (23743,), (23763,), (23778,), (23779,), (23781,), (23785,), (23789,), (23793,), (23800,), (23803,), (23827,), (23833,), (23852,), (23860,), (23863,), (23864,), (23874,), (23881,), (23887,), (23898,), (23908,), (23914,), (23921,), (23928,), (23931,), (23932,), (23935,), (23938,), (23944,), (23951,), (23963,), (23965,), (23967,), (23983,), (23992,), (23993,), (23994,), (24006,), (24009,), (24012,), (24018,), (24022,), (24023,), (24033,), (24034,), (24047,), (24054,), (24069,), (24072,), (24074,), (24077,), (24079,), (24115,), (24116,), (24118,), (24125,), (24131,), (24139,), (24146,), (24157,), (24176,), (24179,), (24186,), (24187,), (24193,), (24194,), (24203,), (24209,), (24211,), (24214,), (24221,), (24222,), (24227,), (24242,), (24245,), (24253,), (24257,), (24261,), (24288,), (24290,), (24298,), (24300,), (24304,), (24314,), (24325,), (24330,), (24331,), (24362,), (24365,), (24375,), (24380,), (24389,), (24392,), (24397,), (24398,), (24405,), (24416,), (24418,), (24424,), (24437,), (24439,), (24441,), (24442,), (24445,), (24450,), (24452,), (24464,), (24467,), (24472,), (24477,), (24488,), (24492,), (24493,), (24508,), (24514,), (24516,), (24521,), (24527,), (24536,), (24540,), (24562,), (24568,), (24572,), (24588,), (24595,), (24607,), (24614,), (24618,), (24623,), (24627,), (24645,), (24662,), (24668,), (24676,), (24680,), (24685,), (24689,), (24691,), (24693,), (24705,), (24708,), (24714,), (24720,), (24731,), (24736,), (24751,), (24753,), (24755,), (24772,), (24777,), (24780,), (24781,), (24795,), (24799,), (24804,), (24806,), (24819,), (24821,), (24827,), (24837,), (24840,), (24852,), (24853,), (24857,), (24875,), (24878,), (24887,), (24897,), (24899,), (24900,), (24904,), (24905,), (24921,), (24934,), (24935,), (24937,), (24938,), (24944,), (24950,), (24959,), (24961,), (24962,), (24964,), (24975,), (24980,), (24992,), (24993,), (24994,), (25007,), (25024,), (25025,), (25049,), (25055,), (25068,), (25069,), (25080,), (25082,), (25092,), (25094,), (25105,), (25109,), (25113,), (25144,), (25148,), (25162,), (25169,), (25171,), (25187,), (25191,), (25203,), (25209,), (25211,), (25214,), (25220,), (25228,), (25229,), (25232,), (25235,), (25238,), (25253,), (25269,), (25272,), (25276,), (25286,), (25290,), (25299,), (25309,), (25317,), (25318,), (25322,), (25343,), (25359,), (25364,), (25371,), (25377,), (25383,), (25385,), (25386,), (25387,), (25389,), (25391,), (25392,), (25400,), (25403,), (25409,), (25415,), (25416,), (25423,), (25440,), (25464,), (25468,), (25470,), (25483,), (25486,), (25506,), (25511,), (25520,), (25524,), (25539,), (25542,), (25558,), (25568,), (25575,), (25577,), (25591,), (25594,), (25605,), (25611,), (25615,), (25623,), (25632,), (25641,), (25645,), (25660,), (25661,), (25667,), (25668,), (25672,), (25679,), (25685,), (25690,), (25696,), (25706,), (25713,), (25715,), (25734,), (25738,), (25740,), (25748,), (25750,), (25764,), (25773,), (25775,), (25780,), (25789,), (25791,), (25804,), (25811,), (25815,), (25817,), (25820,), (25824,), (25825,), (25827,), (25839,), (25848,), (25854,), (25855,), (25857,), (25875,), (25889,), (25890,), (25894,), (25895,), (25903,), (25908,), (25912,), (25926,), (25934,), (25940,), (25941,), (25942,), (25945,), (25946,), (25949,), (25956,), (25975,), (25981,), (25988,), (25992,), (26005,), (26014,), (26016,), (26018,), (26020,), (26024,), (26031,), (26034,), (26038,), (26041,), (26044,), (26045,), (26049,), (26067,), (26084,), (26088,), (26094,), (26110,), (26133,), (26140,), (26144,), (26145,), (26147,), (26167,), (26176,), (26178,), (26180,), (26183,), (26197,), (26199,), (26219,), (26230,), (26237,), (26247,), (26261,), (26271,), (26276,), (26286,), (26293,), (26300,), (26326,), (26344,), (26346,), (26352,), (26363,), (26364,), (26372,), (26386,), (26395,), (26400,), (26407,), (26413,), (26417,), (26432,), (26437,), (26440,), (26449,), (26450,), (26451,), (26461,), (26485,), (26500,), (26502,), (26505,), (26510,), (26512,), (26516,), (26518,), (26520,), (26521,), (26523,), (26528,), (26531,), (26537,), (26539,), (26558,), (26562,), (26568,), (26571,), (26578,), (26584,), (26585,), (26591,), (26606,), (26608,), (26611,), (26623,), (26637,), (26649,), (26650,), (26652,), (26656,), (26660,), (26661,), (26674,), (26676,), (26678,), (26688,), (26689,), (26696,), (26700,), (26702,), (26712,), (26722,), (26728,), (26757,), (26762,), (26764,), (26780,), (26781,), (26797,), (26810,), (26815,), (26818,), (26828,), (26839,), (26842,), (26855,), (26858,), (26863,), (26876,), (26886,), (26890,), (26903,), (26914,), (26916,), (26917,), (26924,), (26926,), (26927,), (26930,), (26947,), (26949,), (26958,), (26974,), (26978,), (26987,), (26988,), (26994,), (26999,), (27005,), (27007,), (27027,), (27030,), (27033,), (27038,), (27049,), (27050,), (27067,), (27080,), (27085,), (27090,), (27097,), (27103,), (27112,), (27120,), (27127,), (27140,), (27146,), (27154,), (27165,), (27169,), (27171,), (27185,), (27199,), (27205,), (27206,), (27211,), (27215,), (27237,), (27256,), (27257,), (27259,), (27266,), (27288,), (27297,), (27299,), (27300,), (27303,), (27313,), (27318,), (27332,), (27345,), (27346,), (27351,), (27354,), (27361,), (27372,), (27399,), (27400,), (27417,), (27426,), (27429,), (27436,), (27442,), (27443,), (27446,), (27452,), (27454,), (27474,), (27482,), (27495,), (27511,), (27546,), (27553,), (27558,), (27560,), (27572,), (27589,), (27610,), (27624,), (27627,), (27651,), (27655,), (27656,), (27662,), (27667,), (27672,), (27677,), (27682,), (27691,), (27721,), (27724,), (27730,), (27736,), (27741,), (27748,), (27750,), (27764,), (27767,), (27772,), (27773,), (27777,), (27785,), (27786,), (27815,), (27817,), (27827,), (27829,), (27830,), (27832,), (27861,), (27869,), (27882,), (27898,), (27900,), (27908,), (27913,), (27916,), (27927,), (27929,), (27946,), (27948,), (27950,), (27951,), (27958,), (27961,), (27976,), (27982,), (27988,), (27991,), (27995,), (28014,), (28029,), (28035,), (28042,), (28067,), (28069,), (28070,), (28077,), (28094,), (28099,), (28102,), (28113,), (28117,), (28123,), (28139,), (28170,), (28178,), (28199,), (28229,), (28232,), (28233,), (28257,), (28292,), (28316,), (28318,), (28343,), (28348,), (28362,), (28375,), (28382,), (28385,), (28393,), (28395,), (28406,), (28419,), (28425,), (28426,), (28431,), (28437,), (28472,), (28474,), (28486,), (28498,), (28509,), (28512,), (28528,), (28542,), (28564,), (28566,), (28576,), (28581,), (28593,), (28599,), (28601,), (28602,), (28609,), (28612,), (28616,), (28617,), (28620,), (28623,), (28630,), (28642,), (28649,), (28656,), (28658,), (28681,), (28688,), (28690,), (28712,), (28715,), (28730,), (28732,), (28738,), (28744,), (28745,), (28756,), (28769,), (28772,), (28775,), (28789,), (28800,), (28807,), (28813,), (28819,), (28828,), (28832,), (28845,), (28851,), (28869,), (28873,), (28876,), (28877,), (28888,), (28904,), (28909,), (28925,), (28936,), (28938,), (28941,), (28942,), (28957,), (28968,), (28987,), (28992,), (28996,), (29006,), (29008,), (29017,), (29038,), (29039,), (29044,), (29059,), (29091,), (29095,), (29096,), (29104,), (29114,), (29117,), (29121,), (29126,), (29130,), (29155,), (29158,), (29167,), (29168,), (29170,), (29176,), (29182,), (29185,), (29190,), (29200,), (29203,), (29211,), (29222,), (29239,), (29241,), (29253,), (29271,), (29280,), (29292,), (29325,), (29354,), (29356,), (29357,), (29367,), (29380,), (29385,), (29396,), (29400,), (29408,), (29417,), (29424,), (29446,), (29469,), (29477,), (29479,), (29489,), (29500,), (29510,), (29513,), (29515,), (29519,), (29525,), (29538,), (29546,), (29553,), (29560,), (29563,), (29573,), (29578,), (29580,), (29585,), (29594,), (29611,), (29612,), (29614,), (29615,), (29617,), (29627,), (29636,), (29641,), (29653,), (29673,), (29682,), (29683,), (29690,), (29703,), (29713,), (29719,), (29731,), (29781,), (29814,), (29815,), (29816,), (29824,), (29826,), (29828,), (29851,), (29859,), (29860,), (29861,), (29903,), (29905,), (29906,), (29918,), (29932,), (29949,), (29957,), (29958,), (29962,), (29981,), (29986,), (29987,), (29990,), (30002,), (30033,), (30041,), (30042,), (30054,), (30059,), (30064,), (30069,), (30072,), (30075,), (30083,), (30087,), (30118,), (30119,), (30129,), (30131,), (30156,), (30159,), (30174,), (30198,), (30212,), (30220,), (30236,), (30255,), (30261,), (30271,), (30274,), (30279,), (30281,), (30290,), (30301,), (30303,), (30309,), (30317,), (30325,), (30348,), (30358,), (30361,), (30365,), (30369,), (30377,), (30382,), (30388,), (30394,), (30397,), (30402,), (30405,), (30406,), (30414,), (30415,), (30418,), (30435,), (30455,), (30456,), (30465,), (30468,), (30476,), (30481,), (30487,), (30491,), (30495,), (30521,), (30525,), (30545,), (30554,), (30562,), (30569,), (30578,), (30588,), (30592,), (30599,), (30602,), (30604,), (30615,), (30640,), (30645,), (30652,), (30654,), (30665,), (30670,), (30679,), (30686,), (30687,), (30689,), (30691,), (30699,), (30708,), (30717,), (30723,), (30728,), (30729,), (30731,), (30750,), (30762,), (30764,), (30765,), (30773,), (30781,), (30788,), (30790,), (30798,), (30816,), (30818,), (30825,), (30834,), (30842,), (30858,), (30863,), (30870,), (30876,), (30877,), (30903,), (30907,), (30916,), (30919,), (30931,), (30934,), (30941,), (30945,), (30946,), (30948,), (30959,), (30965,), (30970,), (30975,), (30976,), (30982,), (30986,), (30995,), (30999,), (31002,), (31014,), (31015,), (31018,), (31027,), (31036,), (31037,), (31039,), (31053,), (31066,), (31078,), (31083,), (31096,), (31113,), (31116,), (31118,), (31119,), (31123,), (31126,), (31138,), (31139,), (31142,), (31143,), (31152,), (31159,), (31164,), (31166,), (31177,), (31190,), (31191,), (31197,), (31201,), (31204,), (31213,), (31231,), (31238,), (31253,), (31260,), (31262,), (31270,), (31275,), (31279,), (31280,), (31284,), (31292,), (31299,), (31326,), (31355,), (31364,), (31366,), (31374,), (31379,), (31387,), (31397,), (31400,), (31406,), (31417,), (31430,), (31431,), (31440,), (31442,), (31443,), (31454,), (31459,), (31473,), (31488,), (31492,), (31494,), (31502,), (31513,), (31516,), (31530,), (31532,), (31547,), (31548,), (31557,), (31565,), (31569,), (31579,), (31591,), (31597,), (31598,), (31602,), (31605,), (31621,), (31622,), (31624,), (31633,), (31636,), (31641,), (31657,), (31658,), (31666,), (31667,), (31679,), (31680,), (31690,), (31697,), (31714,), (31724,), (31726,), (31739,), (31746,), (31747,), (31751,), (31755,), (31768,), (31771,), (31800,), (31803,), (31807,), (31817,), (31818,), (31828,), (31841,), (31849,), (31851,), (31867,), (31891,), (31904,), (31906,), (31908,), (31913,), (31919,), (31925,), (31929,), (31933,), (31934,), (31936,), (31947,), (31948,), (31952,), (31955,), (31967,), (31970,), (31981,), (32001,), (32035,), (32040,), (32061,), (32063,), (32080,), (32087,), (32088,), (32093,), (32095,), (32097,), (32105,), (32125,), (32130,), (32133,), (32139,), (32158,), (32169,), (32179,), (32183,), (32188,), (32206,), (32208,), (32220,), (32221,), (32223,), (32225,), (32234,), (32246,), (32248,), (32262,), (32284,), (32285,), (32290,), (32295,), (32297,), (32303,), (32310,), (32313,), (32314,), (32318,), (32319,), (32357,), (32363,), (32377,), (32389,), (32393,), (32397,), (32405,), (32415,), (32419,), (32426,), (32439,), (32441,), (32445,), (32447,), (32462,), (32464,), (32471,), (32477,), (32484,), (32488,), (32504,), (32522,), (32524,), (32528,), (32541,), (32542,), (32552,), (32560,), (32565,), (32566,), (32581,), (32584,), (32585,), (32596,), (32600,), (32609,), (32634,), (32653,), (32659,), (32662,), (32672,), (32694,), (32697,), (32701,), (32703,), (32706,), (32721,), (32730,), (32735,), (32741,), (32742,), (32748,), (32751,), (32770,), (32781,), (32789,), (32794,), (32795,), (32810,), (32813,), (32821,), (32824,), (32825,), (32826,), (32830,), (32840,), (32841,), (32847,), (32848,), (32866,), (32876,), (32880,), (32893,), (32901,), (32905,), (32925,), (32957,), (32958,), (32970,), (32971,), (32982,), (32994,), (33013,), (33021,), (33028,), (33036,), (33050,), (33053,), (33057,), (33059,), (33064,), (33067,), (33069,), (33078,), (33083,), (33091,), (33096,), (33098,), (33103,), (33124,), (33129,), (33130,), (33131,), (33132,), (33136,), (33141,), (33142,), (33148,), (33155,), (33156,), (33174,), (33175,), (33177,), (33179,), (33180,), (33185,), (33189,), (33193,), (33197,), (33204,), (33234,), (33236,), (33240,), (33259,), (33260,), (33281,), (33283,), (33284,), (33286,), (33297,), (33300,), (33303,), (33304,), (33311,), (33315,), (33327,), (33336,), (33348,), (33352,), (33354,), (33357,), (33359,), (33364,), (33367,), (33377,), (33382,), (33392,), (33393,), (33413,), (33418,), (33432,), (33433,), (33451,), (33453,), (33457,), (33458,), (33465,), (33467,), (33475,), (33477,), (33499,), (33502,), (33507,), (33516,), (33518,), (33520,), (33523,), (33538,), (33539,), (33545,), (33547,), (33553,), (33556,), (33560,), (33562,), (33566,), (33592,), (33596,), (33615,), (33620,), (33621,), (33628,), (33659,), (33674,), (33683,), (33684,), (33692,), (33694,), (33709,), (33712,), (33737,), (33738,), (33755,), (33759,), (33765,), (33768,), (33774,), (33776,), (33780,), (33796,), (33808,), (33809,), (33820,), (33823,), (33829,), (33842,), (33848,), (33860,), (33862,), (33871,), (33874,), (33887,), (33888,), (33906,), (33917,), (33918,), (33923,), (33931,), (33970,), (33998,), (34008,), (34017,), (34023,), (34030,), (34033,), (34052,), (34057,), (34070,), (34072,), (34076,), (34089,), (34106,), (34120,), (34125,), (34134,), (34151,), (34169,), (34177,), (34193,), (34209,), (34229,), (34237,), (34238,), (34242,), (34299,), (34312,), (34318,), (34319,), (34325,), (34347,), (34356,), (34360,), (34363,), (34390,), (34394,), (34396,), (34428,), (34430,), (34439,), (34442,), (34446,), (34463,), (34464,), (34465,), (34477,), (34483,), (34488,), (34493,), (34494,), (34510,), (34535,), (34547,), (34559,), (34570,), (34574,), (34582,), (34587,), (34611,), (34613,), (34616,), (34624,), (34636,), (34642,), (34649,), (34652,), (34680,), (34682,), (34696,), (34698,), (34703,), (34706,), (34724,), (34726,), (34741,), (34743,), (34751,), (34753,), (34761,), (34767,), (34769,), (34781,), (34789,), (34791,), (34797,), (34809,), (34823,), (34827,), (34832,), (34849,), (34851,), (34859,), (34870,), (34903,), (34919,), (34920,), (34926,), (34927,), (34932,), (34939,), (34940,), (34956,), (34969,), (35000,), (35009,), (35010,), (35012,), (35013,), (35021,), (35032,), (35038,), (35041,), (35042,), (35071,), (35072,), (35076,), (35089,), (35091,), (35104,), (35107,), (35118,), (35123,), (35129,), (35132,), (35137,), (35142,), (35152,), (35165,), (35175,), (35185,), (35194,), (35198,), (35220,), (35221,), (35231,), (35233,), (35236,), (35242,), (35249,), (35255,), (35276,), (35313,), (35319,), (35322,), (35324,), (35348,), (35353,), (35382,), (35386,), (35429,), (35438,), (35461,), (35466,), (35470,), (35472,), (35486,), (35488,), (35489,), (35495,), (35501,), (35510,), (35511,), (35530,), (35537,), (35540,), (35550,), (35561,), (35566,), (35576,), (35590,), (35591,), (35598,), (35601,), (35606,), (35609,), (35616,), (35634,), (35651,), (35657,), (35658,), (35683,), (35694,), (35711,), (35732,), (35771,), (35776,), (35816,), (35824,), (35825,), (35839,), (35841,), (35852,), (35857,), (35865,), (35877,), (35883,), (35893,), (35905,), (35936,), (35940,), (35948,), (35949,), (35955,), (35956,), (35970,), (35971,), (35982,), (35984,), (36005,), (36015,), (36027,), (36047,), (36064,), (36076,), (36093,), (36099,), (36113,), (36137,), (36145,), (36148,), (36152,), (36165,), (36167,), (36171,), (36184,), (36207,), (36212,), (36213,), (36217,), (36240,), (36247,), (36253,), (36254,), (36267,), (36279,), (36294,), (36298,), (36305,), (36309,), (36314,), (36324,), (36327,), (36331,), (36332,), (36343,), (36351,), (37370,), (37372,), (37386,), (37387,), (37399,), (37405,), (37406,), (37411,), (37424,), (37437,), (37461,), (37466,), (37469,), (37489,), (37492,), (37497,), (37502,), (37519,), (37557,), (37566,), (37586,), (37587,), (37589,), (37590,), (37615,), (37619,), (37620,), (37628,), (37638,), (37647,), (37669,), (37681,), (37706,), (37729,), (37732,), (37733,), (37743,), (37753,), (37758,), (37761,), (37768,), (37771,), (37775,), (37776,), (37785,), (37795,), (37797,), (37805,), (37814,), (37826,), (37833,), (37840,), (37865,), (37894,), (37911,), (37912,), (37918,), (37930,), (37935,), (37944,), (37977,), (37993,), (38001,), (38016,), (38087,), (38091,), (38093,), (38102,), (38105,), (38115,), (38117,), (38118,), (38160,), (38174,), (38177,), (38180,), (38187,), (38188,), (38195,), (38201,), (38207,), (38215,), (38216,), (38218,), (38227,), (38232,), (38245,), (38248,), (38273,), (38296,), (38299,), (38322,), (38337,), (38350,), (38370,), (38379,), (38382,), (38403,), (38408,), (38419,), (38420,), (38439,), (38471,), (38487,), (38493,), (38495,), (38501,), (38504,), (38509,), (38524,), (38530,), (38541,), (38548,), (38580,), (38587,), (38629,), (38631,), (38635,), (38668,), (38669,), (38672,), (38676,), (38709,), (38710,), (38721,), (38724,), (38730,), (38750,), (38755,), (38765,), (38777,), (38787,), (38799,), (38820,), (38831,), (38838,), (38841,), (38844,), (38853,), (38856,), (38889,), (38922,), (38962,), (38967,), (38975,), (38986,), (38995,), (39000,), (39002,), (39023,), (39024,), (39031,), (39037,), (39042,), (39080,), (39081,), (39082,), (39083,), (39087,), (39110,), (39115,), (39138,), (39144,), (39164,), (39169,), (39182,), (39187,), (39194,), (39211,), (39227,), (39231,), (39232,), (39243,), (39260,), (39279,), (39314,), (39323,), (40342,), (40354,), (40363,), (40364,), (40365,), (40368,), (40382,), (40383,), (40384,), (40385,), (40407,), (40410,), (40427,), (40441,), (40443,), (40453,), (40454,), (40482,), (40495,), (40504,), (40512,), (40514,), (40532,), (40542,), (40546,), (40549,), (40560,), (40576,), (40588,), (40598,), (40602,), (40607,), (40613,), (40616,), (40639,), (40647,), (40670,), (40737,), (40739,), (40745,), (40769,), (40775,), (40779,), (40795,), (40808,), (40818,), (40838,), (40852,), (40861,), (40868,), (40870,), (40875,), (40876,), (40884,), (40885,), (40905,), (40906,), (40907,), (40910,), (40920,), (40928,), (40958,), (40965,), (40972,), (40976,), (40982,), (40988,), (40989,), (41006,), (41029,), (41041,), (41051,), (41065,), (41070,), (41074,), (41093,), (41104,), (41123,), (41129,), (41145,), (41168,), (41176,), (41183,), (41187,), (41190,), (41199,), (41208,), (41222,), (41242,), (41259,), (41270,), (41282,), (41286,), (41289,), (41296,), (41297,), (41306,), (41320,), (41326,), (41349,), (41354,), (41361,), (41367,), (41380,), (41386,), (41390,), (41394,), (41404,), (41443,), (41448,), (41450,), (41467,), (41486,), (41492,), (41493,), (41509,), (41529,), (41536,), (41537,), (41544,), (41551,), (41557,), (41561,), (41563,), (41572,), (41573,), (41576,), (41578,), (41586,), (41591,), (41620,), (41626,), (41654,), (41655,), (41669,), (41678,), (41695,), (41702,), (41704,), (41716,), (41723,), (41726,), (41730,), (41770,), (41771,), (41773,), (41789,), (41791,), (41798,), (41852,), (41860,), (41861,), (41873,), (41881,), (41892,), (41895,), (41896,), (41898,), (41925,), (41934,), (41937,), (42956,), (42997,), (42999,), (43009,), (43019,), (43020,), (43036,), (43053,), (43061,), (43071,), (43076,), (43086,), (43099,), (43102,), (43114,), (43115,), (43119,), (43128,), (43131,), (43144,), (43157,), (43159,), (43185,), (43206,), (43214,), (43243,), (43264,), (43270,), (43302,), (43304,), (43309,), (43310,), (43333,), (43339,), (43341,), (43347,), (43361,), (43365,), (43368,), (43370,), (43398,), (43421,), (43470,), (43471,), (43482,), (43504,), (43521,), (43536,), (43538,), (43544,), (43554,), (43566,), (43577,), (43586,), (43588,), (43594,), (43635,), (43664,), (43674,), (43675,), (43688,), (43697,), (43720,), (43721,), (43723,), (43726,), (43729,), (43733,), (43747,), (43748,), (43768,), (43779,), (43799,), (43804,), (43825,), (43851,), (43867,), (43876,), (43877,), (43882,), (43898,), (43930,), (43943,), (43958,), (43969,), (43996,), (44016,), (44032,), (44033,), (44046,), (44060,), (44078,), (44080,), (44095,), (44103,), (44117,), (44134,), (44144,), (44166,), (44201,), (44204,), (44220,), (44223,), (44227,), (44246,), (44261,), (44267,), (44268,), (44281,), (44331,), (44332,), (44336,), (44342,), (44343,), (44347,), (44349,), (44357,), (44359,), (44382,), (44384,), (44394,), (44403,), (44440,), (44445,), (44465,), (44475,), (44484,), (44494,), (44505,), (44517,), (44526,), (44527,), (44536,), (44546,), (44559,), (44564,), (44569,), (44581,), (44596,), (44602,), (44609,), (44615,), (44622,), (44628,), (44640,), (44643,), (44645,), (44647,), (44650,), (44655,), (44661,), (44676,), (44702,), (44720,), (44727,), (44733,), (44745,), (44748,), (44769,), (44776,), (44816,), (44834,), (44838,), (44840,), (44856,), (44860,), (44866,), (44867,), (44888,), (44892,), (44896,), (44913,), (44928,), (44961,), (44962,), (44977,), (44984,), (44992,), (44998,), (44999,), (45001,), (45026,), (45032,), (45033,), (45050,), (45054,), (45075,), (45118,), (45119,), (45124,), (45153,), (45165,), (45184,), (45191,), (45214,), (45232,), (45236,), (45243,), (45262,), (45264,), (45297,), (45307,), (45327,), (45374,), (45401,), (45408,), (45419,), (45444,), (45479,), (45482,), (45503,), (45506,), (45528,), (45539,), (45555,), (45559,), (45569,), (45580,), (45584,), (45588,), (45643,), (45652,), (45666,), (45671,), (45681,), (45693,), (45705,), (45721,), (45723,), (45731,), (45737,), (45747,), (45763,), (45784,), (45791,), (45803,), (45820,), (45851,), (45852,), (45854,), (45858,), (45862,), (45867,), (45875,), (45889,), (45916,), (45920,), (45924,), (45946,), (45988,), (46015,), (46019,), (46022,), (46075,), (46096,), (46102,), (46115,), (46134,), (46143,), (46151,), (46160,), (46173,), (46175,), (46185,), (46197,), (46201,), (46205,), (46213,), (46216,), (46226,), (46228,), (46229,), (46252,), (46259,), (46284,), (46289,), (46301,), (46302,), (46305,), (46312,), (46321,), (46322,), (46333,), (46334,), (46345,), (46368,), (46380,), (46385,), (46389,), (46418,), (46425,), (46429,), (46434,), (46452,), (46482,), (46483,), (46486,), (46519,), (46523,), (46532,), (46550,), (46562,), (46569,), (46588,), (46594,), (46626,), (46639,), (46685,), (46692,), (46719,), (46735,), (46784,), (46821,), (46826,), (46832,), (46833,), (46843,), (46856,), (46872,), (46874,), (46887,), (46889,), (46897,), (46908,), (46921,), (46937,), (46941,), (46963,), (46964,), (46978,), (47008,), (47020,), (47058,), (47115,), (47148,), (47153,), (47168,), (47185,), (47227,), (47245,), (47247,), (47253,), (47258,), (47265,), (47266,), (47279,), (47294,), (47296,), (47319,), (47325,), (47339,), (47366,), (47367,), (47405,), (47419,), (47420,), (47444,), (47450,), (47453,), (47457,), (47458,), (47470,), (47483,), (47486,), (47490,), (47498,), (47502,), (47517,), (47567,), (47576,), (47585,), (47590,), (47594,), (47597,), (47624,), (47662,), (47671,), (47685,), (47698,), (47719,), (47728,), (47729,), (47749,), (47752,), (47764,), (47771,), (47802,), (47809,), (47821,), (47828,), (47840,), (47841,), (47842,), (47846,), (47855,), (47857,), (47900,), (47913,), (47923,), (47926,), (47929,), (47969,), (47987,), (47989,), (47990,), (48028,), (48034,), (48036,), (48066,), (48072,), (48100,), (48107,), (48109,), (48133,), (48149,), (48162,), (48178,), (48187,), (48188,), (48206,), (48212,), (48214,), (48215,), (48247,), (48253,), (48254,), (48267,), (48298,), (48304,), (48317,), (48326,), (48347,), (48357,), (48360,), (48366,), (48374,), (48378,), (48381,), (48390,), (48396,), (48415,), (48450,), (48455,), (48469,), (48485,), (48496,), (48500,), (48506,), (48520,), (48542,), (48543,), (48547,), (48553,), (48594,), (48603,), (48609,), (48615,), (48621,), (48627,), (48636,), (48639,), (48656,), (48671,), (48678,), (48688,), (48696,), (48703,), (48714,), (48755,), (48757,), (48758,), (48766,), (48786,), (48796,), (48822,), (48837,), (48838,), (48847,), (48854,), (48864,), (48879,), (48897,), (48921,), (48922,), (48956,), (48973,), (48974,), (48983,), (48993,), (49002,), (49010,), (49012,), (49014,), (49027,), (49050,), (49052,), (49082,), (49093,), (49103,), (49108,), (49113,), (49120,), (49125,), (49141,), (49149,), (49152,), (49161,), (49162,), (49184,), (49189,), (49198,), (49205,), (49212,), (49226,), (49243,), (49265,), (49270,), (49272,), (49291,), (49298,), (49309,), (49313,), (49333,), (49370,), (49374,), (49399,), (49402,), (49416,), (49443,), (49453,), (49465,), (49480,), (49506,), (49521,), (49527,), (49528,), (49549,), (49555,), (49570,), (49579,), (49593,), (49607,), (49614,), (49617,), (49639,), (49646,), (49649,), (49666,), (49670,), (49692,), (49719,), (49750,), (49775,), (49782,), (49821,), (49826,), (49835,), (49857,), (49869,), (49872,), (49898,), (49901,), (49905,), (49916,), (49924,), (49925,), (49939,), (49942,), (49953,), (50007,), (50015,), (50016,), (50055,), (50079,), (50110,), (50121,), (50151,), (50156,), (50170,), (50171,), (50172,), (50186,), (50206,), (50210,), (50226,), (50277,), (50318,), (50321,), (50376,), (50424,), (50425,), (50427,), (50433,), (50446,), (50447,), (50474,), (50501,), (50507,), (50536,), (50537,), (50551,), (50573,), (50587,), (50595,), (50598,), (50609,), (50623,), (50630,), (50682,), (50727,), (50738,), (50745,), (50770,), (50778,), (50807,), (50817,), (50822,), (50830,), (50844,), (50871,), (50883,), (50901,), (50904,), (50917,), (50929,), (50932,), (50933,), (50941,), (50947,), (50948,), (50949,), (50977,), (51006,), (51046,), (51062,), (51075,), (51083,), (51095,), (51139,), (51152,), (51161,), (51171,), (51194,), (51200,), (51217,), (51219,), (51242,), (51248,), (51273,), (51275,), (51279,), (51296,), (51321,), (51347,), (51370,), (51416,), (51418,), (51432,), (51442,), (51444,), (51456,), (51470,), (51473,), (51490,), (51556,), (51558,), (51559,), (51576,), (51583,), (51584,), (51597,), (51604,), (51605,), (51606,), (51622,), (51629,), (51676,), (51699,), (51707,), (51718,), (51743,), (51759,), (51780,), (51801,), (51804,), (51805,), (51820,), (51826,), (51840,), (51848,), (51873,), (51875,), (51907,), (51918,), (51946,), (51987,), (52005,), (52035,), (52047,), (52067,), (52089,), (52091,), (52104,), (52109,), (52132,), (52146,), (52155,), (52177,), (52182,), (52192,), (52206,), (52209,), (52212,), (52239,), (52252,), (52256,), (52259,), (52274,), (52276,), (52293,), (52301,), (52305,), (52379,), (52421,), (52458,), (52462,), (52475,), (52499,), (52509,), (52517,), (52522,), (52527,), (52534,), (52541,), (52583,), (52585,), (52629,), (52636,), (52644,), (52646,), (52653,), (52695,), (52702,), (52704,), (52713,), (52716,), (52719,), (52751,), (52754,), (52794,), (52825,), (52829,), (52834,), (52838,), (52840,), (52856,), (52906,), (52909,), (52913,), (52915,), (52927,), (52943,), (52966,), (52976,), (53009,), (53042,), (53053,), (53068,), (53078,), (53083,), (53102,), (53111,), (53151,), (53154,), (53155,), (53239,), (53240,), (53254,), (53269,), (53280,), (53299,), (53312,), (53334,), (53345,), (53390,), (53393,), (53407,), (54450,), (54455,), (54472,), (54514,), (54522,), (54533,), (54547,), (54556,), (54566,), (54577,), (54578,), (54623,), (54648,), (54699,), (54750,), (54766,), (54769,), (54818,), (54821,), (54849,), (54854,), (54856,), (54885,), (54888,), (54900,), (54937,), (54952,), (54954,), (54960,), (55018,), (55034,), (55072,), (55083,), (55100,), (55105,), (55112,), (55118,), (55132,), (55134,), (55147,), (55148,), (55168,), (55177,), (55215,), (55236,), (55268,), (55269,), (55288,), (55302,), (55310,), (55316,), (55377,), (55389,), (55393,), (55465,), (55473,), (55501,), (55508,), (55525,), (55550,), (55563,), (55571,), (55591,), (55610,), (55612,), (55615,), (55624,), (55658,), (55691,), (55715,), (55716,), (55718,), (55742,), (55752,), (55772,), (55777,), (55795,), (55805,), (55813,), (55817,), (55856,), (55874,), (55887,), (55888,), (55899,), (55901,), (55925,), (55962,), (55999,), (56036,), (56040,), (56052,), (56066,), (56092,), (56103,), (56120,), (56134,), (56139,), (56150,), (56160,), (56201,), (56236,), (56251,), (56271,), (56300,), (56302,), (56304,), (56322,), (56341,), (56374,), (56380,), (56385,), (56392,), (56398,), (56399,), (56402,), (56409,), (56427,), (56440,), (56465,), (56479,), (56500,), (56506,), (56521,), (56530,), (56534,), (56538,), (56543,), (56575,), (56589,), (56596,), (56600,), (56649,), (56658,), (56695,), (56699,), (56737,), (56757,), (56771,), (56784,), (56793,), (56824,), (56832,), (56837,), (56852,), (56870,), (56881,), (56895,), (56900,), (56940,), (56949,), (56971,), (56972,), (56980,), (57010,), (57027,), (57031,), (57068,), (57074,), (57104,), (57107,), (57115,), (57117,), (57133,), (57145,), (57150,), (57152,), (57168,), (57180,), (57191,), (57213,), (57240,), (57251,), (57259,), (57273,), (57351,), (57395,), (57407,), (57438,), (57467,), (57492,), (57510,), (57536,), (57573,), (57577,), (57578,), (57581,), (57602,), (57685,), (57705,), (57715,), (57725,), (57746,), (57765,), (57776,), (57778,), (57807,), (57842,), (57859,), (57872,), (57885,), (57888,), (57912,), (57985,), (57987,), (57999,), (58031,), (58046,), (58058,), (58062,), (58094,), (58097,), (58141,), (58214,), (58220,), (58221,), (58227,), (58272,), (58349,), (58354,), (58359,), (58368,), (58404,), (58408,), (58425,), (58435,), (58438,), (58449,), (58486,), (58497,), (58531,), (58540,), (58564,), (58576,), (58585,), (58657,), (58669,), (58679,), (58717,), (58739,), (58745,), (58757,), (58765,), (58772,), (58791,), (58800,), (58818,), (58827,), (58828,), (58830,), (58855,), (58861,), (58874,), (58900,), (58910,), (58930,), (58941,), (58959,), (58966,), (58986,), (58999,), (59013,), (59018,), (59047,), (59058,), (59062,), (59074,), (59085,), (59096,), (59107,), (59124,), (59133,), (59145,), (59152,), (59175,), (59192,), (59202,), (59213,), (59235,), (59250,), (59262,), (59297,), (59301,), (59305,), (59325,), (59327,), (59330,), (59342,), (59343,), (59360,), (59384,), (59434,), (59478,), (59489,), (59493,), (59502,), (59546,), (59557,), (59568,), (59588,), (59609,), (59625,), (59630,), (59636,), (59643,), (59668,), (59755,), (59757,), (59774,), (59777,), (59784,), (59796,), (59814,), (59815,), (59829,), (59831,), (59838,), (59850,), (59873,), (59879,), (59887,), (59891,), (59910,), (59916,), (59947,), (59988,), (60035,), (60073,), (60074,), (60149,), (60153,), (60154,), (60166,), (60221,), (60235,), (60238,), (60256,), (60274,), (60283,), (60328,), (60334,), (60352,), (60355,), (60362,), (60383,), (60410,), (60414,), (60418,), (60438,), (60448,), (60456,), (60460,), (60476,), (60500,), (60511,), (60601,), (60619,), (60622,), (60643,), (60666,), (60670,), (60680,), (60718,), (60743,), (60767,), (60777,), (60804,), (60817,), (60825,), (60828,), (60856,), (60872,), (60877,), (60893,), (60921,), (60938,), (60939,), (60952,), (60958,), (60994,), (61001,), (61002,), (61008,), (61026,), (61034,), (61036,), (61037,), (61055,), (61078,), (61080,), (61090,), (61108,), (61110,), (61131,), (61144,), (61150,), (61189,), (61217,), (61218,), (61225,), (61230,), (61232,), (61235,), (61264,), (61309,), (61328,), (61335,), (61344,), (61349,), (61393,), (61453,), (61510,), (61521,), (61535,), (61547,), (61569,), (61573,), (61626,), (61638,), (61649,), (61678,), (61681,), (61697,), (61705,), (61711,), (61729,), (61733,), (61740,), (61768,), (61798,), (61805,), (61815,), (61824,), (61829,), (61863,), (61869,), (61906,), (61924,), (61935,), (61956,), (62004,), (62006,), (62015,), (62032,), (62075,), (62092,), (62106,), (62208,), (62211,), (62225,), (62237,), (62247,), (62312,), (62347,), (62353,), (62370,), (62409,), (62416,), (62420,), (62439,), (62445,), (62470,), (62524,), (62531,), (62545,), (62621,), (62631,), (62646,), (62658,), (62677,), (62705,), (62714,), (62741,), (62747,), (62756,), (62758,), (62770,), (62795,), (62824,), (62852,), (62853,), (62862,), (62873,), (62876,), (62880,), (62899,), (62920,), (62949,), (62968,), (62995,), (63026,), (63028,), (63067,), (63074,), (63079,), (63099,), (63152,), (63155,), (63203,), (63222,), (63250,), (63313,), (63321,), (63350,), (63357,), (63417,), (63441,), (63447,), (63464,), (63487,), (63499,), (63546,), (63558,), (63566,), (63584,), (63604,), (63621,), (63647,), (63652,), (63669,), (63717,), (63725,), (63730,), (63760,), (63809,), (63856,), (63881,), (63922,), (63930,), (64006,), (64069,), (64147,), (64152,), (64172,), (64195,), (64208,), (64224,), (64226,), (64246,), (64249,), (64272,), (64293,), (64304,), (64311,), (64343,), (64370,), (64403,), (64425,), (64433,), (64500,), (64513,), (64526,), (64535,), (64538,), (64545,), (64551,), (64555,), (64558,), (64573,), (64581,), (64601,), (64612,), (64617,), (64621,), (64634,), (64652,), (64674,), (64676,), (64680,), (64683,), (64686,), (64697,), (64705,), (64711,), (64725,), (64738,), (64739,), (64788,), (64789,), (64790,), (64829,), (64830,), (64852,), (64863,), (64880,), (64927,), (64936,), (64949,), (64952,), (64991,), (65001,), (65005,), (65127,), (65128,), (65186,), (65202,), (65211,), (65212,), (65244,), (65276,), (65287,), (65290,), (65292,), (65344,), (65353,), (65379,), (65390,), (65405,), (65409,), (65421,), (65442,), (65446,), (65479,), (65487,), (65489,), (65566,), (65585,), (65637,), (65640,), (65643,), (65650,), (65671,), (65681,), (65682,), (65690,), (65692,), (65699,), (65705,), (65713,), (65762,), (65764,), (65775,), (65828,), (65844,), (65866,), (65898,), (65900,), (65912,), (65919,), (65942,), (66048,), (66086,), (66088,), (66105,), (66113,), (66161,), (66192,), (66199,), (66280,), (66300,), (66314,), (66315,), (66365,), (66369,), (66373,), (66448,), (66509,), (66543,), (66586,), (66591,), (66600,), (66610,), (66616,), (66622,), (66665,), (66710,), (66749,), (66757,), (66760,), (66791,), (66825,), (66925,), (66946,), (66956,), (66963,), (66992,), (67028,), (67049,), (67087,), (67185,), (67204,), (67309,), (67311,), (67318,), (67320,), (67362,), (67385,), (67400,), (67437,), (67443,), (67468,), (67543,), (67547,), (67551,), (67560,), (67623,), (67658,), (67677,), (67704,), (67721,), (67762,), (67771,), (67827,), (67897,), (67911,), (68011,), (68069,), (68077,), (68080,), (68086,), (68087,), (68106,), (68140,), (68151,), (68205,), (68236,), (68261,), (68274,), (68290,), (68349,), (68354,), (68394,), (68431,), (68454,), (68542,), (68562,), (68588,), (68644,), (68662,), (68692,), (68696,), (68710,), (68717,), (68737,), (68740,), (68759,), (68793,), (68830,), (68834,), (68893,), (68938,), (68940,), (68966,), (69001,), (69114,), (69115,), (69130,), (69136,), (69145,), (69157,), (69208,), (69237,), (69263,), (69353,), (69371,), (69383,), (69407,), (69424,), (69438,), (69452,), (69501,), (69515,), (69549,), (69570,), (69575,), (69638,), (69664,), (69699,), (69825,), (69886,), (69898,), (69983,), (70034,), (70054,), (70089,), (70100,), (70101,), (70107,), (70150,), (70168,), (70179,), (70248,), (70249,), (70266,), (70274,), (70322,), (70325,), (70425,), (70469,), (70490,), (70498,), (70509,), (70541,), (70545,), (70553,), (70556,), (70558,), (70574,), (70593,), (70619,), (70629,), (70643,), (70645,), (70658,), (70699,), (70741,), (70764,), (70783,), (70801,), (70824,), (70848,), (70855,), (70868,), (70889,), (70899,), (70937,), (70940,), (70959,), (70990,), (71026,), (71065,), (71136,), (71172,), (71176,), (71184,), (71187,), (71194,), (71197,), (71201,), (71208,), (71260,), (71314,), (71335,), (71414,), (71417,), (71452,), (71466,), (71485,), (71489,), (71517,), (71519,), (71535,), (71622,), (71684,), (71708,), (71727,), (71764,), (71777,), (71788,), (71914,), (71935,), (71946,), (71962,), (72047,), (72090,), (72196,), (72224,), (72230,), (72242,), (72243,), (72251,), (72258,), (72266,), (72288,), (72294,), (72370,), (72376,), (72381,), (72400,), (72418,), (72421,), (72439,), (72453,), (72515,), (72553,), (72557,), (72613,), (72627,), (72652,), (72654,), (72685,), (72709,), (72774,), (72788,), (72839,), (72854,), (72911,), (72940,), (72941,), (72953,), (72968,), (72992,), (73032,), (73050,), (73065,), (73165,), (73231,), (73238,), (73293,), (73320,), (73376,), (73416,), (73463,), (73540,), (73576,), (73592,), (73613,), (73646,), (73708,), (73765,), (73824,), (73869,), (73921,), (73966,), (74082,), (74098,), (74140,), (74174,), (74261,), (74351,), (74372,), (74377,), (74394,), (74418,), (74448,), (74468,), (74542,), (74544,), (74622,), (74661,), (74797,), (74832,), (74843,), (74850,), (74865,), (74878,), (74924,), (74965,), (75022,), (75045,), (75050,), (75054,), (76058,), (76059,), (76226,), (76240,), (76358,), (76365,), (76371,), (76444,), (76461,), (76488,), (76587,), (76642,), (76738,), (76761,), (76815,), (76856,), (76865,), (76875,), (76896,), (76935,), (76959,), (76994,), (77018,), (77125,), (77213,), (77290,), (77313,), (77359,), (77374,), (77394,), (77411,), (77528,), (77546,), (77573,), (77580,), (77586,), (77609,), (77634,), (77692,), (77752,), (77791,), (77834,), (77836,), (77850,), (77891,), (78042,), (78063,), (78104,), (78139,), (78155,), (78168,), (78255,), (78287,), (78321,), (78324,), (78365,), (78517,), (78547,), (78644,), (78711,), (78754,), (78797,), (78828,), (78839,), (78885,), (78940,), (79234,), (79281,), (79289,), (79357,), (79399,), (79406,), (79420,), (79454,), (79470,), (79531,), (79687,), (79688,), (80050,), (80189,), (80377,), (80380,), (80528,), (80730,), (80823,), (80874,), (80943,), (81000,), (81057,), (81138,), (81151,), (81261,), (81262,), (81284,), (81368,), (81396,), (81427,), (81457,), (81481,), (81482,), (81483,), (81523,), (81546,), (81609,), (81622,), (81727,), (81778,), (81864,), (81871,), (81986,), (82050,), (82102,), (82105,), (82162,), (82242,), (82326,), (82475,), (82497,), (82503,), (82579,), (82603,), (82682,), (82754,), (82776,), (82963,), (82984,), (83012,), (83022,), (83030,), (83136,), (83269,), (83310,), (83347,), (83392,), (83554,), (83577,), (83663,), (83731,), (83778,), (83899,), (83913,), (83982,), (84012,), (84076,), (84268,), (84314,), (84330,), (85363,), (85372,), (85445,), (85605,), (85687,), (85767,), (85903,), (86015,), (86024,), (86221,), (86285,), (86318,), (86348,), (86399,), (86429,), (86588,), (86719,), (86720,), (86767,), (86834,), (87132,), (87182,), (87403,), (87486,), (87524,), (87538,), (87695,), (87730,), (87744,), (87856,), (87871,), (87921,), (87956,), (88065,), (88188,), (88218,), (88267,), (88315,), (88348,), (88485,), (88603,), (88756,), (88905,), (88960,), (88980,), (89032,), (89104,), (89179,), (89303,), (89376,), (89382,), (89456,), (89513,), (89635,), (89941,), (90004,), (90149,), (90157,), (90231,), (90490,), (90711,), (90754,), (90793,), (90902,), (91034,), (91078,), (91107,), (91143,), (91253,), (91512,), (91536,), (92065,), (92081,), (92097,), (92150,), (92213,), (92303,), (92344,), (92443,), (92724,), (92829,), (93303,), (93392,), (93540,), (93592,), (93705,), (93743,), (93757,), (93830,), (94136,), (94974,), (95016,), (95694,), (95993,), (96042,), (96371,), (96483,), (96553,), (96739,), (97013,), (97085,), (97381,), (97604,), (97834,), (97929,), (99171,), (99690,), (99717,), (100041,), (100137,), (100151,), (100267,), (100785,), (101003,), (101255,), (101274,), (101354,), (101590,), (102709,), (102778,), (102806,), (103345,), (103417,), (103592,), (103843,), (104146,), (104500,), (104713,), (106367,), (108911,), (109076,), (109210,), (109390,), (110113,), (110473,), (110564,), (110801,), (111010,), (111035,), (111422,), (112147,), (112451,), (112769,), (113526,), (114152,), (114610,), (114665,), (114763,)]","[(7689,)]",Query results mismatch,0.05348283299827017
1405,student_club,True,moderate,"SELECT category, amount 
FROM budget 
WHERE link_to_event = 'recI43CzsZ0Q625ma' 
ORDER BY amount ASC","[('Parking', 10), ('Speaker Gifts', 25), ('Advertisement', 75), ('Food', 150)]","[('Parking', 10), ('Speaker Gifts', 25), ('Advertisement', 75), ('Food', 150)]",Query executed successfully,5.9792015235871077e-05
883,formula_1,False,simple,SELECT COUNT(*) AS num_races FROM races WHERE year = 2005,"[('United States Grand Prix',), ('Turkish Grand Prix',), ('Spanish Grand Prix',), ('San Marino Grand Prix',), ('Monaco Grand Prix',), ('Malaysian Grand Prix',), ('Japanese Grand Prix',), ('Italian Grand Prix',), ('Hungarian Grand Prix',), ('German Grand Prix',), ('French Grand Prix',), ('European Grand Prix',), ('Chinese Grand Prix',), ('Canadian Grand Prix',), ('British Grand Prix',), ('Brazilian Grand Prix',), ('Belgian Grand Prix',), ('Bahrain Grand Prix',), ('Australian Grand Prix',)]","[(19,)]",Query results mismatch,0.00010479099000804126
789,superhero,True,simple,SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE race_id = 2,"[(123.75,)]","[(123.75,)]",Query executed successfully,0.00014433299656957388
347,card_games,False,moderate,,,,Query generation failed,
1211,thrombosis_prediction,False,moderate,"SELECT Laboratory.ID, Patient.Birthday 
FROM Laboratory 
JOIN Patient ON Laboratory.ID = Patient.ID 
WHERE LDH > 300 AND LDH BETWEEN 100 AND 300","[(27654, 88), (912147, 49), (944797, 49), (1078741, 87), (1110526, 58), (1944990, 74), (2265184, 98), (2276582, 83), (2307640, 71), (2343945, 72), (2371753, 92), (2395148, 53), (2931207, 65), (3178036, 95), (3182521, 72), (3545964, 98), (4415406, 89), (4416959, 75), (4417978, 83), (4425292, 70), (4466840, 71), (4483771, 57), (4618443, 102), (4621629, 62), (4632421, 83), (4632519, 99), (4632548, 97), (4634342, 57), (4643816, 75), (4652830, 78), (4790235, 81), (4840422, 62), (4843434, 53), (4861720, 51), (4865142, 63), (4878272, 79), (4879930, 66), (4894243, 68), (4927381, 47), (5064814, 59), (5065022, 53), (5093188, 80), (5093771, 60), (5096552, 86), (5098691, 74), (5105683, 48), (5119703, 56), (5122312, 55), (5123360, 64), (5126587, 60), (5164396, 86), (5174645, 86), (5176755, 93), (5179581, 69), (5181621, 82), (5184284, 61), (5186147, 75), (5296268, 55), (5300381, 71), (5302954, 46), (5397059, 48), (5404650, 61), (5405581, 68), (5446559, 93), (5452747, 52)]",[],Query results mismatch,0.00047058399650268257
1115,european_football_2,False,challenging,SELECT * FROM Player_Attributes WHERE date = '2013-07-12' AND player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan' OR player_name = 'Jordan Bowery'),"[(25.31645569620253,)]",[],Query results mismatch,0.02460204201634042
1045,european_football_2,False,simple,"SELECT attacking_work_rate 
FROM Player_Attributes 
WHERE player_api_id = (SELECT player_api_id 
                       FROM Player 
                       WHERE player_name = 'Franco Zennaro')","[('medium',)]","[('medium',), ('medium',), ('medium',), ('medium',), ('medium',), ('medium',), ('medium',), ('medium',)]",Query results mismatch,0.018099207984050736
227,toxicology,False,simple,"SELECT COUNT(*) AS total_molecules, SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS carcinogenic_molecules FROM molecule","[(44.315,)]","[(343, 152)]",Query results mismatch,7.633399218320847e-05
1379,student_club,False,simple,SELECT COUNT(*) FROM event WHERE event_date >= '2020-01-01' AND event_date <= '2020-12-31',"[(9,)]","[(22,)]",Query results mismatch,5.549998604692519e-05
717,superhero,True,simple,SELECT power_name FROM superpower WHERE id IN (SELECT power_id FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man')),"[('Agility',), ('Super Strength',), ('Stamina',), ('Super Speed',)]","[('Agility',), ('Super Strength',), ('Stamina',), ('Super Speed',)]",Query executed successfully,0.0003884999896399677
1495,debit_card_specializing,False,simple,"SELECT CustomerID AS client_id, SUM(Price) AS total_consumed FROM transactions_1k WHERE strftime('%Y-%m', Date) = '2013-09' GROUP BY CustomerID ORDER BY total_consumed DESC LIMIT 1","[(12459,)]",[],Query results mismatch,0.00031516700983047485
1131,european_football_2,False,simple,"SELECT AVG(height) AS average_height 
FROM Player 
WHERE player_api_id IN (
    SELECT player_api_id 
    FROM Player_Attributes 
    WHERE player_api_id IN (
        SELECT player_api_id 
        FROM Team 
        WHERE team_api_id IN (
            SELECT team_api_id 
            FROM Team 
            WHERE team_long_name = 'Italy'
        )
    )
)","[(181.68908424908423,)]","[(None,)]",Query results mismatch,0.03576550001162104
1124,european_football_2,False,moderate,"SELECT p.player_name 
FROM Player p 
JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.home_player_2 OR p.player_api_id = m.home_player_3 OR p.player_api_id = m.home_player_4 OR p.player_api_id = m.home_player_5 OR p.player_api_id = m.home_player_6 OR p.player_api_id = m.home_player_7 OR p.player_api_id = m.home_player_8 OR p.player_api_id = m.home_player_9 OR p.player_api_id = m.home_player_10 OR p.player_api_id = m.home_player_11 
WHERE m.goal = '1'","[('Aaron Cresswell',), ('Aaron Lennon',), ('Aaron Meijers',), ('Aaron Niguez',), ('Aaron Ramsey',), ('Aaron Taylor-Sinclair',), ('Aaron Wilbraham',), ('Aatif Chahechouhe',), ('Abdelouahed Chakhsi',), ('Abdoul Razzagui Camara',), ('Abdoulay Konko',), ('Abdoulaye Diaby',), ('Abdoulaye Diallo Sadio,22',), ('Abdoulaye Doucoure',), ('Abdoulwahid Sissoko',), ('Abdul Rahman Baba',), ('Abdullahi Shehu',), ('Abel Tamata',), ('Abella Perez Damia',), ('Abraham Guie Gneki',), ('Abraham Minero',), ('Abraham Paz Cruz',), ('Achille Emana',), ('Achraf Lazaar',), ('Adam Armstrong',), ('Adam Banas',), ('Adam Buksa',), ('Adam Campbell',), ('Adam Fraczczak',), ('Adam Gyurcso',), ('Adam Hammill',), ('Adam Henley',), ('Adam Hlousek',), ('Adam Johnson',), ('Adam Lallana',), ('Adam Le Fondre',), ('Adam Maher',), ('Adam Marciniak',), ('Adam Marusic',), ('Adam Matthews',), ('Adam Mojta',), ('Adam Morgan',), ('Adam Ounas',), ('Adam Pazio',), ('Adam Rooney',), ('Adam Sarota',), ('Adam Smith',), ('Adam Szalai',), ('Adam Taggart',), ('Adama Traore',), ('Adel Taarabt',), ('Adem Ljajic',), ('Aderlan',), ('Adil Hermach',), ('Adil Rami',), ('Adilson',), ('Admir Mehmedi',), ('Adrian Klepczynski',), ('Adrian Lopez',), ('Adrian Mutu',), ('Adrian Ramos',), ('Adrian Ricardo Centurion',), ('Adrian Sardinero Corpa',), ('Adrian Stoian',), ('Adrian Winter',), ('Adriano Ferreira Pinto',), ('Adriano',), ('Adrien Rabiot',), ('Adrien Regattin',), ('Adrien Silva',), ('Adrien Trebel',), ('Afonso',), ('Agim Ibraimi',), ('Ahmed Ammi',), ('Ahmed El Mohamady',), ('Ahmed Musa',), ('Aiden McGeady',), ('Aislan',), ('Akos Buzsaky',), ('Alain Rochat',), ('Alain Schultz',), ('Alan Gow',), ('Alan Hutton',), ('Alassane Plea',), ('Albert Crusat',), ('Albert Rafetraniaina',), ('Albert Riera',), ('Albert Rusnak',), ('Alberto Aquilani',), ('Alberto Bueno',), ('Alberto De la Bella',), ('Alberto Gilardino',), ('Alberto Giuliatto',), ('Alberto Moreno',), ('Albin Ekdal',), ('Aldair',), ('Aldo Kalulu',), ('Alec Luyckx',), ('Aleix Vidal',), ('Alejandro Bedoya',), ('Alejandro Daro Gomez',), ('Alejandro Dominguez',), ('Alejandro Faurlin',), ('Alejandro Grimaldo Garcia',), ('Alejandro Pozuelo',), ('Aleksandar Kolarov',), ('Aleksandar Pesic',), ('Aleksandar Prijovic',), ('Aleksandar Todorovski',), ('Aleksandar Tonev',), ('Aleksandar Trajkovski',), ('Aleksander Jagiello',), ('Aleksander Kwiek',), ('Aleksandr Hleb',), ('Alen Halilovic',), ('Alen Stevanovic',), ('Alesandro Cordaro',), ('Alessandro Carrozza',), ('Alessandro Del Piero',), ('Alessandro Diamanti',), ('Alessandro Florenzi',), ('Alessandro Iandoli',), ('Alessandro Longhi',), ('Alessandro Matri',), ('Alessandro Parisi',), ('Alessandro Schoepf',), ('Alessandro Sgrigna',), ('Alessio Da Cruz',), ('Alessio Sestu',), ('Alex Baptiste',), ('Alex Bruno',), ('Alex Goncalves',), ('Alex Kacaniklic',), ('Alex MacDonald',), ('Alex Martinez',), ('Alex Menendez',), ('Alex Neil',), ('Alex Oxlade-Chamberlain',), ('Alex Pinardi',), ('Alex Sandro',), ('Alex Schalk',), ('Alex Telles',), ('Alex',), ('Alexander Bannink',), ('Alexander Buettner',), ('Alexander Djiku',), ('Alexander Fransson',), ('Alexander Frei',), ('Alexander Gerndt',), ('Alexander Gonzalez',), ('Alexander Mathisen',), ('Alexander Milosevic',), ('Alexander Scholz',), ('Alexandr Kerzhakov',), (""Alexandre D'Acol"",), ('Alexandre Lacazette',), ('Alexandre Pasche',), ('Alexandre Pato',), ('Alexandre Raineau',), ('Alexandru Maxim',), ('Alexi Peuget',), ('Alexis Sanchez',), ('Alexy Bosetti',), ('Alfred Finnbogason',), ('Alfredo Morales',), ('Alhassane Keita',), ('Ali Adnan',), ('Alireza Jahanbakhsh',), ('Aljaz Struna',), ('Allan Nyom',), ('Allan Saint-Maximin',), ('Aloys Nong',), ('Alpaslan Ozturk',), ('Alvaro Cejudo',), ('Alvaro Mejia',), ('Alvaro Morata',), ('Alvaro Negredo',), ('Alvaro Pereira',), ('Alvaro Saborio',), ('Alvaro Vazquez',), ('Aly Cissokho',), ('Aly Ndom',), ('Amad Al Hosni',), ('Amara Baby',), ('Amauri',), ('Amidio Balde',), ('Amilton',), ('Amin Younes',), ('Amine Mohamed Chermiti',), ('Amir Abrashi',), ('Amir Spahic',), ('Ammar Jemal',), ('Anastasios Donis',), ('Anatole Ngamukol',), ('Ander Capa',), ('Ander Herrera',), ('Ander Iturraspe',), ('Anders Christiansen',), ('Anders Konradsen',), ('Anderson Correia',), ('Anderson Luis',), ('Anderson Melo',), ('Andoni Iraola',), ('Andras Gosztonyi',), ('Andraz Kirm',), ('Andre Andre',), ('Andre Ayew',), ('Andre Biyogo Poko',), ('Andre Blackman',), ('Andre Carrillo',), ('Andre Castro',), ('Andre Horta',), ('Andre Martins',), ('Andre Ramalho Silva',), ('Andre Santos',), ('Andre Schuerrle',), ('Andre Silva',), ('Andre Simoes',), ('Andre-Pierre Gignac',), ('Andrea Belotti',), ('Andrea Bertolacci',), ('Andrea Conti',), ('Andrea Cossu',), ('Andrea Fileccia',), ('Andrea Lazzari',), ('Andrea Pisanu',), ('Andrea Rispoli',), ('Andrea Rossi',), ('Andrea Russotto',), ('Andreas Beck',), ('Andreas Granqvist',), ('Andreas Ivanschitz',), ('Andreas Johansson',), ('Andreas Lambertz',), ('Andreas Samaris',), ('Andreas Weimann',), ('Andreas Wittwer',), ('Andres Guardado',), ('Andres Iniesta',), ('Andrew Crofts',), ('Andrew Driver',), ('Andrew Johnson',), ('Andrew Keogh',), ('Andrew Little',), ('Andrew Mitchell',), ('Andrew Reid',), ('Andrew Robertson',), ('Andrew Taylor',), ('Andrew Wooten',), ('Andrey Voronin',), ('Andrezinho',), ('Andros Townsend',), ('Andy Carroll',), ('Andy Delort',), ('Andy Dorman',), ('Andy King',), ('Andy Najar',), ('Anele Ngcongca',), ('Angel Correa',), ('Angel Di Maria',), ('Angel Javier Arizmendi',), ('Angel Rangel',), ('Angel Rodriguez',), ('Angelo',), ('Anselmo',), ('Ante Vukusic',), ('Anthony Andreu',), ('Anthony Knockaert',), ('Anthony Le Tallec',), ('Anthony Limbombe',), ('Anthony Martial',), ('Anthony Modeste',), ('Anthony Mounier',), ('Anthony Pilkington',), ('Anthony Ribelin',), ('Anthony Ujah',), ('Anthony Vanden Borre',), ('Antoine Conte',), ('Antoine Devaux',), ('Antoine Griezmann',), ('Antoni Lukasiewicz',), ('Antonini Culina',), ('Antonio Balzano',), ('Antonio Barilla',), ('Antonio Barragan',), ('Antonio Bocchetti',), ('Antonio Candreva',), ('Antonio de Azevedo',), ('Antonio Di Gaudio',), ('Antonio Di Natale',), ('Antonio Floro Flores',), ('Antonio Ghomsi',), ('Antonio Guayre',), ('Antonio Luna',), ('Antonio Mazzotta',), ('Antonio Nocerino',), ('Antonio Rukavina',), ('Antonio Sanabria',), ('Antonio Valencia',), ('Antonio Zito',), ('Antunes',), ('Apostolos Vellios',), ('Aras Oezbiliz',), ('Arber Zeneli',), ('Archimede Morleo',), ('Arda Turan',), ('Ariel Ibagaza',), ('Ariel Nahuelpan',), ('Aristide Bance',), (""Aristote N'Dongala"",), ('Aritz Aduriz',), ('Ariza Makukula',), ('Arjen Robben',), ('Arkadiusz Piech',), ('Armand Traore',), ('Armin Bacinovic',), ('Arne Naudts',), ('Arnold Bouka Moutou',), ('Arnold Mvuemba',), ('Arnold',), ('Arnor Angeli',), ('Arnor Smarason',), ('Aron Johannsson',), ('Arsenio',), ('Artem Kravets',), ('Arthur Boka',), ('Arthur Masuaku',), ('Arthur',), ('Artiles Oliva Aythami',), ('Artjoms Rudnevs',), ('Artur Gieraga',), ('Artur Ionita',), ('Artur Jedrzejczyk',), ('Artur',), ('Arturo Vidal',), ('Aruna Dindane',), ('Arvydas Novikovas',), ('Asamoah Gyan',), ('Ashley Barnes',), ('Ashley Cole',), ('Ashley Young',), ('Asier Goiria',), ('Atiba Hutchinson',), ('Atila Turan',), ('Atsuto Uchida',), ('Aurelien Chedjou',), ('Aurelien Joachim',), ('Aurelien Montaroup',), ('Axel Bellinghausen',), ('Axel Borgmann',), ('Axel Witsel',), ('Ayanda Patosi',), ('Aymen Abdennour',), ('Ayoze Perez',), ('Aytac Sulu',), ('Baard Finne',), ('Baba',), ('Babanco',), ('Bacary Sagna',), ('Badr El Kaddouri',), ('Bafetimbi Gomis',), ('Baiano',), ('Bakari Kone',), ('Bakary Sako',), ('Bakary Soro',), ('Bakaye Traore',), ('Balde Diao Keita',), ('Banel Nicolita',), ('Baptiste Guillaume',), ('Baptiste Ulens',), ('Barak Badash',), ('Barreto',), ('Barry Douglas',), ('Barry Nicholson',), ('Barry Robson',), ('Bart Buysse',), ('Bart Goor',), ('Bart van Hintum',), ('Bartholomew Ogbeche',), ('Bartlomiej Babiarz',), ('Bartosz Bereszynski',), ('Bartosz Iwan',), ('Bartosz Jaroch',), ('Bartosz Kapustka',), ('Bartosz Lawa,25',), ('Bartosz Salamon',), ('Bartosz Slusarski',), ('Bartosz Szeliga',), ('Bastian Oczipka',), ('Bastian Schweinsteiger',), ('Behrang Safari',), ('Ben Davies',), ('Ben Gordon',), ('Ben Rienstra',), ('Bence Mervo',), ('Bengali-Fode Koita',), ('Beni Badibanga',), ('Benik Afobe',), ('Benito Raman',), ('Benjamin Andre',), ('Benjamin De Ceulaer',), ('Benjamin Huebner',), ('Benjamin Kessel',), ('Benjamin Kololli',), ('Benjamin Lambot',), ('Benjamin Mendy',), ('Benjamin Moukandjo',), ('Benjamin Tetteh',), ('Bennard Yao Kumordzi',), ('Benoit Assou-Ekotto',), ('Benoit Ladriere',), ('Benoit Lesoimier',), ('Benoit Tremoulinas',), ('Berat Djimsiti',), ('Bernard Mensah',), ('Bernardo Silva',), ('Bernd Nehrig',), ('Bernt Evens',), ('Billy Jones',), ('Billy Ketkeophomphone',), ('Billy McKay',), ('Birama Ndoye',), ('Birkir Bjarnason',), ('Bjoern Helge Riise',), ('Bjorn Ruytinx',), ('Blaise Matuidi',), ('Blazej Telichowski',), ('Blerim Dzemaili',), ('Bob Schepers',), ('Boban Jovic',), ('Bobby Zamora',), ('Bojan Bozovic',), ('Bojan Krkic',), ('Boldiszar Bodor',), ('Boli Bolingoli-Mbombo',), ('Boris Vukcevic',), ('Borja Garcia',), ('Borja Mayoral',), ('Borja Perez',), ('Borja Valero',), ('Bosko Jankovic',), ('Boubacar Diabang Dialiba',), ('Boubacar Fofana',), ('Boukari Drame',), ('Bouna Sarr',), ('Bradley Orr',), ('Braga',), ('Bram van Polen',), ('Branco van den Boomen',), ('Brandao',), ('Branislav Ivanovic',), ('Brayan Beckeles',), ('Brayan Perea',), ('Brecht Capon',), ('Brecht Dejaeghere',), ('Breel Embolo',), ('Breitner',), ('Breno',), ('Brett Emerton',), ('Brett Holman',), ('Brice Dja Djedje',), ('Brown Ideye',), ('Bruma',), ('Bruno Cortez',), ('Bruno Fernandes',), ('Bruno Gaspar',), ('Bruno Henrique',), ('Bruno Nascimento',), ('Bruno Nazario',), ('Bruno Pereirinha',), ('Bruno Peres',), ('Bruno Perone',), ('Bruno Petkovic',), ('Bruno Saltor',), ('Bruno Severino',), ('Bruno Vilela Gama',), ('Bruno Zuculini',), ('Bryan Bergougnoux',), ('Bryan Dabo',), ('Bryan Linssen',), ('Bryan Oviedo',), ('Bryan Smeets',), ('Bryan Verboom',), ('Burgui',), ('Caca',), ('Cacau',), ('Caetano',), ('Caiuby',), ('Cala',), ('Caleb Folan',), ('Caleb Gomina',), ('Callum Booth',), ('Callum McGregor',), ('Callum McManaman',), ('Callum Paterson',), ('Callum Wilson',), ('Calum Chambers',), ('Cameron Brannagan',), ('Cameron Jerome',), ('Cameron Kerr',), ('Caner Cavlan',), ('Cani',), ('Carl Finnigan',), ('Carl Jenkinson',), ('Carlao',), ('Carles Gil',), ('Carles Planas',), ('Carlitos',), ('Carlos Bacca',), ('Carlos Carbonero',), ('Carlos Carmona',), ('Carlos Castro',), ('Carlos Clerc',), ('Carlos Eduardo',), ('Carlos Edwards',), ('Carlos Javier Grossmuller',), ('Carlos Mane',), ('Carlos Martinez',), ('Carlos Olascuaga',), ('Carlos Pena',), ('Carlos Salcido',), ('Carlos Sanchez',), ('Carlos Tevez',), ('Carlos Tomas',), ('Carlos Vela',), ('Carlton Cole',), ('Carsten Rothenbach',), ('Cas Peters',), ('Cassio Magalhaes',), ('Cassio',), ('Cauley Woodrow',), ('Cedric Bakambu',), ('Cedric Faure',), ('Cedric Hengbart',), ('Cedric Makiadi',), ('Cedric Soares',), ('Cedric',), ('Celso Borges',), ('Cesar Azpilicueta',), ('Cesar Delgado',), ('Cesar',), ('Cesc Fabregas',), ('Chadrac Akolo',), ('Chaker Alhadhur',), ('Chancel Mbemba',), ('Chaouki Ben Saada',), ('Charalampos Mavrias',), ('Charles Diers',), ('Charles Mulgrew',), ('Charles Telfer',), ('Charles',), ('Charlie Austin',), ('Charlie Daniels',), ('Charlie Taylor',), ('Charlison Benschop',), ('Charlton Vicento',), ('Charly Musonda',), ('Cheikh Ndoye',), ('Cheikhou Kouyate',), ('Chengdong Zhang',), ('Chico',), ('Chinedu Obasi',), ('Chris Erskine',), ('Chris Gunter',), ('Chris Herd',), ('Chris Humphrey',), ('Chris Iwelumo',), ('Chris Loewe',), ('Chris McCann',), ('Chris Porter',), ('Chris Turner',), ('Christian Atsu',), ('Christian Bekamenga',), ('Christian Bruels',), ('Christian Clemens',), ('Christian Eigler',), ('Christian Eriksen',), ('Christian Fernandez',), ('Christian Fuchs',), ('Christian Gentner',), ('Christian Grindheim',), ('Christian Irobiso',), ('Christian Kinkela',), ('Christian Lell',), ('Christian Maggio',), ('Christian Pander',), ('Christian Santos',), ('Christian Schwegler',), ('Christian Terlizzi',), ('Christian Tiffert',), ('Christian Traesch',), ('Christie Elliot',), ('Christoph Kramer',), ('Christophe Jallet',), ('Christophe Lepoint',), ('Christopher Avevor',), ('Christopher Glombard',), ('Christopher Johnston',), ('Christopher Maboulou',), ('Christopher Nkunku',), ('Christopher Oualembo',), ('Christopher Teichmann',), ('Chu-Young Park',), ('Cicero',), ('Cicinho',), ('Ciprian Marica',), ('Ciro Capuano',), ('Ciro Immobile',), ('Claudemir',), ('Claudio Beauvue',), ('Claudio Lustenberger',), ('Claudio Marchisio',), ('Claudio Pitbull',), ('Claudiu Keseru',), ('Cleber Santana',), ('Clement Chantome',), ('Clement Grenier',), ('Clement Tainmont',), ('Cleyton',), ('Clinton Njie',), ('Coke',), ('Colin Nish',), ('Collin Benjamin',), ('Connor Wickham',), ('Conor Newton',), ('Conor Sammon',), ('Conor Townsend',), ('Constant Djakpa',), ('Constantin Nica',), ('Corentin Jean',), ('Corentin Tolisso',), ('Craig Bellamy',), ('Craig Bryson',), ('Craig Conway',), ('Craig Dawson',), ('Craig Eastmond',), ('Craig Gardner',), ('Craig Moore',), ('Craig Noone',), ('Craig Wighton',), ('Crislan',), ('Cristian Amado',), ('Cristian Battocchio',), ('Cristian Benitez',), ('Cristian Cuevas',), ('Cristian Daniel Ansaldi',), ('Cristian Gamboa',), ('Cristian Herrera',), ('Cristian Manea',), ('Cristian Molinaro',), ('Cristian Raimondi',), ('Cristian Rodriguez',), ('Cristian Sapunaru',), ('Cristian Stuani',), ('Cristian Tello Herrera',), ('Cristiano Del Grosso',), ('Cristiano Piccini',), ('Cristiano Ronaldo',), ('Cristiano',), ('Cristobal',), ('Cuco Martina',), ('Cyriaque Rivieyran',), ('Cyril Thereau',), ('Dalbert',), ('Dalcio Gomes',), ('Daley Blind',), ('Dalibor Veselinovic',), ('DaMarcus Beasley',), (""Dame N'Doye"",), ('Damian Ciechanowski',), ('Damian Dabrowski',), ('Damian Hops Chmiel',), ('Damian Suarez',), ('Damian Tixier',), ('Damian Zbozien',), ('Damiano Schet',), ('Damiano Zanon',), ('Dammyano Grootfaam',), ('Dani Benitez',), ('Dani Castellano',), ('Dani Estrada',), ('Dani Fernandez',), ('Daniel Agger',), ('Daniel Alves',), ('Daniel Amartey',), ('Daniel Brosinski',), ('Daniel Candeias',), ('Daniel Carrico',), ('Daniel Carvajal',), ('Daniel de Ridder',), ('Daniel Dziwniel',), ('Daniel Elias Araujo Maykon',), ('Daniel Follonier',), ('Daniel Ginczek',), ('Daniel Graham',), ('Daniel Gygax',), ('Daniel Halfar',), ('Daniel Larsson',), ('Daniel Lopez',), ('Daniel Opare',), ('Daniel Potts',), ('Daniel Pudil',), ('Daniel Sturridge',), ('Daniel Wass',), ('Daniele Baselli',), ('Daniele Cacia',), ('Daniele Corvia',), ('Daniele Croce',), ('Daniele De Rossi',), ('Daniele Gastaldello',), ('Daniele Mannini',), ('Daniele Ragatzu',), ('Danijel Aleksic',), ('Danijel Ljuboja',), ('Danijel Pranjic',), ('Danilo Cataldi',), (""Danilo D'Ambrosio"",), ('Danilo Fernando Avelar',), ('Danilo Soares',), ('Danilo Soddimo',), ('Danilo',), ('Danko Lazovic',), ('Danny da Costa',), ('Danny Drinkwater',), ('Danny Grainger',), ('Danny Ings',), ('Danny Latza',), ('Danny Rose',), ('Danny Verbeek',), ('Danny Webber',), ('Danny Welbeck',), ('Dante',), ('Dany Maury',), ('Danzell Gravenberch',), ('Dario Lezcano',), ('Dariusz Formella',), ('Dariusz Jarecki',), ('Darren Mackie',), ('Darren McGregor',), ('Darren Pratley',), ('Darryl Duffy',), ('Darryl Lachman',), ('Darryl Westlake',), ('Darwin Andrade',), ('Darwin Machis',), ('Daryl Janmaat',), ('Daryl Murphy',), ('David Addy',), ('David Alaba',), ('David Amoo',), ('David Barral',), ('David Caiado',), ('David Carney',), ('David Clarkson',), ('David Cortes',), ('David Degen',), ('David Ducourtioux',), ('David Edwards',), ('David Frey',), ('David Fuster Torrijos',), ('David Goodwillie',), ('David Graham',), ('David Healy',), ('David Junca',), ('David Luiz',), ('David Mendes',), ('David Meyler',), ('David Moberg Karlsson',), ('David Ngog',), ('David Nugent',), ('David Raven',), ('David Salomon Abwo',), ('David Sauget',), ('David Silva',), ('David Simao',), ('David Simon',), ('David Suazo',), ('David Templeton',), ('David Texeira',), ('David van Zanten',), ('David Villa',), ('David Wijns',), ('David Wotherspoon',), ('David Zurutuza',), ('Davide Biondini',), ('Davide Brivio',), ('Davide Calla',), ('Davide Chiumiento',), ('Davide Di Gennaro',), ('Davide Lanzafame',), ('Davide Moscardelli',), ('Davide Santon',), ('Davide Zappacosta',), ('Davy de Fauw',), ('Davy Klaassen',), ('Dawid Nowak',), ('Daylon Claasen',), ('Dean Hammond',), ('Dean Shiels',), ('DeAndre Yedlin',), ('Declan John',), ('Deivid',), ('Dejan Drazic',), ('Dejan Lazarevic',), ('Dejan Lovren',), ('Dejan Skolnik',), ('Dele Alli',), ('Deleu',), ('Demba Ba',), ('Demba Camara',), ('Demetris Christofi',), ('Denis Alibec',), ('Denis Cheryshev',), ('Denis Odoi',), ('Denis Oliynyk',), ('Denis Stracqualursi',), ('Denis Suarez',), ('Deniss Rakels',), ('Deniz Hummet',), ('Deniz Tueruec',), ('Deniz Yilmaz',), ('Dennis Aogo',), ('Dennis Diekmeier',), ('Dennis Hediger',), ('Dennis Kruppke',), ('Dennis Oliech',), ('Dennis Rommedahl',), ('Dennis Soerensen',), ('Denzel Slager',), ('Derek Asamoah',), ('Derick Chuka Ogbu',), ('Derk Boerrigter',), ('Derlis Gonzalez',), ('Deyverson',), ('Diafra Sakho',), ('Dico Koppers',), ('Didac Vila',), ('Didier Drogba',), ('Didier Konan Ya',), ('Didier Zokora',), ('Diego Barcelos',), ('Diego Capel',), ('Diego Ciccone',), ('Diego Costa',), ('Diego Falcinelli',), ('Diego Farias',), ('Diego Forlan',), ('Diego Ifran',), ('Diego Laxalt',), ('Diego Mauricio',), ('Diego Milito',), ('Diego Perotti',), ('Diego Reyes',), ('Diego Rolan',), ('Diego Seoane Perez',), ('Diego Valeri',), ('Diego',), ('Dimitar Rangelov',), ('Dimitri Mohamed',), ('Dimitri Payet',), ('Dimitrios Papadopoulos',), ('Dimitrios Pelkas',), ('Diogo Cunha',), ('Diogo Figueiras',), ('Diogo Jota',), ('Diogo Viana',), ('Dion Cools',), ('Dionisio Villalba',), ('Dirk Kuyt',), ('Divine Naah',), ('Divock Origi',), ('Djalma',), ('Djalmir',), ('Djamal Mahamat',), ('Djamel Abdoun',), ('Djamel Mesbah',), ('Djaniny',), ('Djavan',), ('Djibril Cisse',), ('Djibril Sidibe',), ('Djordje Susnjar',), ('Do-Heon Kim',), ('Dodo',), ('Dolly Menga',), ('Domen Crnigoj',), ('Domenico Berardi',), ('Domenico Criscito',), ('Domingo Cisma',), ('Domingos Alexandre Martins da Costa Alex',), ('Dominik Furman',), ('Dominik Kumbela',), ('Dominik Stroh-Engel',), ('Don Cowie',), ('Dong-Won Ji',), ('Donny Gorter',), ('Donovan Slijngard',), ('Dor Malul',), ('Dorde Cotra',), ('Dorge Kouemaha',), ('Dorian Caddy',), ('Dorlan Pabon',), ('Dorvalino Alves Maciel Lino',), ('Dougie Imrie',), ('Douglas Abner',), ('Douglas Santos',), ('Douglas',), ('Dragan Mrdja',), ('Dragan Paljic',), ('Dries Mertens',), ('Drissa Diakite',), ('Du-Ri Cha',), ('Dudley Campbell',), ('Dudu Paraiba',), ('Duje Cop',), ('Dusan Basta',), ('Dusan Djuric',), ('Dusan Svento',), ('Dusko Tosic',), ('Dwight Tiendalli',), ('Dyego Rocha Coelho',), ('Eamonn Brophy',), ('Ebenezer Assifuah',), ('Ebrahima Ibou Sawaneh',), ('Eden Hazard',), ('Edenilson',), ('Eder Citadin Martins',), ('Eder Sciola',), ('Ederson',), ('Edgar Alvarez',), ('Edgar Antonio Mendez',), ('Edgar Prib',), ('Edgar Salli',), ('Edin Dzeko',), ('Edinho',), ('Edinson Cavani',), ('Edmilson Fernandes',), ('Edmilson Junior',), ('Edouard Duplan',), ('Edson Braafheid',), ('Edu Albacar',), ('Edu Oriol',), ('Edu',), ('Eduardo Salvio',), ('Eduardo Vargas',), ('Eduardo',), ('Eduards Visnakovs',), ('Edwin de Graaf',), ('Efrain Juarez',), ('El-Arbi Hilal Soudani',), ('Elderson',), ('Eliaquim Mangala',), ('Elias',), ('Elio Martins',), ('Eliran Atar',), ('Eliseu',), ('Eljero Elia',), ('Eloge Enza-Yamissi',), ('Elohim Rolland',), ('Elseid Hysaj',), ('Elton',), ('Elvis Abbruscato',), ('Elvis Bratanovic',), ('Elvis Manu',), ('Elyaniv Barda',), ('Emanuel Boakye',), ('Emanuele Giaccherini',), ('Emerson',), ('Emidio Rafael',), ('Emil Drozdowicz',), ('Emil Gabriel Jula',), ('Emil Hallfredsson',), ('Emil Johansson',), ('Emil Krafth',), ('Emile Heskey',), ('Emiliano Insua',), ('Emiliano Sala',), ('Emiliano Velazquez',), ('Emilio Izaguirre',), ('Emilio Nsue',), ('Emmanuel Agyemang-Badu',), ('Emmanuel Boateng',), ('Emmanuel Cascione',), ('Emmanuel Eboue',), ('Emmanuel Emenike',), ('Emmanuel Frimpong',), ('Emmanuel Herrera',), ('Emmanuel Imorou',), ('Emmanuel Mayuka',), ('Emmanuel Riviere',), ('Eneko Boveda',), ('Enes Saglik',), ('Enes Unal',), ('Enner Valencia',), ('Enric Saborit',), ('Enrico Schirinzi',), ('Enrique de Lucas',), ('Enzo Crivelli',), ('Eoin Doyle',), ('Erdin Demir',), ('Eric Bautheac',), ('Eric Bertrand Bailly',), ('Eric Durm',), ('Eric Lichaj',), ('Eric Maxim Choupo-Moting',), ('Erik Bakker',), ('Erik Cikos',), ('Erik Friberg',), ('Erik Grendel',), ('Erik Huseklepp',), ('Erik Johansson',), ('Erik Lamela',), ('Erik Nevland',), ('Erik Sviatchenko',), ('Ermir Lenjani',), ('Ernest Ohemeng',), ('Ernest Webnje Nfor',), ('Ernesto Farias',), ('Eros Pisano',), ('Erwin Hoffer',), ('Esmael Goncalves',), ('Esparza Jokin Arcaya',), ('Esteban Cambiasso',), ('Etien Velikonja',), ('Etienne Didot',), ('Etienne Reijnen',), ('Eugene Ansah',), ('Evaldo',), ('Evan Melo',), ('Evandro Brandao',), ('Evangelos Ikonomou',), ('Evariste Ngolok',), ('Everton',), ('Ewerthon',), ('Ezequiel Lavezzi',), ('Ezequiel Scarione',), ('Ezgjan Alioski',), ('Fabian Delph',), ('Fabian Frei',), ('Fabian Johnson',), ('Fabian Lustenberger',), ('Fabian Monzon',), ('Fabian Orellana',), ('Fabian Rinaudo',), ('Fabian Schaer',), ('Fabien Tchenkoua',), ('Fabinho',), ('Fabio Borini',), ('Fabio Caserta',), ('Fabio Coentrao',), ('Fabio Daprela',), ('Fabio Espinho',), ('Fabio Felicio',), ('Fabio Nunes',), ('Fabio Quagliarella',), ('Fabio Simplicio',), ('Fabio',), ('Fabrice Abriel',), ('Fabrice Begeorgi',), (""Fabrice N'Sakala"",), ('Fabrice Olinga',), ('Fabrizio Grillo',), ('Fabrizio Miccoli',), ('Facundo Bertoglio',), ('Facundo Sebastian Roncaglia',), ('Fagner',), ('Fahd Aktaou',), ('Fahid Ben Khalfallah',), ('Faouzi Ghoulam',), ('Fares Bahlouli',), ('Farid El Alagui',), ('Faris Haroun',), ('Farshad Noor',), ('Fausto Rossi',), ('Faysel Kasmi',), ('Federico Andrada',), ('Federico Balzaretti',), ('Federico Bernardeschi',), ('Federico Dionisi',), ('Federico Nicolas Cartabia',), ('Federico Ricci',), ('Fedor Smolov',), ('Felipe Anderson',), ('Felipe Gedoz',), ('Felipe Gutierrez',), ('Felipe Mattioni Rohde',), ('Felipe Melo',), ('Felipe Pardo',), ('Felix Bastians',), ('Felix Klaus',), ('Felix Luz',), ('Femi Balogun',), ('Ferhan Hasani',), ('Fernando Aristeguieta',), ('Fernando Belluschi',), ('Fernando Canesin Matos',), ('Fernando Lewis',), ('Fernando Marcal',), ('Fernando Martin Forestieri',), ('Fernando Soriano',), ('Fernando Torres',), ('Fernando Uribe',), ('Fernando Varela',), ('Ferran Corominas',), ('Fethi Harek',), ('Fidel',), ('Fidelis',), ('Filip Burkhardt',), ('Filip Djuricic',), ('Filip Kiss',), ('Filip Kostic',), ('Filip Markovic',), ('Filip Starzynski',), ('Filipe Ferreira',), ('Filipe Luis',), ('Fin Bartels',), ('Flavio Paixao',), ('Florent Hadergjonaj',), ('Florent Hanin',), ('Florian Klein',), ('Florian Niederlechner',), ('Florian Thauvin',), ('Florin Andone',), ('Floyd Ayite',), ('Fousseni Diawara',), ('Fraizer Campbell',), ('Francesco Acerbi',), ('Francesco Caputo',), ('Francesco Grandolfo',), ('Francesco Migliore',), ('Francesco Modesto',), ('Francesco Pisano',), ('Francesco Renzetti',), ('Francesco Valiani',), ('Francisco Afonso',), ('Francisco Alcacer',), ('Francisco Javier Casquero',), ('Francisco Portillo',), ('Francisco Rodriguez',), ('Francisco Sandaza',), ('Franck Etoundi',), ('Franck Ribery',), ('Franck Signorino',), ('Franck Tabanou',), ('Franco Daniel Jara',), ('Franco Di Santo',), ('Franco Semioli',), ('Franco Sosa',), ('Francois Kamano',), ('Frank Acheampong',), ('Frank Adu Kwame',), ('Frank Lampard',), ('Fransergio',), ('Frantisek Rajtoral',), ('Franz Burgmeier',), ('Fred Benson',), ('Freddie Sears',), ('Frederic Gounongbe',), ('Frederic Sammaritano',), ('Frederik Boi',), ('Fredrik Stenman',), ('Fredy Guarin',), ('Fredy Hinestroza',), ('Fredy Montero',), ('Gabriel Paulista',), ('Gabriel Silva',), ('Gabriel Torje',), ('Gabriele Perico',), ('Gadji Tallo',), ('Gael Clichy',), ('Gael Kakuta',), ('Gaetan Bong',), ('Gaetan Bussmann',), ('Gaetan Charbonnier',), ('Gaetan Courtet',), ('Gaetan Hendrickx',), ('Gaetan Karlen',), ('Gaetano Letizia',), ('Gaetano Masucci',), ('Gaizka Toquero',), ('Gareth Bale',), ('Garry Bocaly',), ('Garry Hay',), ('Garry Kenneth',), ('Gary Cahill',), ('Gary Glen',), ('Gary Harkins',), ('Gary Irvine',), ('Gary Medel',), ('Gary Naysmith',), (""Gary O'Neil"",), ('Gaston Brugman',), ('Gaston Pereiro',), ('Gavin Hoyte',), ('Gavin Reilly',), ('Geir Ludvig Fevang',), ('Gelson',), ('Gennaro Delvecchio',), ('Gennaro Sardo',), ('Geoff Cameron',), ('Geoffrey Dernis',), ('George Boyd',), ('George Francomb',), ('George Friend',), (""Georges N'Koudou"",), ('Georgi Milanov',), ('Georginio Wijnaldum',), ('Georgios Karagounis',), ('Georgios Samaras',), ('Georgiy Zhukov',), ('Gerald Asamoah',), ('Gerard Deulofeu',), ('Gerard Pique',), ('Gergely Rudolf',), ('Gergo Lovrencsics',), ('Gerso Fernandes',), ('Gerson Guimaraes',), ('Gervinho',), ('Gevorg Ghazaryan',), ('Giacomo Bonaventura',), ('Giampaolo Pazzini',), ('Giampiero Pinzi',), ('Gianluca Caprari',), ('Gianluca Frontino',), ('Gianluca Musacci',), ('Gianluca Zambrotta',), ('Giannelli Imbula Wanga',), ('Gianni Munari',), ('Gilberto',), ('Giles Barnes',), ('Giles Coke',), ('Giliano Wijnaldum',), ('Gill Swerts',), ('Gino Peruzzi',), ('Giorgos Galitsios',), ('Giovani dos Santos',), ('Giovanni Gravenbeek',), ('Giovanni Korte',), ('Giovanni Pasquale',), ('Giovanni Sio',), ('Giuseppe Bellusci',), ('Giuseppe De Luca',), ('Giuseppe Gemiti',), ('Giuseppe Pezzella',), ('Giuseppe Rossi',), ('Giuseppe Sculli',), ('Glen Johnson',), ('Gnaly Maxwell Cornet',), ('Gohi Bi Cyriac',), ('Gokhan Tore',), ('Goncalo Guedes',), ('Gonzalo Bergessio',), ('Gonzalo Castro',), ('Gonzalo Higuain',), ('Gonzalo Jara',), ('Goran Karanovic',), ('Goran Popov',), ('Gordan Bunoza',), ('Gotoku Sakai',), ('Graeme Shinnie',), ('Graham Carey',), ('Graham Cummins',), ('Graham Dorrans',), ('Grant Holt',), ('Graziano Pelle',), ('Greg Docherty,17',), ('Greg Kiltie',), ('Greg Stewart',), ('Greg Tansey',), ('Gregg Wylde',), ('Gregoire Defrel',), ('Gregory Beranger',), ('Gregory Sertic',), ('Gregory van der Wiel',), ('Grejohn Kyei',), ('Grzegorz Kuswik',), ('Grzegorz Wojtkowiak',), ('Gueida Fofana',), ('Guerrero',), ('Guido Marilungo',), ('Guilherme Do Prado',), ('Guilherme Santos',), ('Guilherme Siqueira',), ('Guilherme',), ('Guillaume Francois',), ('Guillaume Gillet',), ('Guillermo Juan Vallori',), ('Guillermo Molins',), ('Guillermo Varela',), ('Guus Hupperts',), ('Guy Ramos',), ('Guyon Fernandez',), ('Gwion Edwards',), ('Gylfi Sigurdsson',), ('Gyorgy Garics',), ('Haavard Nielsen',), ('Hakim Ziyech',), ('Halil Altintop',), ('Hamdi Harbaoui',), ('Hamit Altintop',), ('Hanan Maman',), ('Hans Vanaken',), ('Haris Seferovic',), ('Haris Vuckic',), ('Harmeet Singh',), ('Harry Arter',), ('Harry Forrester',), ('Harry Kane',), ('Hasan Kabze',), ('Hassan El Mouataz',), ('Hatem Ben Arfa',), ('Hector Bellerin',), ('Hector Hernandez',), ('Hector Herrera',), ('Hector Quinones',), ('Heiko Butscher',), ('Heinrich Schmidtgal',), ('Helder Barbosa',), ('Helder Cabral',), ('Helder Costa',), ('Helder Lopes',), ('Helder Pelembe',), ('Helder Postiga',), ('Heldon',), ('Helio Pinto',), ('Henk Dijkhuizen',), ('Henning Hauger',), ('Henri Bedimo',), ('Henri Saivet',), ('Henrik Dalsgaard',), ('Henrik Mkhitaryan',), ('Henrik Ojamaa',), ('Henrique Dourado',), ('Henrique',), ('Henry Gimenez',), ('Hernan Hinostroza',), ('Hernan Perez',), ('Hernanes',), ('Hernani',), ('Herold Goulon',), ('Herve Bazile',), ('Herve Kage',), ('Hervin Ongenda',), ('Heung-Min Son',), ('Hilton',), ('Hoerdur Magnusson',), ('Hope Akpan',), ('Houssine Kharja',), ('Hugo Campagnaro',), ('Hugo Leal',), ('Hugo Mallo',), ('Hugo Rodallega',), ('Hugo Seco',), ('Hugo Viana',), ('Hugo Vieira',), ('Hulk',), ('Humberto Suazo',), ('Hussain Abdul Ghani',), ('Hyun-Jun Suk',), ('Iago Aspas',), ('Iago Falque',), ('Ibai Gomez',), ('Ibrahim Afellay',), ('Ibrahim Ayew',), ('Ibrahim Sidibe',), ('Ibrahim Sissoko',), ('Ibrahima Balde',), ('Ibrahima Conte',), ('Ibrahima Diallo',), ('Ibrahima Mbaye',), ('Ibrahima Traore',), ('Ibson',), ('Idir Ouali',), ('Idriss Saadi',), ('Idrissa Sylla',), ('Ignacio Piatti',), ('Ignazio Abate',), ('Igor de Camargo',), ('Igor Lewczuk',), ('Igor Martinez',), (""Igor N'Ganga"",), ('Ikechi Anya',), ('Ikechukwu Uche',), ('Iker Muniain',), ('Ilias Haddad',), ('Ilkay Guendogan',), ('Ilombe Mboyo',), ('Imoh Ezekiel',), ('Inaki Williams',), ('Inigo Lekue',), ('Inigo Lopez',), ('Ioannis Fetfatzidis',), ('Isaac Kiese Thelin',), ('Isaac Osbourne',), ('Isak Ssewankambo',), ('Isco',), ('Ishak Belfodil',), ('Ishmael Yartey',), ('Islam Slimani',), ('Isma Lopez',), ('Ismael Bangoura',), ('Ismael Gace',), ('Issa Cissokho',), ('Issiaga Sylla',), ('Issiar Dia',), ('Iuri Medeiros',), ('Ivan Cavaleiro',), ('Ivan Obradovic',), ('Ivan Perisic',), ('Ivan Pillud',), ('Ivan Piris',), ('Ivan Rakitic',), ('Ivan Santini',), ('Ivan Sproule',), ('Ivan Trickovski',), ('Ivanildo',), ('Iver Fossum',), ('Ivica Iliev',), ('Ivica Olic',), ('Ivo Pinto',), ('Ivo Rodrigues',), ('Izet Hajrovic',), ('Ja-Cheol Koo',), ('Jacek Kielb',), ('Jack Colback',), ('Jack Compton',), ('Jack Robinson',), ('Jack Wilshere',), ('Jackson Martinez',), ('Jacob Mulenga',), ('Jacopo Sala',), ('Jacques Zoua Daogari',), ('Jaime Valdes',), ('Jaime',), ('Jairo',), ('Jake Carroll',), ('Jake Hesketh',), ('Jakob Jantscher',), ('Jakub Bartosz',), ('Jakub Kosecki',), ('Jakub Kowalski',), ('Jakub Rzezniczak',), ('Jakub Vojtus',), ('Jakub Wojcicki',), ('James Chambers',), ('James Collins',), ('James Craigen',), ('James Forrest',), ('James McClean',), ('James Milner',), ('James Rodriguez',), ('James Vaughan',), ('James Ward-Prowse',), ('Jamie Mackie',), (""Jamie O'Hara"",), ('Jamie Vardy',), ('Jamie Walker',), ('Jan Hochscheidt',), ('Jan Lecjaks',), ('Jan Vertonghen',), ('Jander',), ('Jannes Vansteenkiste',), ('Jarchinio Antonia',), ('Jasmin Kurtic',), ('Jason Adesanya',), ('Jason Davidson',), ('Jason Naismith',), ('Jason Puncheon',), ('Jason Roberts',), ('Jaume Costa',), ('Javan Vidal',), ('Javi Moreno Marquez',), ('Javier Baraja',), ('Javier Eraso',), ('Javier Manquillo',), ('Javier Martinez',), ('Javier Pastore',), ('Javier Pinola',), ('Jay Rodriguez',), ('Jay Simpson',), ('Jay Tabb',), ('Jean Barrientos',), ('Jean Beausejour',), ('Jean Calve',), ('Jean Deza',), ('Jean Paul Yontcha',), ('Jean-Armel Kana-Biyik',), ('Jean-Daniel Akpa-Akpro',), ('Jean-Sony Alcenat',), ('Jean-Sylvain Babin',), ('Jeff Louis',), ('Jeff Stans',), ('Jefferson Farfan',), ('Jefferson Lerma',), ('Jefferson Montero',), ('Jefferson Nascimento',), ('Jeffrey Gouweleeuw',), ('Jeffrey Sarpong',), ('Jeffrey Schlupp',), ('Jeffry Fortes,30',), ('Jelle van Damme',), ('Jelle Vossen',), ('Jem Karacan',), ('Jens Naessens',), ('Jens Toornstra',), ('Jens Wemmer',), ('Jeremie Boga',), ('Jeremy Berthod',), ('Jeremy Mathieu',), ('Jeremy Menez',), ('Jeremy Morel',), ('Jeremy Pied',), ('Jeremy Serwy',), ('Jermaine Beckford',), ('Jermaine Jenas',), ('Jermaine Jones',), ('Jeroen Lumu',), ('Jeroen Tesselaar',), ('Jerome Gondorf',), ('Jerome Roussillon',), ('Jerry St. Juste',), ('Jerry Uche Mbakogu',), ('Jerry Vandam',), ('Jerson Cabral',), ('Jesper Drost',), ('Jesper Joergensen',), ('Jesse Lingard',), ('Jessy Galvez Lopez',), ('Jesus Corona',), ('Jesus Navas',), ('Jesus Rueda',), ('Jetro Willems',), ('Jhon Cordoba',), ('Ji-Sung Park',), ('Jim Fenlon',), ('Jim McAlister',), (""Jim O'Brien"",), ('Jimmy Briand',), ('Jimmy Bullard',), ('Jimmy Cabot',), ('Jimmy Hempte',), ('Jires Kembo-Ekoko',), ('Jo Inge Berget',), ('Jo-Gook Jung',), ('Joachim Mununga',), ('Joan Capdevila',), ('Joan Oriol',), ('Joao Alves',), ('Joao Aurelio',), ('Joao Cancelo',), ('Joao Carlos',), ('Joao Mario',), ('Joao Moutinho',), ('Joao Pedro Galvao',), ('Joao Pedro',), ('Joao Pereira',), ('Joao Ribeiro',), ('Joao Vilela',), ('Joaozinho',), ('Joaquim Adao',), ('Joaquin Larrivey',), ('Joaquin',), ('Jobi McAnuff',), ('Joe Cole',), ('Joel Campbell',), ('Joel Chukwuma Obi',), ('Joel Ward',), ('Joel',), ('Joeri Schroyen',), ('Joerie Dequevy',), ('Joey Sleegers',), ('Joey Suk',), ('Joffre David Guerron',), ('Johan Cavalli',), ('Johan Djourou',), ('Johan Elmander',), ('Johan Mojica',), ('Johann Berg Gudmundsson',), ('Johannes Flum',), ('John Arne Riise',), ('John Guidetti',), ('John Herron',), ('John Jairo Ruiz',), ('John McGinn',), ('John Ogu,27',), ('John Paul Kissock',), ('John Rankin',), ('John Souttar',), ('John Stones',), ('John Utaka',), ('Johnny Russell',), ('Jon Aurtenetxe',), ('Jonas Elmer',), ('Jonas Gutierrez',), ('Jonas Kamper',), ('Jonas Martin',), ('Jonas',), ('Jonathan Biabiany',), ('Jonathan Blondel',), ('Jonathan Bottinelli',), ('Jonathan Buatu Mananga',), ('Jonathan Cristaldo',), ('Jonathan Cristian Silva',), ('Jonathan De Guzman',), ('Jonathan Delaplace',), ('Jonathan Franks',), ('Jonathan Hayes',), ('Jonathan Howson',), ('Jonathan Legear',), ('Jonathan Martins-Pereira',), ('Jonathan Parr',), ('Jonathan Pereira',), ('Jonathan Pitroipa',), ('Jonathan Sabbatini',), ('Jonathan Schmid',), ('Jonathan Tinhan',), ('Jonathan Urretaviscaya',), ('Jonathan Viera',), ('Jonathan Walters',), ('Jonathan Wilmet',), ('Jonathan Zongo',), ('Jonathan',), ('Jonjo Shelvey',), ('Jonny Rowell',), ('Jony',), ('Joo-Ho Park',), ('Jordan Amavi',), ('Jordan Ayew',), ('Jordan Ferri',), ('Jordan Henderson',), ('Jordan Leborgne',), ('Jordan Lukaku',), ('Jordan Remacle',), ('Jordan Slew',), ('Jordi Alba',), ('Jordi Feliu Xumetra',), ('Jordi Figueras',), ('Jordy Buijs',), ('Jordy Clasie',), ('Jorge Fucile',), ('Jorge Garcia Morcillo',), ('Jorge Intima',), ('Jorge Pulido',), ('Jorge Rojas',), ('Joris Kayembe Ditu',), ('Jorn Vermeulen',), ('Jorrit Hendrix',), ('Jose Angel Crespo',), ('Jose Angel',), ('Jose Antonio Reyes',), ('Jose Ariel Nunez',), ('Jose Bosingwa',), ('Jose Carlos',), ('Jose Fonte',), ('Jose Gaya',), ('Jose Holebas',), ('Jose Izquierdo',), ('Jose Leonardo Ulloa',), ('Jose Luis Morales',), ('Jose Manuel Casado',), ('Jose Maria Basanta',), ('Jose Maria Callejon',), ('Jose Salomon Rondon',), ('Jose Sosa',), ('Joseba Del Olmo',), ('Joseba Llorente',), ('Josef Martinez',), ('Joselu',), ('Josep Sene',), ('Joseph Akpala',), ('Joseph Bennett',), ('Josh Magennis',), ('Josh Simpson',), ('Joshua Brenet',), ('Joshua Brillante',), ('Joshua King',), ('Joshua Silva',), ('Josue',), ('Jota',), ('Jozabed',), ('Jozsef Varga',), ('Jozy Altidore',), ('Juan Albin',), ('Juan Angel Neira',), ('Juan Bernat',), ('Juan Camilo Zuniga',), ('Juan Carlos Menseguez',), ('Juan Carlos Paredes',), ('Juan Cuadrado',), ('Juan Delgado',), ('Juan Falcon',), ('Juan Forlin',), ('Juan Lorca',), ('Juan Manuel Iturbe',), ('Juan Quero',), ('Juan Quintero',), ('Juan Vargas',), ('Juanfran',), ('Juanlu',), ('Juanma Ortiz',), ('Juanma',), ('Juanmi Callejon',), ('Juanmi',), ('Julian Baumgartlinger',), ('Julian Draxler',), ('Julian Korb',), ('Julian Montenegro',), ('Julian Schieber',), ('Julian Schuster',), ('Julien Faubert',), ('Julien Faussurier',), ('Julien Feret',), ('Julien Gorius',), ('Julien Palmieri',), ('Julien Romain',), ('Julien Toudic',), ('Julio Cesar Machado',), ('Junior Caicara',), ('Junior Diaz',), ('Junior Hoilett',), ('Junior Stanislas',), ('Junmin Hao',), ('Junya Tanaka',), ('Kaka',), ('Kalidou Koulibaly',), ('Kallum Higginbotham',), ('Kamel Ghilas',), ('Kamil Drygas',), ('Kamil Kuczak',), ('Kamil Kuzera',), ('Kamil Pozniak',), ('Kamil Sylwestrzak',), ('Kamil Wilczek',), ('Kamohelo Mokotjo',), ('Kane Hemmings',), ('Kanu',), ('Karel Geraerts',), ('Kari Arnason',), ('Karim Ait Fana',), ('Karim Bellarabi',), ('Karim Matmour',), ('Karol Angielski',), ('Karol Danielak',), ('Karol Linetty',), ('Kasper Kusk',), ('Kaye Coppoolse',), ('Kayke',), ('Kebba Ceesay',), ('Kees Luijckx',), ('Kei Ansu Kamara',), ('Keisuke Honda',), ('Keith Andrews',), ('Keith Treacy',), ('Keko',), ('Kelechi Iheanacho',), ('Ken Reichel',), ('Kenneth Saief',), ('Kenny Lala',), ('Kenny McLean',), ('Kenny Miller',), ('Kenny Thompson',), ('Kensuke Nagai',), ('Kerim Frei Koyunlu',), ('Kevin Brands',), ('Kevin Conboy',), ('Kevin Constant',), ('Kevin Davies',), ('Kevin de Bruyne',), ('Kevin Doyle',), ('Kevin Grosskreutz',), ('Kevin Jansen',), ('Kevin Kampl',), ('Kevin Koffi',), ('Kevin Kuranyi',), ('Kevin Kyle',), ('Kevin Lejeune',), ('Kevin Luckassen',), ('Kevin Malcuit',), ('Kevin Mayi',), ('Kevin McNaughton',), ('Kevin Mirallas',), ('Kevin Monnet-Paquet',), ('Kevin Nolan',), ('Kevin Oris',), ('Kevin Phillips',), ('Kevin Strootman',), ('Kevin Theophile-Catherine',), ('Kevin van Veen',), ('Kevin Vandendriessche',), ('Kevin Volland',), ('Kevin-Prince Boateng',), ('Khaleem Hyland',), ('Khalil Chemmam',), ('Khouma Babacar',), ('Ki-Hyeon Seol',), ('Kieran Agard',), ('Kieran Gibbs',), ('Kieran Richardson',), ('Kieran Trippier',), ('Kike Mateo',), ('Kiko',), ('Kim Kaellstroem',), ('King Osei Gyan',), ('Kingsley Boateng',), ('Kingsley Coman',), ('Kingsley Ehizibue',), ('Kisho Yano',), ('Kleber Pinheiro',), ('Klemen Lavric',), ('Knut Olav Rindaroey',), ('Koen Daerden',), ('Koen Persoons',), ('Koen van de Laak',), ('Koke',), ('Kolbeinn Sigthorsson',), ('Konstantin Engel',), ('Konstantin Rausch',), ('Konstantin Vassiljev',), ('Konstantinos Fortounis',), ('Konstantinos Katsouranis',), ('Konstantinos Mitroglou',), ('Konstantinos Stafylidis',), ('Kosuke Ota',), ('Kris Boyd',), ('Kris Doolan',), ('Kristian Bach Bak',), ('Kristian Kuzmanovic',), ('Kristian Nushi',), ('Kristoffer Peterson',), ('Kristopher Vida',), ('Krisztian Nemeth',), ('Krisztian Vadocz',), ('Krzysztof Kaczmarczyk',), ('Krzysztof Ostrowski',), ('Kuca',), ('Kukula',), ('Kwadwo Asamoah',), ('Kwang-Ryong Pak',), ('Kyle Hutton',), ('Kyle Lafferty',), ('Kyle Naughton',), ('Kyle Walker',), ('Lacina Traore',), ('Ladislas Douniama',), ('Laglais Xavier Kouassi',), ('Lance Davids',), ('Landon Donovan',), ('Landry Mulemo',), ('Lars Bender',), ('Lars Jacobsen',), ('Lars Veldwijk',), ('Larsen Toure',), ('Laszlo Kleinheisler',), ('Laure',), ('Laurens Paulussens',), ('Laurent Delorge',), ('Laurent Depoitre',), ('Laurent Jans',), ('Lauri Dalla Valle',), ('Lautaro Acosta',), ('Lavyin Kurzawa',), ('Lazar Markovic',), ('Lazaros Christodoulopoulos',), ('Leandrinho',), ('Leandro Bacuna',), ('Leandro Di Gregorio',), ('Leandro Greco',), ('Leandro Pereira',), ('Leandro Salino',), ('Leandro Silva',), ('Leandro',), ('Lee Erwin',), ('Lee Mair',), ('Lee Martin',), ('Lee McCulloch',), ('Lee Naylor',), ('Lee Tomlin',), ('Lee Wallace',), ('Leigh Griffiths',), ('Leighton Baines',), ('Lennart Thy',), ('Leo Baptistao',), ('Leo Itaperuna',), ('Leo Lacroix',), ('Leo',), ('Leon Bailey',), ('Leon Goretzka',), ('Leon Jessen',), ('Leon Osman',), ('Leonard Kweuke',), ('Leonardo Bittencourt',), ('Leonardo Pavoletti',), ('Leonel Galeano',), ('Leonel Olimpio',), ('Leozinho',), ('Lerin Duarte',), ('Leroy Fer',), ('Leroy George',), ('Leroy Lita',), ('Leroy Sane',), ('Levan Kobiashvili',), ('Levent Guelen',), ('Lewis Enoh',), ('Lewis Grabban',), ('Lewis Guy',), ('Lewis Holtby',), ('Lewis Longridge',), ('Lex Immers',), ('Liam Henderson',), ('Liassine Cadamuro',), ('Liban Abdi',), ('Lica',), ('Lima',), ('Linus Hallenius',), ('Lionel Carole',), ('Lionel Gendarme',), ('Lionel Messi',), ('Lisandro Lopez',), ('Livio Nabab',), ('Ljubomir Fejsa',), ('Loic Remy',), ('Lora',), ('Lorenzo Burnet',), ('Lorenzo De Silvestri',), ('Lorenzo Del Prete',), ('Lorenzo Insigne',), ('Lorenzo Lollo',), ('Lorenzo Melgarejo',), ('Lorenzo Pasciuti',), ('Loris Benito',), ('Louis Nganioni',), ('Louis Poggi',), ('Luan',), ('Luc Castaignos',), ('Luca Antonelli',), ('Luca Belingheri',), ('Luca Bittante',), ('Luca Ceccarelli',), ('Luca Ceppitelli',), ('Luca Di Matteo',), ('Luca Paganini',), ('Luca Radice',), ('Luca Rizzo',), ('Luca Toni',), ('Luca Valzania',), ('Lucas Andersen',), ('Lucas Ariel Ocampos',), ('Lucas Armando Mareque',), ('Lucas Barrios',), ('Lucas Bijker',), ('Lucas Deaux',), ('Lucas Digne',), ('Lucas Evangelista',), ('Lucas Hernandez',), ('Lucas Joao',), ('Lucas Moura',), ('Lucas Nahuel Castro',), ('Lucas Perez',), ('Lucas Piazon',), ('Lucas Silva',), ('Lucas van Eenoo',), ('Lucas Vazquez',), ('Lucas Wilchez',), ('Lucas Woudenberg',), ('Lucas',), ('Luciano Becchio',), ('Luciano Dario Vietto',), ('Luciano Slagveer',), ('Lucio',), ('Ludcinio Marengo',), ('Ludovic Baal',), ('Ludovic Magnin',), ('Ludovic',), ('Luigi Giorgi',), ('Luis Advincula',), ('Luis Alfonso Henriquez',), ('Luis Aurelio',), ('Luis Carlos',), ('Luis Fabiano',), ('Luis Filipe',), ('Luis Garcia',), ('Luis Jimenez',), ('Luis Leal',), ('Luis Martins',), ('Luis Moran',), ('Luis Muriel',), ('Luis Pedro Cavanda',), ('Luis Pedro Figueroa',), ('Luis Seijas',), ('Luis Suarez',), ('Luisinho',), ('Luiz Adriano',), ('Luka Djordjevic',), ('Luka Modric',), ('Lukas Haraslin',), ('Lukas Rupp',), ('Lukas Schmitz',), ('Lukasz Broz',), ('Lukasz Gargula',), ('Lukasz Janoszka',), ('Lukasz Madej',), ('Lukasz Piatek',), ('Lukasz Piszczek',), ('Lukasz Sierpina',), ('Lukasz Teodorczyk',), ('Luke Garbutt',), ('Luke Shaw',), ('Luke Varney',), ('Luke Wilkshire',), ('Lyle Taylor',), ('Lynneeker',), ('Maciej Dabrowski',), ('Maciej Jankowski',), ('Maciej Korzym',), ('Maciej Makuszewski',), ('Maciej Malkowski,24',), ('Mads Junker',), ('Magaye Gueye',), ('Magnus Eriksson',), ('Mahamadou Habib Habibou',), ('Mahamane Traore',), ('Mahmoud Dahoud',), ('Mahmoud Kahraba',), ('Maicon',), ('Maikel Kieftenbeld',), ('Maksymilian Rogalski',), ('Malcom',), ('Mamadou Bagayoko',), ('Mamadou Kone',), ('Mamadou Niang',), (""Mamoutou N'Diaye"",), ('Mane',), ('Mano',), ('Manolo Gabbiadini',), ('Manu del Moral',), ('Manu Lanzarote',), ('Manu',), ('Manuel Arboleda',), ('Manuel Curto',), ('Manuel da Costa',), ('Manuel Iturra',), ('Manuel Jose',), ('Manuel Lanzini',), ('Manuel Pablo',), ('Manuel Pasqual',), ('Manuel Pucciarelli',), ('Manuel Schmiedebach',), ('Maor Bar Buzaglo',), ('Maor Melikson',), ('Marama Vahirua',), ('Marat Izmailov',), ('Marc Albrighton',), ('Marc Bartra',), ('Marc Pugh',), ('Marc Tierney',), ('Marc-Antoine Fortune',), ('Marcel Heller',), ('Marcel Ndjeng',), ('Marcel Risse',), ('Marcel Schaefer',), ('Marcel Schmelzer',), ('Marcell Jansen',), ('Marcello Gazzola',), ('Marcello Trotta',), ('Marcelo Brozovic',), ('Marcelo Estigarribia',), ('Marcelo Larrondo',), ('Marcelo Moreno',), ('Marcelo Toscano',), ('Marcelo',), ('Marcin Budzinski',), ('Marcin Cebula',), ('Marcin Kaminski',), ('Marcin Kikut',), ('Marcin Listkowski',), ('Marcin Pietrowski',), ('Marcin Wodecki',), ('Marcio Mossoro',), ('Marco Bernacci',), ('Marco Capuano',), ('Marco Crimi',), (""Marco D'Alessandro"",), ('Marco Da Silva',), ('Marco Di Vaio',), ('Marco Fabian',), ('Marco Hoeger',), ('Marco Matias',), ('Marco Motta',), ('Marco Pappa',), ('Marco Parolo',), ('Marco Reus',), ('Marco Rojas',), ('Marco Sailer',), ('Marco Sau',), ('Marco Schoenbaechler',), ('Marco Streller',), ('Marco van Ginkel',), ('Marco Verratti',), ('Marcos Alonso',), ('Marcos Camozzato',), ('Marcos Rojo',), ('Marcus Berg',), ('Marcus Olsson',), ('Marcus Pedersen',), ('Marcus Rashford',), ('Marek Cech',), ('Marek Hamsik',), ('Marek Saganowski',), ('Mariano Bogliacino',), ('Mariano Gonzalez',), ('Mariano Pavone',), ('Mariano',), ('Marinho',), ('Marino Defendi',), ('Mario Alberto Santana',), ('Mario Baric',), ('Mario Gaspar',), ('Mario Gavranovic',), ('Mario Gomez',), ('Mario Mandzukic',), ('Mario Mutsch',), ('Mario Pasalic',), ('Mario Rondon',), ('Mario Rui',), ('Mario Sampirisi',), ('Mario Ticinovic',), ('Marius Alexe',), ('Marius Wolf',), ('Marius Zaliukas',), ('Mariusz Magiera',), ('Mariusz Rybicki',), ('Mark Cullen',), ('Mark Durnan',), ('Mark Looms',), ('Mark Millar',), ('Mark Noble',), ('Mark Stewart',), ('Markel Susaeta',), ('Marko Arnautovic',), ('Marko Marin',), ('Marko Miric',), ('Marko Muslin',), ('Marko Pantelic',), ('Marko Scepovic',), ('Markus Henriksen',), ('Markus Neumayr',), ('Markus Suttner',), ('Marley Watkins',), ('Marlon Harewood',), ('Marlon King',), ('Marnix Kolder',), ('Marquinho',), ('Marten De Roon',), ('Martijn Monteyne',), ('Martijn van der Laan',), ('Martin Braithwaite',), ('Martin Bukata',), ('Martin Harnik',), ('Martin Hinteregger',), ('Martin Konczkowski',), ('Martin Milec',), ('Martin Montoya',), ('Martin Nespor',), ('Martin Olsson',), ('Martin Paterson',), ('Martin Scott',), ('Martin Steuble',), ('Martyn Waghorn',), ('Marvelous Nakamba',), ('Marvin Emnes',), ('Marvin Johnson',), ('Marvin Martin',), ('Marvin Peersman',), ('Marvin Plattenhardt',), ('Marvin Sordell',), ('Marvin Zeegelaar',), ('Massadio Haidara',), ('Massimiliano Carlini',), ('Massimo Bruno',), ('Massimo Coda',), ('Massimo Maccarone',), ('Mate Jajalo',), ('Matej Vydra',), ('Mateus',), ('Mateusz Cetnarski',), ('Mateusz Kwiatkowski',), ('Mateusz Lewandowski',), ('Mateusz Matras',), ('Mateusz Mozdzen',), ('Mateusz Szczepaniak',), ('Mateusz Wdowiak',), ('Matheus Pereira',), ('Matheuzinho',), ('Mathias Abero',), ('Mathias Pogba',), ('Mathias Schils',), ('Mathieu Debuchy',), ('Mathieu Deplagne',), ('Mathieu Dossevi',), ('Mathieu Flamini',), ('Mathieu Salamand',), ('Mathieu Valbuena',), ('Mathis Bolly',), ('Matias Aguirregaray',), ('Matias Alustiza',), ('Matias Ezequiel Schelotto',), ('Matias Fernandez',), ('Matias Rodriguez',), ('Matias Suarez',), ('Matias Vecino',), ('Matija Skarabot',), ('Matos',), ('Mats Hummels',), ('Mats Moeller Daehli',), ('Matt Doherty',), ('Matt Done',), ('Matt Jarvis',), ('Matt McKay',), ('Matt Ritchie',), ('Matteo Darmian',), ('Matteo Fedele',), ('Matteo Mancosu',), ('Matteo Politano',), ('Matteo Rubin',), ('Matthew Briggs',), ('Matthew Kennedy',), ('Matthew Leckie',), ('Matthew Lowton',), ('Matthias Ginter',), ('Matthias Lehmann',), ('Matthias Lepiller',), ('Matthias Zimmermann',), ('Matthieu Chalme',), ('Matti Lund Nielsen',), ('Mattia Bottani',), ('Mattia Cassani',), ('Mattia De Sciglio',), ('Mattia Destro',), ('Mattias Johansson',), ('Maurice Brunner',), ('Mauricio Isla',), ('Mauricio Pinilla',), ('Maurides',), ('Maurizio Domizzi',), ('Mauro Boselli',), ('Mauro Icardi',), ('Mauro Lustrinelli',), ('Mauro Zarate',), ('Mawouna Amevor',), ('Max Kruse',), ('Max Meyer',), ('Max Veloso',), ('Max-Alain Gradel',), ('Maxi Rodriguez',), ('Maxime Annys',), ('Maxime Blanc',), ('Maxime Colin',), ('Maxime Lestienne',), ('Maximilian Arnold',), ('Maximiliano Pereira',), ('Maximillian Beister',), ('Maxwell',), ('May Mahlangu',), ('Maynor Figueroa',), ('Mbaye Niang',), ('Mehdi Benatia',), ('Mehdi Carcela-Gonzalez',), ('Mehdi Mostefa',), ('Mehdi Taouil',), ('Mehdi Zeffane',), ('Mehmet Ekici',), ('Melvin de Leeuw',), ('Melvin Platje',), ('Melvyn Lorenzen',), ('Memphis Depay',), ('Mensur Mujdza',), ('Mergim Brahimi',), ('Merouane Zemmama',), ('Mervan Celik',), ('Mevlut Erdinc',), ('Mica',), ('Micah Richards',), ('Michael Almebaeck',), ('Michael Bradley',), ('Michael de Leeuw',), ('Michael Essien',), ('Michael Frey',), ('Michael Gardyne',), ('Michael Gregoritsch',), ('Michael Higdon',), (""Michael Jordan N'Kololo"",), ('Michael Kightly',), ('Michael Krohn-Dehli',), ('Michael McGlinchey',), ('Michael Ngoo',), (""Michael O'Halloran"",), ('Michael Olaitan',), ('Michael Pereira',), ('Michael Tidser',), ('Michael Uchebo',), ('Michael Zullo',), ('Michail Antonio',), ('Michal Kadlec',), ('Michal Kucharczyk',), ('Michal Mak',), ('Michal Rabusic',), ('Michel Bastos',), ('Michel',), ('Michiel Jonckheere',), ('Michihirio Yasuda',), ('Michu',), ('Mick van Buren',), ('Mickael Antoine-Curier',), ('Mickael Le Bihan',), ('Migjen Basha',), ('Miguel Cardoso',), ('Miguel Layun',), ('Miguel Lopes',), ('Miguel Nieto',), ('Miguel Veloso',), ('Miguel',), ('Miiko Albornoz',), ('Mikael Lustig',), ('Mike Frantz',), ('Mike Hanke',), ('Mike van Duinen',), ('Mikel Arruabarrena',), ('Mikel Arteta',), ('Mikel Balenziaga',), ('Mikel Gonzalez',), ('Mikel Rico',), ('Mikhail Rosheuvel',), ('Mikkel Diskerud',), ('Milan Badelj',), ('Milan Gajic',), ('Milan Jovanovic',), ('Milano Koenders',), ('Miles Storey',), ('Milos Kosanovic',), ('Milos Krasic',), ('Milos Maric',), ('Milot Rashica',), ('Mimoun Mahi',), ('Ming Yang Yang',), ('Minhoca',), ('Miquel Nelom',), ('Miralem Pjanic',), ('Mirko Bigazzi',), ('Mirko Boland',), ('Mirko Vucinic',), ('Miroslav Klose',), ('Miroslav Radovic',), ('Miroslav Stoch',), ('Miso Brecko',), ('Mitch Apau',), ('Mitchell Paulissen',), ('Mitchell Pique',), ('Mitchell Weiser',), ('Modou Barrow',), ('Mody Traore',), ('Mohamadou Idrissou',), ('Mohamed Daf',), ('Mohamed Diame',), ('Mohamed Messoudi',), ('Mohamed Rayhi',), ('Mohamed Salah',), ('Mohamed Yattara',), ('Mohammed Tchite',), ('Moi Gomez',), ('Moreno Costanzo',), ('Morgan Amalfitano',), ('Morgan Sanson',), ('Moritz Stoppelkamp',), ('Morten Gamst Pedersen',), ('Morten Skoubo',), ('Morten Thorsby',), ('Moses Simon',), ('Mostapha El Kabir',), ('Mouhamadou Dabo',), ('Mounir Obbadi',), ('Mourad Satli',), ('Moussa Dembele',), ('Moussa Konate',), ('Moussa Kone',), ('Moussa Maazou',), ('Moussa Marega',), ('Moussa Sissoko',), ('Moussa Sow',), ('Muhamed Keita',), ('Munir El Haddadi',), ('Mushaga Bakenga',), ('Mustapha Dumbuya',), ('Mustapha Oussalah',), ('Mustapha Yatabare',), ('Nabil Bahoui',), ('Nabil Fekir',), ('Nabil Ghilas',), ('Nacho Martinez',), ('Nacho Monreal',), ('Nacho Novo',), ('Nadir Ciftci',), ('Nagore',), ('Naldo',), ('Nana Asare',), ('Nando Rafael',), ('Nani',), ('Nano',), ('Nassim Ben Khalifa',), ('Nathan Ake',), ('Nathan Dyer',), ('Nathan Redmond',), ('Nathan Thomas',), ('Nathaniel Clyne',), ('Natxo Insa',), ('Navarone Foor',), ('Neal Eardley',), ('Neal Maupay',), ('Neeskens Kebano',), ('Neil Taylor',), ('Nelson Ferreira',), ('Nelson Haedo Valdez',), ('Nelson Oliveira',), ('Nelson',), ('Nemanja Gudelj',), ('Nemanja Nikolic',), ('Nenad Milijas',), ('Nenad Tomovic',), ('Nene',), ('Neves Soares Hermes',), ('Ney Santos',), ('Neymar',), ('Niall McGinn',), ('Niccolo Giannetti',), ('Nicholas Riley',), ('Nick van der Velden',), ('Nick Viergever',), ('Nicki Bille Nielsen',), ('Nicky Hofs',), ('Nicky Kuiper',), ('Niclas Fuellkrug',), ('Nico Schulz',), ('Nicola Bellomo',), ('Nicola Sansone',), ('Nicolae Ovidiu Herea',), ('Nicolai Boilesen',), ('Nicolai Joergensen',), ('Nicolai Mueller',), ('Nicolas Benezet',), ('Nicolas De Preville',), ('Nicolas Fauvergue',), ('Nicolas Federico Spolli',), ('Nicolas Lopez',), ('Nicolas Pallois',), ('Nicolas Verdier',), ('Niels Vorthoren',), ('Nigel Hasselbaink',), ('Nii Plange',), ('Nika Dzalamidze',), ('Niki Zimling',), ('Nikita Rukavytsya',), ('Niklas Baerkroth',), ('Niklas Hult',), ('Niklas Moisander',), ('Niklas Stark',), ('Nikola Aksentijevic',), ('Nikola Kalinic',), ('Nikola Stojiljkovic',), ('Nikola Storm',), ('Nikola Vujadinovic',), ('Nikos Karelis',), ('Nikos Liberopoulos',), ('Nildo Petrolina',), ('Nili',), ('Nill De Pauw',), ('Nino',), ('Noel Hunt',), ('Nolan Roux',), ('Nolito',), ('Nordin Amrabat',), ('Norman Peyretti',), ('Norman Theuerkauf',), ('Nosa Emanuel Igiebor',), ('Nuno Lopes',), ('Nuno Santos',), ('Nuri Sahin',), ('Obbi Oulare',), ('Odair Fortes',), ('Odise Roshi',), ('Olcay Sahan',), ('Oleg Iachtchouk',), ('Oliver Bozanic',), ('Oliver Fink',), ('Oliver Kragl',), ('Oliver Myny',), ('Olivier Auriac',), ('Olivier Giroud',), ('Olivier Kapo',), ('Olivier Ntcham',), ('Olivier Occean',), ('Omar Bravo',), ('Omar El Kaddouri',), ('Omar Elabdellaoui',), ('Omar Mascarell',), ('Omer Bayram',), ('Onyinye Ndidi,26',), ('Opa Nguette',), ('Oriol Riera',), ('Oscar de Marcos',), ('Oscar Hiljemark',), ('Oscar Sanchez',), ('Oscar Trejo',), ('Oscar Wendt',), ('Oscar',), ('Osman Sow',), ('Osmar Barba',), ('Oswal Alvarez',), ('Otavio',), ('Ousmane Dembele',), ('Oussama Assaidi',), ('Oussama Idrissi',), ('Pa Modou Jagne',), ('Pablo Andres Gonzalez',), ('Pablo Armero',), ('Pablo Barrera',), ('Pablo Chavarria',), ('Pablo De Blasis',), ('Pablo Hernandez',), ('Pablo Hervias',), ('Pablo Javier Perez',), ('Pablo Osvaldo',), ('Pablo Perez',), ('Pablo Piatti',), ('Pablo Pintos',), ('Pablo Sarabia',), ('Pablo Zabaleta',), ('Pablo',), ('Paco Montanes',), ('Paco Pena',), ('Panagiotis Kone',), ('Paolo Castellini',), ('Paolo De Ceglie',), ('Paolo Hurtado',), ('Paolo Lemos',), (""Papa Waigo N'Diaye"",), ('Pape Diamanka',), ('Pape Modou Sougou',), ('Pape Ndiaye Souare',), ('Pascal Feindouno',), ('Pascal Gross',), ('Pascal Schuerpf',), ('Pasquale Schiattarella',), ('Patrice Evra',), ('Patrick Bamford',), ('Patrick Ekeng Ekeng',), ('Patrick Herrmann',), ('Patrick McNair',), ('Patrick Roberts',), ('Patrick van Aanholt',), ('Patrik Ingelsten',), ('Patryk Fryc',), ('Patryk Malecki',), ('Patryk Rachwal,18',), ('Paul Caddis',), ('Paul Cairney',), ('Paul Dixon',), ('Paul Dummett',), ('Paul Freier',), ('Paul Gladon',), ('Paul Lawson',), ('Paul McGowan',), ('Paul Pogba',), ('Paul Verhaegh',), ('Paul-Georges Ntep',), (""Paul-Jose M'Poku"",), ('Paulao',), ('Paulinho',), ('Paulo Dybala',), ('Paulo Jorge',), ('Pavel Kaderabek',), ('Pavel Pardo',), ('Pavle Ninkov',), ('Pavol Stano',), ('Pawel Golanski',), ('Pawel Jaroszynski',), ('Pawel Oleksy',), ('Pawel Olkowski',), ('Pawel Sasin',), ('Pawel Stolarski',), ('Pawel Wszolek',), ('Pedro Bigas',), ('Pedro Botelho',), ('Pedro Coronas',), ('Pedro Henrique',), ('Pedro Leon',), ('Pedro Lopez',), ('Pedro Munitis',), ('Pedro Oldoni',), ('Pedro Ramirez',), ('Pedro Rodriguez',), ('Pedro Santos',), ('Pedro Silva',), ('Pedro Tiba',), ('Peer Kluge',), ('Pepe',), ('Per Ciljan Skjelbred',), ('Perez Richi',), ('Peter Czvitkovics',), ('Peter Grajciar',), ('Peter Kovacs',), ('Peter Loevenkrands',), ('Peter Odemwingie',), ('Peter Pawlett',), ('Peter Pekarik',), ('Peter van der Heyden',), ('Peter Wisgerhof',), ('Petr Jiracek',), ('Petter Andersson',), ('Phil Bardsley',), ('Philip Haglund',), ('Philip Heise',), ('Philipp Degen',), ('Philipp Lahm',), ('Philippe Coutinho',), ('Philippe Koch',), ('Pierre Bengtsson',), ('Pierre Webo',), ('Pierre Wome',), ('Pierre-Emerick Aubameyang',), ('Pierre-Michel Lasogga',), ('Pierre-Yves Polomat',), ('Pintassilgo',), ('Piotr Celeban',), ('Piotr Malinowski',), ('Piqueti',), ('Pizzi',), ('Pontus Jansson',), ('Pontus Wernbloom',), ('Pozo',), ('Prejuce Nakoulma',), ('Prince Oniangue',), ('Przemyslaw Mystkowski',), ('Przemyslaw Trytko',), ('Quentin Othon',), ('Quentin Pottiez',), ('Quincy Owusu-Abeyie',), ('Quincy Promes',), ('Rabiola',), ('Rachid Ghezzal',), ('Radamel Falcao',), ('Radja Nainggolan',), ('Rafa Silva',), ('Rafa Soares',), ('Rafael Crivellaro',), ('Rafael Dias',), ('Rafael Galhardo',), ('Rafael Lopes',), ('Rafael Martinho',), ('Rafael Martins',), ('Rafal Boguski',), ('Rafal Grzelak',), ('Rafal Kosznik',), ('Rafal Murawski',), ('Rafal Pietrzak',), ('Raffael',), ('Raffaele De Vita',), ('Raffaele Maiello',), ('Raffaele Palladino',), ('Raffaele Pucino',), ('Rafinha',), ('Rafita',), ('Ragnar Klavan',), ('Raheem Sterling',), ('Rai Vloet',), ('Rajko Brezancic',), ('Ramires',), ('Ramon Cecchini',), ('Rangelo Janga',), ('Raphael Guerreiro',), ('Raphael Holzhauser',), ('Rasmus Elm',), ('Raul Camara',), ('Raul Garcia',), ('Raul Jimenez',), ('Raul Marcelo Bobadilla',), ('Raul Meireles',), ('Raul Rusescu',), ('Raul Tamudo',), ('Raul',), ('Rayco Garcia',), ('Razvan Rat',), ('Reece Grego-Cox',), ('Reginald Goreux',), ('Reginaldo',), ('Reinhold Yabo',), ('Remi Mareval',), ('Remo Staubli',), ('Remy Amieux',), ('Remy Cabella',), ('Renato Ibarra',), ('Renato Neto',), ('Renato Sanches',), ('Renato Steffen',), ('Renato Tapia',), ('Renato',), ('Rene Mihelic',), ('Ricardo A. Clark',), ('Ricardo Alvarez',), ('Ricardo Cabanas',), ('Ricardo Esgaio',), ('Ricardo Oliveira',), ('Ricardo Pereira',), ('Ricardo Quaresma',), ('Ricardo Rodriguez',), ('Ricardo van Rhijn',), ('Riccardo Colombo',), ('Riccardo Fiamozzi',), ('Riccardo Saponara',), ('Richairo Zivkovic',), ('Richard Almeida',), ('Richard Brittain',), ('Richard Cresswell',), ('Richard Foster',), ('Richard Garcia',), ('Richard Soumah',), ('Richard Sukuta-Pasu',), ('Richard Towell',), ('Richie Foran',), ('Richie Ryan',), ('Rick Karsdorp',), ('Rick ten Voorde',), ('Rickie Lambert',), ('Ricky van Wolfswinkel',), ('Ridge Mickael Mobulu',), ('Ridgeciano Haps',), ('Rinaldo Cruzado',), ('Ritchie De Laet',), ('Robbert Schilder',), ('Robbie Keane',), ('Robbie Kruse',), ('Robert Beric',), ('Robert Brady',), ('Robert Demjan',), ('Robert Gucher',), ('Robert Ibanez',), ('Robert Lewandowski',), ('Robert Mak',), ('Robert Muehren',), ('Robert Snodgrass',), ('Robert Tesche',), ('Roberto Crivello',), ('Roberto Firmino',), ('Roberto Hilbert',), ('Roberto Pereyra',), ('Roberto Rodriguez',), ('Roberto Rosales',), ('Roberto Soldado',), ('Roberto Soriano',), ('Roberto Torres',), ('Robin Gosens',), ('Robin Henkens',), ('Robin Kamber',), ('Robin Quaison',), ('Robin van Persie',), ('Robinho',), ('Rocco Quinn',), ('Rochdi Achenteh',), ('Rod Fanni',), ('Rodri',), ('Rodrigo Aguirre',), ('Rodrigo Andres Battaglia',), ('Rodrigo Palacio',), ('Rodrigo',), ('Rodrigue Casimir Ninga',), ('Roei Dayan',), ('Roger Espinoza',), ('Roger',), ('Rogier Meijer',), ('Roland Lamah',), ('Roly Bonevacia',), ('Romain Alessandrini',), ('Romain Danze',), ('Romain Grange',), ('Romain Hamouma',), ('Romain Saiss',), ('Romaric',), ('Romelu Lukaku',), ('Roniel',), ('Ronny Marcos',), ('Ronny Philp',), ('Roque Mesa',), ('Ross Barkley',), ('Ross Draper',), ('Ross Wallace',), ('Rouwen Hennings',), ('Rowan Vine',), ('Roy Beerens',), ('Roy Contout',), ('Roy Gelmi',), (""Roy O'Donovan"",), ('Royston Drenthe',), ('Ruben Andrade',), ('Ruben Botta',), ('Ruben Brigido',), ('Ruben Ferreira',), ('Ruben Ligeon',), ('Ruben Micael',), ('Ruben Palazuelos',), ('Ruben Ribeiro',), ('Ruben Schaken',), ('Ruben Suarez',), ('Rubio Rubin',), ('Rudolf Skacel',), ('Rudy Gestede',), ('Rudy Haddad',), ('Rudy',), ('Rui Duarte',), ('Rui Miguel',), ('Russell Martin',), ('Ruud Boymans',), ('Ruud Vormer',), ('Ryan Bertrand',), ('Ryan Donk',), ('Ryan Dow',), ('Ryan Edwards',), ('Ryan Gauld',), ('Ryan Mason',), ('Ryan McGowan',), ('Ryan McLaughlin',), ('Ryan Mendes',), ('Ryan Stevenson',), ('Ryan Taylor',), ('Ryan Thomas',), ('Ryo Miyaichi',), ('Sabin Merino',), ('Sadio Mane',), ('Sai van Wermeskerken',), ('Said Benrahma',), ('Saidi Ntibazonkiza',), ('Saidy Janko',), ('Saleh Gomaa',), ('Salim Cisse',), ('Saliou Ciss',), ('Salva Sevilla',), ('Salvador Agra',), ('Salvatore Masiello',), ('Sam Larsson',), ('Sam Morrow',), ('Sam Parkin',), ('Sam Vokes',), ('Sam Winnall',), ('Samba Diakite',), ('Samba Sow',), ('Sambou Yatabare',), ('Sami Allagui',), ('Sami Khedira',), ('Sami',), ('Samir Nasri',), ('Sammy Ameobi',), ('Samu',), ('Samuel Afum',), ('Samuel Asamoah',), (""Samuel Eto'o"",), ('Samuel Garcia',), ('Samuel Ricketts',), ('Samuel Scheimann',), ('Samuel Umtiti',), ('Samuele Longo',), ('Sander Coopman',), ('Sander Duits',), ('Sandro Laurindo da Silva',), ('Sandro Lombardi',), ('Sandro Ramirez',), ('Sandro Sirigu',), ('Sandro Wieser',), ('Sandro',), ('Sanharib Bueyueksal',), ('Sanjin Prcic',), ('Santi Kolk',), ('Santiago Arias',), ('Santiago Garcia',), ('Saphir Taider',), ('Sasa Aleksander Zivec,26',), ('Sascha Dum',), ('Sascha Riether',), ('Saul Berjon',), ('Saul',), ('Scott Arfield',), ('Scott Brown',), ('Scott Lee Sutter',), ('Scott McDonald',), ('Scott Parker',), ('Scott Robertson',), ('Scott Sinclair',), ('Scott Wright',), ('Seamus Coleman',), ('Sean Clohessy',), ('Sean Kelly',), ('Sean Klaiber',), ('Seba',), ('Sebastian Bartlewski',), ('Sebastian Boenisch',), ('Sebastian Dubarbier',), ('Sebastian Dudek',), ('Sebastian Eriksson',), ('Sebastian Fernandez',), ('Sebastian Freis',), ('Sebastian Giovinco',), ('Sebastian Jung',), ('Sebastian Kerk',), ('Sebastian Larsson',), ('Sebastian Leto',), ('Sebastian Mila',), ('Sebastian Rajalakso',), ('Sebastian Rode',), ('Sebastian Rudol',), ('Sebastian Steblecki',), ('Sebastian Ziajka',), ('Sebastien Corchia',), ('Sebastien Locigno',), ('Sebastien Pocognoli',), ('Sebastien Roudet',), ('Sebastien Wuethrich',), ('Seko Fofana',), ('Sekou Cisse',), ('Selim Khelifi',), ('Senad Karahmet',), ('Senad Lulic',), ('Sepp De Roover',), ('Serge Aurier',), ('Serge Gakpe',), ('Sergei Pylypchuk',), ('Sergej Milinkovic-Savic',), ('Sergi Enrich',), ('Sergio Aguero',), ('Sergio Canales',), ('Sergio Escudero',), ('Sergio Ezequiel Araujo',), ('Sergio Floccari',), ('Sergio Marcos',), ('Sergio Pellissier',), ('Sergio Ramos',), ('Sergiy Bolbat',), ('Seydou Doumbia',), ('Seydou Keita',), ('Shaleum Logan',), ('Shane Long',), ('Shani Tarashaj',), ('Shaun Cummings',), ('Shaun Maloney',), ('Shaun Wright-Phillips',), ('Shefki Kuqi',), ('Sheraldo Becker',), ('Sherjill MacDonald',), ('Shinji Kagawa',), ('Shinji Okazaki',), ('Shkelzen Gashi',), ('Shlomi Arbeitman',), ('Shpetim Hasani',), ('Sidnei',), ('Siebe Schrijvers',), ('Siem de Jong',), ('Sigamary Diarra',), ('Sigourney Bandjar',), ('Silva',), ('Silvan Widmer',), ('Silvestre Varela',), ('Silvio',), ('Sime Vrsaljko',), ('Simeon Jackson',), ('Simon Church',), ('Simon Diedhiou',), ('Simon Francis',), ('Simon Gustafson',), ('Simon Murray',), ('Simon Poulsen',), ('Simon Thern',), ('Simon Vukcevic',), ('Simone Missiroli',), ('Simone Padoin',), ('Simone Pepe',), ('Simone Perrotta',), ('Simone Pesce',), ('Simone Verdi',), ('Simone Zaza',), ('Sinan Bytyqi',), ('Sinan Kaloglu',), ('Sisi',), ('Slawomir Peszko',), ('Sofian Bidaoui',), ('Sofiane Boufal',), ('Sofiane Feghouli',), ('Sofiane Hanni',), ('Sokratis Papastathopoulos',), ('Somalia',), ('Sone Aluko',), ('Sotiris Ninis',), ('Souleymane Bamba',), ('Souleymane Camara',), ('Stanislav Manolev',), ('Steed Malbranque',), ('Steeven Willems',), ('Stefan Adrian Popescu',), ('Stefan Johansen',), ('Stefan Kiessling',), ('Stefan Lex',), ('Stefan Maierhofer',), ('Stefan Nikolic',), ('Stefan Reisinger',), ('Stefan Ristovski',), ('Stefan Scepovic',), ('Stefano Celozzi',), ('Stefano Denswil',), ('Stefano Lilipaly',), ('Stefano Magnasco',), ('Stefano Mauri',), ('Stefano Okaka Chuka',), ('Stefano Sabelli',), ('Stefano Sturaro',), ('Steffen Ernemann',), ('Steffen Wohlfarth',), ('Stephan Andrist',), ('Stephan El Shaarawy',), ('Stephan Lichtsteiner',), ('Stephan Schrock',), ('Stephane Darbion',), ('Stephen Buyl',), ('Stephen Carr',), ('Stephen Elliott',), ('Stephen Hunt',), ('Stephen Ireland',), ('Stephen Mallan',), (""Stephen O'Donnell"",), ('Stephen Quinn',), ('Stephen Ward',), ('Stergos Marinos',), ('Stevan Jovetic',), ('Steve De Ridder',), ('Steve Morison',), ('Steven Cherundolo',), ('Steven Davis',), ('Steven Gerrard',), ('Steven Jennings',), ('Steven Joseph-Monrose',), ('Steven Lawless',), ('Steven MacLean',), ('Steven Milne',), ('Steven Moreira',), ('Steven Naismith',), ('Steven Pienaar',), ('Steven Ross',), ('Steven Smith',), ('Steven Thompson',), ('Steven Whittaker',), ('Steven Zuber',), ('Stevie May',), ('Stian Ringstad',), ('Stipe Perica',), ('Stjepan Kukuruzovic',), ('Stuart Armstrong',), ('Stuart Holden',), ('Sturgeon',), ('Sulley Ali Muntari',), ('Sung-Yueng Ki',), ('Suso Santana',), ('Sven Bender',), ('Sven Joss',), ('Sven Kums',), ('Sven Luescher',), ('Sven Schipplock',), ('Sylvan Ebanks-Blake',), ('Sylwester Patejuk',), ('Szymon Pawlowski',), ('Takuya Murayama',), ('Tarik Elyounoussi',), ('Teddy Chevalier',), ('Teofilo Gutierrez',), ('Terell Ondaan',), ('Terry Dunfield',), ('Theo Walcott',), ('Theodor Gebre Selassie',), ('Thiago Alcantara',), ('Thiago Neves',), ('Thiago Ribeiro',), ('Thiago Silva',), ('Thibault Giresse',), ('Thibault Moulin',), ('Thievy Bifouma',), ('Thijs Bouma',), ('Thimothee Kolodziejczak',), ('Thomas Agyepong',), ('Thomas Bruns',), ('Thomas Buffel',), ('Thomas Enevoldsen',), ('Thomas Foket',), ('Thomas Guimaraes Azevedo',), ('Thomas Heurtaux',), ('Thomas Hitzlsperger',), ('Thomas Ince',), ('Thomas Kind Bendiksen',), ('Thomas Meunier',), ('Thomas Mueller',), ('Thomas Scobbie',), ('Thomas Toure',), ('Thomas Vermaelen',), ('Thorgan Hazard',), ('Thorstein Helstad',), ('Thulani Serero',), ('Tiago Luis',), ('Tiago Pinto',), ('Tiago Rodrigues',), ('Tiago Targino',), ('Tibert Pont',), ('Tijane Reis',), ('Tijani Belaid',), ('Tim Breukers',), ('Tim Cahill',), ('Tim Hoelscher',), ('Tim Hoogland',), ('Tim Janssen',), ('Tim Matthijs',), ('Tim Smolders',), ('Tim Vincken',), ('Timo Gebhart',), ('Timo Perthel',), ('Timothy Castagne',), ('Tinoco',), ('Tobias Kempe',), ('Tobias Pachonik',), ('Tobias Werner',), ('Toche',), ('Todd Kane',), ('Toifilou Maoulida',), ('Tolga Cigerci',), ('Tolgay Arslan',), ('Tom Cairney',), ('Tom Cleverley',), ('Tom De Sutter',), ('Tom Elliott',), ('Tom Hateley',), ('Tom Hiariej',), ('Tom Rogic',), ('Tom van Weert',), ('Tomane',), ('Tomas Danilevicius',), ('Tomas Rosicky',), ('Tomas Vestenicky',), ('Tomasz Brzyski',), ('Tomasz Cywka',), ('Tomasz Holota',), ('Tomasz Jodlowiec',), ('Tomasz Kedziora',), ('Tomasz Kupisz',), ('Tomasz Lisowski',), ('Tomasz Podgorski',), ('Tomi Juric',), ('Tommaso Rocchi',), ('Tommy Bechmann',), ('Tommy Oar',), ('Tomoaki Makino',), ('Tongo Hamed Doumbia',), ('Toni Gorupec',), ('Tonny Vilhena',), ('Tono',), ('Tony',), ('Torgeir Boerven',), ('Tornike Okriashvili',), ('Torsten Frings',), ('Tristan Lahaye',), ('Troy Deeney',), ('Tsepo Masilela',), ('Tunay Torun',), ('Tuur Dierckx',), ('Tyler Boyd',), ('Uche Nwofor',), ('Uffe Bech',), ('Ugo Ukah',), ('Umar Sadiq',), ('Umit Korkmaz',), ('Umut Bulut',), ('Unai Lopez',), ('Urby Emanuelson',), ('Uros Delic',), ('Uros Matic',), ('Vaclav Kadlec',), ('Vaclav Pilar',), ('Vagner Love',), ('Valdet Rama',), ('Valentin Vada',), ('Valentine Viola',), ('Valere Germain',), ('Valerio Di Cesare',), ('Valon Behrami',), ('Valter Birsa',), ('Vasco Fernandes',), ('Vasilios Torosidis',), ('Vegar Eggen Hedenstad',), ('Veljko Batrovic',), ('Veroljub Salatic',), ('Verza',), ('Vicente Sanchez',), ('Victor Alvarez',), ('Victor Andrade',), ('Victor Anichebe',), ('Victor Bernardez',), ('Victor Garcia',), ('Victor Hugo Montano',), ('Victor Ibarbo',), ('Victor Moses',), ('Victor Perez',), ('Victor Romero Rodriguez',), ('Victor Vazquez',), ('Victor Wanyama',), ('Victorien Angban',), ('Vieirinha',), ('Viktor Fischer',), ('Vincent Aboubakar',), ('Vincent Bessat',), ('Vincent Janssen',), ('Vincent Le Goff',), ('Vincent Nogueira',), ('Vincent Ruefli',), ('Vincent Vermeij',), ('Vincenzo Iaquinta',), ('Vinicius Araujo',), ('Virgil Misidjan',), ('Virgil van Dijk',), ('Virgile Reset',), ('Vito Plut',), ('Vitor Bruno',), ('Vitor',), ('Vlad Chiriches',), ('Vlad Munteanu',), ('Vladimir Boljevic',), ('Vladimir Darida',), ('Vladimir Dvalishvili',), ('Vojo Ubiparip',), ('Volodymyr Koval',), ('Vusumuzi Prince Nyoni',), ('Vytautas Andriuskevicius',), ('Wagner',), ('Wahbi Khazri',), ('Wakaso Mubarak',), ('Waldemar Sobota',), ('Wallace',), ('Wallyson Mallmann',), ('Walter Pandiani',), ('Wannes van Tricht',), ('Wayne Bridge',), ('Wayne Rooney',), ('Wayne Routledge',), ('Wellington Silva',), ('Wellington',), ('Wendell',), ('Wesley Hoolahan',), ('Wesley Sneijder',), ('Wessel Dammers',), ('Wilde-Donald Guerrier',), ('Wilfried Bony',), ('Wilfried Moimbe',), ('Will Atkinson',), ('Willem Janssen',), ('William Buckley',), ('William Matheus',), ('William Owusu',), ('Willian Jose',), ('Willian',), ('Willo Flood',), ('Willyan',), ('Wissam Ben Yedder',), ('Wojciech Kedziora',), ('Wout Brama',), ('Wout Droste',), ('Wouter Marinus',), ('Wouter Weghorst',), ('Xander Houtkoop',), ('Xavier Chen',), ('Xavier Luissint',), ('Xavier Margairaz',), ('Xavier Torres',), ('Xherdan Shaqiri',), ('Yacine Abdessadki',), ('Yacine Bammou',), ('Yacine Brahimi',), ('Yann Jouffre',), ('Yann Kermorgant',), ('Yannick Bolasie',), ('Yannick Cortie',), ('Yannick Djalo',), ('Yannick Ferreira-Carrasco',), ('Yannick Gerhardt',), ('Yannick Wildschut',), ('Yannis Salibur',), ('Yannis Tafer',), ('Yarouba Cissako',), ('Yassin Mikari',), ('Yassin Moutaouakil',), ('Yassine Benzia',), ('Yassine Chikhaoui',), ('Yassine El Ghanassy',), ('Yassine Jebbour',), ('Yaw Yeboah',), ('Yaya Soumahoro',), ('Yazalde',), ('Ylli Sallahi',), ('Yoann Gourcuff',), ('Yoell van Nieff',), ('Yohan Brouckaert',), ('Yohan Mollo',), ('Yonathan Del Valle',), ('Yoni Buyens',), ('Yoric Ravet',), ('Yoshinori Muto',), ('Yossi Benayoun',), ('Younes Kaboul',), ('Youness Mokhtar',), ('Young-Pyo Lee',), ('Youssef Adnane',), ('Youssouf Sabaly',), ('Yuri Berchiche',), ('Yuto Nagatomo',), ('Zaine Francis-Angol',), ('Zakaria Bakkali',), ('Zakaria Labyad',), ('Zaur Sadaev',), ('Zavon Hines',), ('Zdenek Ondrasek',), ('Zdenek Pospech',), ('Ze Eduardo',), ('Ze Manuel',), ('Ze Roberto',), ('Zeca',), ('Zhi Zheng',), ('Zie Diabate',), ('Zinedine Machach',), ('Ziri Hammar',), ('Zlatan Ljubijankic',), ('Zlatko Junuzovic',), ('Zoltan Stieber',), ('Zoran Tosic',), ('Zsolt Laczko',)]",[],Query results mismatch,0.027838332985993475
692,codebase_community,False,moderate,"SELECT Id
FROM users
WHERE DisplayName = 'Zolomon'","[(1,)]","[(1742,)]",Query results mismatch,0.003880083007970825
1459,student_club,True,simple,"SELECT major_name, department 
FROM major 
JOIN member ON major.major_id = member.link_to_major 
WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'","[('Human Development and Family Studies', 'Human Development and Family Studies Department')]","[('Human Development and Family Studies', 'Human Development and Family Studies Department')]",Query executed successfully,7.958398782648146e-05
452,card_games,False,simple,,,,Query generation failed,
916,formula_1,True,simple,SELECT surname FROM drivers WHERE nationality = 'Italian',"[('Trulli',), ('Fisichella',), ('Liuzzi',), ('Pantano',), ('Bruni',), ('Badoer',), ('Zanardi',), ('Larini',), ('Sospiri',), ('Morbidelli',), ('Montermini',), ('Lavaggi',), ('Schiattarella',), ('Martini',), ('Papis',), ('Tarquini',), ('Alboreto',), ('de Cesaris',), ('Patrese',), ('Barbazza',), ('Capelli',), ('Apicella',), ('Naspetti',), ('Modena',), ('Amati',), ('Caffi',), ('Bertaggia',), ('Pirro',), ('Nannini',), ('Barilla',), ('Langes',), ('Giacomelli',), ('Ghinzani',), ('Fabi',), ('de Angelis',), ('Baldi',), ('Fabi',), ('Paletti',), ('Gabbiani',), ('Stohr',), ('Francia',), ('Brambilla',), ('Merzario',), ('Brancatelli',), ('Leoni',), ('Colombo',), ('Franchi',), ('Zorzi',), ('Lombardi',), ('Pesenti-Rossi',), ('Facetti',), ('Galli',), ('de Adamich',), ('Giunti',), ('Scarfiotti',), ('Bandini',), ('Baghetti',), ('Russo',), ('Bussinello',), ('Vaccarella',), ('Bassi',), ('Brambilla',), ('Lippi',), ('Abate',), ('Starrabba',), ('Prinoth',), ('Scarlatti',), ('Natili',), ('Pirocchi',), ('Boffa',), ('Munaron',), ('Cabianca',), ('Drogo',), ('de Filippis',), ('Musso',), ('Gerini',), ('Piotti',), ('Taramazzo',), ('Perdisa',), ('Castellotti',), ('Maglioli',), ('Villoresi',), ('Scotti',), ('Taruffi',), ('Farina',), ('Mantovani',), ('Ascari',), ('de Riu',), ('Bonetto',), ('Carini',), ('Comotti',), ('Dusio',), ('Rol',), ('Sanesi',), ('Fagioli',), ('Biondetti',), ('Pagani',), ('Serafini',), ('Giovinazzi',)]","[('Trulli',), ('Fisichella',), ('Liuzzi',), ('Pantano',), ('Bruni',), ('Badoer',), ('Zanardi',), ('Larini',), ('Sospiri',), ('Morbidelli',), ('Montermini',), ('Lavaggi',), ('Schiattarella',), ('Martini',), ('Papis',), ('Tarquini',), ('Alboreto',), ('de Cesaris',), ('Patrese',), ('Barbazza',), ('Capelli',), ('Apicella',), ('Naspetti',), ('Modena',), ('Amati',), ('Caffi',), ('Bertaggia',), ('Pirro',), ('Nannini',), ('Barilla',), ('Langes',), ('Giacomelli',), ('Ghinzani',), ('Fabi',), ('de Angelis',), ('Baldi',), ('Fabi',), ('Paletti',), ('Gabbiani',), ('Stohr',), ('Francia',), ('Brambilla',), ('Merzario',), ('Brancatelli',), ('Leoni',), ('Colombo',), ('Franchi',), ('Zorzi',), ('Lombardi',), ('Pesenti-Rossi',), ('Facetti',), ('Galli',), ('de Adamich',), ('Giunti',), ('Scarfiotti',), ('Bandini',), ('Baghetti',), ('Russo',), ('Bussinello',), ('Vaccarella',), ('Bassi',), ('Brambilla',), ('Lippi',), ('Abate',), ('Starrabba',), ('Prinoth',), ('Scarlatti',), ('Natili',), ('Pirocchi',), ('Boffa',), ('Munaron',), ('Cabianca',), ('Drogo',), ('de Filippis',), ('Musso',), ('Gerini',), ('Piotti',), ('Taramazzo',), ('Perdisa',), ('Castellotti',), ('Maglioli',), ('Villoresi',), ('Scotti',), ('Taruffi',), ('Farina',), ('Mantovani',), ('Ascari',), ('de Riu',), ('Bonetto',), ('Carini',), ('Comotti',), ('Dusio',), ('Rol',), ('Sanesi',), ('Fagioli',), ('Biondetti',), ('Pagani',), ('Serafini',), ('Giovinazzi',)]",Query executed successfully,0.00016791600501164794
66,california_schools,True,simple,SELECT COUNT(*) FROM schools WHERE County = 'Stanislaus' AND FundingType = 'Directly funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31',"[(7,)]","[(7,)]",Query executed successfully,0.0020408330019563437
442,card_games,False,simple,"SELECT baseSetSize, code FROM sets WHERE block = 'Masques' OR block = 'Mirage'","[(350, 'MMQ'), (144, 'PCY'), (167, 'WTH')]","[(350, 'MIR'), (350, 'MMQ'), (143, 'NEM'), (144, 'PCY'), (1, 'PMMQ'), (1, 'PNEM'), (1, 'PPCY'), (167, 'VIS'), (167, 'WTH')]",Query results mismatch,0.00023100001271814108
427,card_games,False,moderate,SELECT DISTINCT type FROM sets WHERE code='ARC',"[('Chinese Simplified',), ('Chinese Traditional',), ('French',), ('German',), ('Italian',), ('Japanese',), ('Korean',), ('Portuguese (Brazil)',), ('Russian',), ('Spanish',)]","[('archenemy',)]",Query results mismatch,4.0457991417497396e-05
1044,european_football_2,False,simple,"SELECT player_name, birthday 
FROM Player 
WHERE strftime('%Y', birthday) = '1970' AND strftime('%m', birthday) = '10'","[('Chris Swailes',), ('Dean Kiely',), ('Edwin van der Sar',), ('Sander Boschker',)]","[('Chris Swailes', '1970-10-19 00:00:00'), ('Dean Kiely', '1970-10-10 00:00:00'), ('Edwin van der Sar', '1970-10-29 00:00:00'), ('Sander Boschker', '1970-10-20 00:00:00')]",Query results mismatch,0.0047553750046063215
549,codebase_community,False,simple,,,,Query generation failed,
1386,student_club,False,simple,"SELECT SUM(cost) AS total_expense 
FROM expense 
WHERE expense_description LIKE '%Yearly Kickoff%'","[(449.13,)]","[(None,)]",Query results mismatch,8.899997919797897e-05
938,formula_1,False,moderate,"SELECT drivers.forename, drivers.surname, drivers.url 
FROM races 
JOIN results ON races.raceId = results.raceId 
JOIN drivers ON results.driverId = drivers.driverId 
WHERE races.year = 2008 AND races.name = 'Australian Grand Prix'","[('Lewis', 'Hamilton', 'http://en.wikipedia.org/wiki/Lewis_Hamilton')]","[('Lewis', 'Hamilton', 'http://en.wikipedia.org/wiki/Lewis_Hamilton'), ('Nick', 'Heidfeld', 'http://en.wikipedia.org/wiki/Nick_Heidfeld'), ('Nico', 'Rosberg', 'http://en.wikipedia.org/wiki/Nico_Rosberg'), ('Fernando', 'Alonso', 'http://en.wikipedia.org/wiki/Fernando_Alonso'), ('Heikki', 'Kovalainen', 'http://en.wikipedia.org/wiki/Heikki_Kovalainen'), ('Kazuki', 'Nakajima', 'http://en.wikipedia.org/wiki/Kazuki_Nakajima'), ('Sébastien', 'Bourdais', 'http://en.wikipedia.org/wiki/S%C3%A9bastien_Bourdais'), ('Kimi', 'Räikkönen', 'http://en.wikipedia.org/wiki/Kimi_R%C3%A4ikk%C3%B6nen'), ('Robert', 'Kubica', 'http://en.wikipedia.org/wiki/Robert_Kubica'), ('Timo', 'Glock', 'http://en.wikipedia.org/wiki/Timo_Glock'), ('Takuma', 'Sato', 'http://en.wikipedia.org/wiki/Takuma_Sato'), ('Nelson', 'Piquet Jr.', 'http://en.wikipedia.org/wiki/Nelson_Piquet,_Jr.'), ('Felipe', 'Massa', 'http://en.wikipedia.org/wiki/Felipe_Massa'), ('David', 'Coulthard', 'http://en.wikipedia.org/wiki/David_Coulthard'), ('Jarno', 'Trulli', 'http://en.wikipedia.org/wiki/Jarno_Trulli'), ('Adrian', 'Sutil', 'http://en.wikipedia.org/wiki/Adrian_Sutil'), ('Mark', 'Webber', 'http://en.wikipedia.org/wiki/Mark_Webber'), ('Jenson', 'Button', 'http://en.wikipedia.org/wiki/Jenson_Button'), ('Anthony', 'Davidson', 'http://en.wikipedia.org/wiki/Anthony_Davidson'), ('Sebastian', 'Vettel', 'http://en.wikipedia.org/wiki/Sebastian_Vettel'), ('Giancarlo', 'Fisichella', 'http://en.wikipedia.org/wiki/Giancarlo_Fisichella'), ('Rubens', 'Barrichello', 'http://en.wikipedia.org/wiki/Rubens_Barrichello')]",Query results mismatch,0.0029229999927338213
1357,student_club,False,simple,SELECT date_received FROM income WHERE link_to_member = 'recUdRhbhcEO1Hk5r',"[('2019-10-02',), ('2019-09-12',)]","[('2019-10-08',)]",Query results mismatch,5.5832992075011134e-05
477,card_games,False,challenging,,,,Query generation failed,
713,codebase_community,False,simple,SELECT Score FROM comments WHERE Text = 'R is also lazy evaluated.',"[(4235,)]","[(1,)]",Query results mismatch,0.02395754199824296
1458,student_club,False,moderate,SELECT ABS((SELECT COUNT(*) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'New Jersey') - (SELECT COUNT(*) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Vermont')) AS difference,"[(12.121212121212121,)]","[(4,)]",Query results mismatch,0.0001321669842582196
784,superhero,False,simple,,,,Query generation failed,
342,card_games,False,simple,"SELECT name, convertedManaCost, faceConvertedManaCost 
FROM cards 
WHERE convertedManaCost > faceConvertedManaCost 
ORDER BY convertedManaCost DESC","[(""Ancestor's Chosen"",)]","[('Who // What // When // Where // Why', 13.0, 1.0), ('Who // What // When // Where // Why', 13.0, 3.0), ('Who // What // When // Where // Why', 13.0, 3.0), ('Who // What // When // Where // Why', 13.0, 4.0), ('Who // What // When // Where // Why', 13.0, 2.0), ('Who // What // When // Where // Why', 13.0, 1.0), ('Who // What // When // Where // Why', 13.0, 3.0), ('Who // What // When // Where // Why', 13.0, 3.0), ('Who // What // When // Where // Why', 13.0, 4.0), ('Who // What // When // Where // Why', 13.0, 2.0), ('Rags // Riches', 11.0, 4.0), ('Rags // Riches', 11.0, 7.0), ('Rags // Riches', 11.0, 4.0), ('Rags // Riches', 11.0, 7.0), ('Rags // Riches', 11.0, 7.0), ('Rags // Riches', 11.0, 4.0), ('Commit // Memory', 10.0, 4.0), ('Commit // Memory', 10.0, 6.0), ('Commit // Memory', 10.0, 4.0), ('Commit // Memory', 10.0, 6.0), ('Commit // Memory', 10.0, 4.0), ('Commit // Memory', 10.0, 6.0), ('Commit // Memory', 10.0, 6.0), ('Commit // Memory', 10.0, 4.0), ('Commit // Memory', 10.0, 6.0), ('Commit // Memory', 10.0, 4.0), ('Dusk // Dawn', 9.0, 4.0), ('Dusk // Dawn', 9.0, 5.0), ('Spring // Mind', 9.0, 3.0), ('Spring // Mind', 9.0, 6.0), ('Dusk // Dawn', 9.0, 4.0), ('Dusk // Dawn', 9.0, 5.0), ('Spring // Mind', 9.0, 3.0), ('Spring // Mind', 9.0, 6.0), ('Dusk // Dawn', 9.0, 4.0), ('Dusk // Dawn', 9.0, 5.0), ('Catch // Release', 9.0, 3.0), ('Catch // Release', 9.0, 6.0), ('Connive // Concoct', 9.0, 4.0), ('Connive // Concoct', 9.0, 5.0), ('Dusk // Dawn', 9.0, 5.0), ('Dusk // Dawn', 9.0, 4.0), ('Connive // Concoct', 9.0, 5.0), ('Connive // Concoct', 9.0, 4.0), ('Rough // Tumble', 8.0, 2.0), ('Rough // Tumble', 8.0, 6.0), ('Find // Finality', 8.0, 2.0), ('Find // Finality', 8.0, 6.0), ('Spite // Malice', 8.0, 4.0), ('Spite // Malice', 8.0, 4.0), ('Beck // Call', 8.0, 2.0), ('Beck // Call', 8.0, 6.0), ('Breaking // Entering', 8.0, 2.0), ('Breaking // Entering', 8.0, 6.0), ('Hit // Run', 8.0, 3.0), ('Hit // Run', 8.0, 5.0), ('Assure // Assemble', 8.0, 2.0), ('Assure // Assemble', 8.0, 6.0), ('Find // Finality', 8.0, 2.0), ('Find // Finality', 8.0, 6.0), ('Spite // Malice', 8.0, 4.0), ('Spite // Malice', 8.0, 4.0), ('Breaking // Entering', 8.0, 6.0), ('Breaking // Entering', 8.0, 2.0), ('Find // Finality', 8.0, 6.0), ('Assure // Assemble', 8.0, 6.0), ('Assure // Assemble', 8.0, 2.0), ('Find // Finality', 8.0, 2.0), ('Boom // Bust', 8.0, 2.0), ('Boom // Bust', 8.0, 6.0), ('Rough // Tumble', 8.0, 2.0), ('Rough // Tumble', 8.0, 6.0), ('Beck // Call', 8.0, 2.0), ('Beck // Call', 8.0, 6.0), ('Breaking // Entering', 8.0, 2.0), ('Breaking // Entering', 8.0, 6.0), ('Bedeck // Bedazzle', 8.0, 6.0), ('Bedeck // Bedazzle', 8.0, 2.0), ('Bedeck // Bedazzle', 8.0, 2.0), ('Bedeck // Bedazzle', 8.0, 6.0), ('Revival // Revenge', 8.0, 2.0), ('Revival // Revenge', 8.0, 6.0), ('Spite // Malice', 8.0, 4.0), ('Spite // Malice', 8.0, 4.0), ('Never // Return', 7.0, 3.0), ('Never // Return', 7.0, 4.0), ('Mouth // Feed', 7.0, 3.0), ('Mouth // Feed', 7.0, 4.0), ('Never // Return', 7.0, 3.0), ('Never // Return', 7.0, 4.0), ('Mouth // Feed', 7.0, 3.0), ('Mouth // Feed', 7.0, 4.0), ('Consign // Oblivion', 7.0, 2.0), ('Consign // Oblivion', 7.0, 5.0), ('Refuse // Cooperate', 7.0, 4.0), ('Refuse // Cooperate', 7.0, 3.0), ('Order // Chaos', 7.0, 4.0), ('Order // Chaos', 7.0, 3.0), ('Order // Chaos', 7.0, 4.0), ('Order // Chaos', 7.0, 3.0), ('Refuse // Cooperate', 7.0, 4.0), ('Refuse // Cooperate', 7.0, 3.0), ('Response // Resurgence', 7.0, 2.0), ('Response // Resurgence', 7.0, 5.0), ('Down // Dirty', 7.0, 4.0), ('Down // Dirty', 7.0, 3.0), ('Flesh // Blood', 7.0, 5.0), ('Flesh // Blood', 7.0, 2.0), ('Bound // Determined', 7.0, 5.0), ('Bound // Determined', 7.0, 2.0), ('Crime // Punishment', 7.0, 5.0), ('Crime // Punishment', 7.0, 2.0), ('Odds // Ends', 7.0, 2.0), ('Odds // Ends', 7.0, 5.0), ('Research // Development', 7.0, 2.0), ('Research // Development', 7.0, 5.0), ('Elbrus, the Binding Blade // Withengar Unbound', 7.0, 0.0), ('Realm-Cloaked Giant // Cast Off', 7.0, 5.0), ('Reaper of Night // Harvest Fear', 7.0, 4.0), ('Beanstalk Giant // Fertile Footsteps', 7.0, 3.0), ('Realm-Cloaked Giant // Cast Off', 7.0, 5.0), ('Reaper of Night // Harvest Fear', 7.0, 4.0), ('Beanstalk Giant // Fertile Footsteps', 7.0, 3.0), ('Discovery // Dispersal', 7.0, 2.0), ('Discovery // Dispersal', 7.0, 5.0), ('Flower // Flourish', 7.0, 1.0), ('Flower // Flourish', 7.0, 6.0), ('Invert // Invent', 7.0, 1.0), ('Invert // Invent', 7.0, 6.0), ('Response // Resurgence', 7.0, 2.0), ('Response // Resurgence', 7.0, 5.0), ('Order // Chaos', 7.0, 4.0), ('Order // Chaos', 7.0, 3.0), ('Consign // Oblivion', 7.0, 2.0), ('Consign // Oblivion', 7.0, 5.0), ('Refuse // Cooperate', 7.0, 4.0), ('Refuse // Cooperate', 7.0, 3.0), ('Reaper of Night // Harvest Fear', 7.0, 4.0), ('Never // Return', 7.0, 4.0), ('Never // Return', 7.0, 3.0), ('Mouth // Feed', 7.0, 4.0), ('Mouth // Feed', 7.0, 3.0), ('Realm-Cloaked Giant // Cast Off', 7.0, 5.0), ('Realm-Cloaked Giant // Cast Off', 7.0, 5.0), ('Response // Resurgence', 7.0, 5.0), ('Response // Resurgence', 7.0, 2.0), ('Refuse // Cooperate', 7.0, 3.0), ('Refuse // Cooperate', 7.0, 4.0), ('Odds // Ends', 7.0, 2.0), ('Odds // Ends', 7.0, 5.0), ('Beanstalk Giant // Fertile Footsteps', 7.0, 3.0), ('Reaper of Night // Harvest Fear', 7.0, 4.0), ('Beanstalk Giant // Fertile Footsteps', 7.0, 3.0), ('Realm-Cloaked Giant // Cast Off', 7.0, 5.0), ('Warrant // Warden', 7.0, 2.0), ('Warrant // Warden', 7.0, 5.0), ('Elbrus, the Binding Blade // Withengar Unbound', 7.0, 0.0), ('Beanstalk Giant // Fertile Footsteps', 7.0, 3.0), ('Insult // Injury', 6.0, 3.0), ('Insult // Injury', 6.0, 3.0), ('Start // Finish', 6.0, 3.0), ('Start // Finish', 6.0, 3.0), ('Reduce // Rubble', 6.0, 3.0), ('Reduce // Rubble', 6.0, 3.0), ('Destined // Lead', 6.0, 2.0), ('Destined // Lead', 6.0, 4.0), ('Onward // Victory', 6.0, 3.0), ('Onward // Victory', 6.0, 3.0), ('Prepare // Fight', 6.0, 2.0), ('Prepare // Fight', 6.0, 4.0), ('Insult // Injury', 6.0, 3.0), ('Insult // Injury', 6.0, 3.0), ('Destined // Lead', 6.0, 2.0), ('Destined // Lead', 6.0, 4.0), ('Farm // Market', 6.0, 3.0), ('Farm // Market', 6.0, 3.0), ('Grind // Dust', 6.0, 2.0), ('Grind // Dust', 6.0, 4.0), ('Leave // Chance', 6.0, 2.0), ('Leave // Chance', 6.0, 4.0), ('Onward // Victory', 6.0, 3.0), ('Onward // Victory', 6.0, 3.0), ('Prepare // Fight', 6.0, 2.0), ('Prepare // Fight', 6.0, 4.0), ('Reason // Believe', 6.0, 1.0), ('Reason // Believe', 6.0, 5.0), ('Reduce // Rubble', 6.0, 3.0), ('Reduce // Rubble', 6.0, 3.0), ('Start // Finish', 6.0, 3.0), ('Start // Finish', 6.0, 3.0), ('Farm // Market', 6.0, 3.0), ('Farm // Market', 6.0, 3.0), ('Armed // Dangerous', 6.0, 2.0), ('Armed // Dangerous', 6.0, 4.0), ('Give // Take', 6.0, 3.0), ('Give // Take', 6.0, 3.0), ('Ready // Willing', 6.0, 3.0), ('Ready // Willing', 6.0, 3.0), ('Toil // Trouble', 6.0, 3.0), ('Toil // Trouble', 6.0, 3.0), ('Pure // Simple', 6.0, 3.0), ('Pure // Simple', 6.0, 3.0), ('Tuinvale Treefolk // Oaken Boon', 6.0, 4.0), ('Tuinvale Treefolk // Oaken Boon', 6.0, 4.0), ('Expansion // Explosion', 6.0, 2.0), ('Expansion // Explosion', 6.0, 4.0), ('Naughty // Nice', 6.0, 3.0), ('Naughty // Nice', 6.0, 3.0), ('Farm // Market', 6.0, 3.0), ('Farm // Market', 6.0, 3.0), ('Leave // Chance', 6.0, 2.0), ('Leave // Chance', 6.0, 4.0), ('Reason // Believe', 6.0, 1.0), ('Reason // Believe', 6.0, 5.0), ('Grind // Dust', 6.0, 2.0), ('Grind // Dust', 6.0, 4.0), ('Insult // Injury', 6.0, 3.0), ('Insult // Injury', 6.0, 3.0), ('Prepare // Fight', 6.0, 4.0), ('Prepare // Fight', 6.0, 2.0), ('Expansion // Explosion', 6.0, 2.0), ('Expansion // Explosion', 6.0, 2.0), ('Expansion // Explosion', 6.0, 4.0), ('Expansion // Explosion', 6.0, 4.0), ('Leave // Chance', 6.0, 4.0), ('Leave // Chance', 6.0, 2.0), ('Reason // Believe', 6.0, 5.0), ('Reason // Believe', 6.0, 1.0), ('Grind // Dust', 6.0, 4.0), ('Grind // Dust', 6.0, 2.0), ('Tuinvale Treefolk // Oaken Boon', 6.0, 4.0), ('Nightmare Moon // Princess Luna', 6.0, 0.0), ('Consecrate // Consume', 6.0, 2.0), ('Consecrate // Consume', 6.0, 4.0), ('Depose // Deploy', 6.0, 2.0), ('Depose // Deploy', 6.0, 4.0), ('Thrash // Threat', 6.0, 2.0), ('Thrash // Threat', 6.0, 4.0), ('Struggle // Survive', 5.0, 3.0), ('Struggle // Survive', 5.0, 2.0), ('Pain // Suffering', 5.0, 1.0), ('Pain // Suffering', 5.0, 4.0), ('Alive // Well', 5.0, 4.0), ('Alive // Well', 5.0, 1.0), ('Far // Away', 5.0, 2.0), ('Far // Away', 5.0, 3.0), ('Profit // Loss', 5.0, 2.0), ('Profit // Loss', 5.0, 3.0), ('Protect // Serve', 5.0, 3.0), ('Protect // Serve', 5.0, 2.0), ('Turn // Burn', 5.0, 3.0), ('Turn // Burn', 5.0, 2.0), ('Supply // Demand', 5.0, 2.0), ('Supply // Demand', 5.0, 3.0), ('Soul Seizer // Ghastly Haunting', 5.0, 0.0), ('Ravenous Demon // Archdemon of Greed', 5.0, 0.0), ('Lonesome Unicorn // Rider in Need', 5.0, 3.0), ('Lonesome Unicorn // Rider in Need', 5.0, 3.0), ('Docent of Perfection // Final Iteration', 5.0, 0.0), ('Voldaren Pariah // Abolisher of Bloodlines', 5.0, 0.0), ('Vildin-Pack Outcast // Dronepack Kindred', 5.0, 0.0), ('Ulrich of the Krallenhorde // Ulrich, Uncontested Alpha', 5.0, 0.0), ('Turn // Burn', 5.0, 3.0), ('Turn // Burn', 5.0, 2.0), ('Integrity // Intervention', 5.0, 1.0), ('Integrity // Intervention', 5.0, 4.0), ('Status // Statue', 5.0, 1.0), ('Status // Statue', 5.0, 4.0), ('Assault // Battery', 5.0, 1.0), ('Assault // Battery', 5.0, 4.0), ('Struggle // Survive', 5.0, 3.0), ('Struggle // Survive', 5.0, 2.0), ('Pain // Suffering', 5.0, 1.0), ('Pain // Suffering', 5.0, 4.0), ('Assault // Battery', 5.0, 1.0), ('Assault // Battery', 5.0, 4.0), ('Grizzled Outcasts // Krallenhorde Wantons', 5.0, 0.0), ('Lonesome Unicorn // Rider in Need', 5.0, 3.0), ('Ravenous Demon // Archdemon of Greed', 5.0, 0.0), ('Voldaren Pariah // Abolisher of Bloodlines', 5.0, 0.0), ('Ulrich of the Krallenhorde // Ulrich, Uncontested Alpha', 5.0, 0.0), ('Docent of Perfection // Final Iteration', 5.0, 0.0), ('Ravenous Demon // Archdemon of Greed', 5.0, 0.0), ('Lonesome Unicorn // Rider in Need', 5.0, 3.0), ('Supply // Demand', 5.0, 3.0), ('Supply // Demand', 5.0, 2.0), ('Supply // Demand', 5.0, 3.0), ('Supply // Demand', 5.0, 2.0), ('Sage of Ancient Lore // Werewolf of Ancient Hunger', 5.0, 0.0), ('Archangel Avacyn // Avacyn, the Purifier', 5.0, 0.0), ('Carnival // Carnage', 5.0, 1.0), ('Carnival // Carnage', 5.0, 4.0), ('Repudiate // Replicate', 5.0, 2.0), ('Repudiate // Replicate', 5.0, 3.0), ('Archangel Avacyn // Avacyn, the Purifier', 5.0, 0.0), ('Gatstaf Arsonists // Gatstaf Ravagers', 5.0, 0.0), ('Sage of Ancient Lore // Werewolf of Ancient Hunger', 5.0, 0.0), ('Assault // Battery', 5.0, 1.0), ('Assault // Battery', 5.0, 4.0), ('Archangel Avacyn // Avacyn, the Purifier', 5.0, 0.0), ('Struggle // Survive', 5.0, 3.0), ('Struggle // Survive', 5.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), ('Driven // Despair', 4.0, 2.0), ('Driven // Despair', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Illusion // Reality', 4.0, 1.0), ('Illusion // Reality', 4.0, 3.0), ('Night // Day', 4.0, 1.0), ('Night // Day', 4.0, 3.0), ('Trial // Error', 4.0, 2.0), ('Trial // Error', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Rise // Fall', 4.0, 2.0), ('Rise // Fall', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Hide // Seek', 4.0, 2.0), ('Hide // Seek', 4.0, 2.0), ('Rise // Fall', 4.0, 2.0), ('Rise // Fall', 4.0, 2.0), ('Trial // Error', 4.0, 2.0), ('Trial // Error', 4.0, 2.0), ('Afflicted Deserter // Werewolf Ransacker', 4.0, 0.0), (""Mondronen Shaman // Tovolar's Magehunter"", 4.0, 0.0), ('Huntmaster of the Fells // Ravager of the Fells', 4.0, 0.0), (""Garenbrig Carver // Shield's Might"", 4.0, 2.0), (""Garenbrig Carver // Shield's Might"", 4.0, 2.0), ('Smoldering Werewolf // Erupting Dreadwolf', 4.0, 0.0), ('Tangleclaw Werewolf // Fibrous Entangler', 4.0, 0.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Grimlock, Dinobot Leader // Grimlock, Ferocious King', 4.0, 0.0), ('Decorated Knight // Present Arms', 4.0, 3.0), ('Driven // Despair', 4.0, 2.0), ('Driven // Despair', 4.0, 2.0), ('Stand // Deliver', 4.0, 1.0), ('Stand // Deliver', 4.0, 3.0), ('Thraben Sentry // Thraben Militia', 4.0, 0.0), ('Bloodline Keeper // Lord of Lineage', 4.0, 0.0), ('Instigator Gang // Wildblood Pack', 4.0, 0.0), ('Tormented Pariah // Rampaging Werewolf', 4.0, 0.0), ('Garruk Relentless // Garruk, the Veil-Cursed', 4.0, 0.0), ('Ulvenwald Mystics // Ulvenwald Primordials', 4.0, 0.0), ('Nicol Bolas, the Ravager // Nicol Bolas, the Arisen', 4.0, 0.0), ('Nicol Bolas, the Ravager // Nicol Bolas, the Arisen', 4.0, 0.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), (""Mondronen Shaman // Tovolar's Magehunter"", 4.0, 0.0), ('Driven // Despair', 4.0, 2.0), ('Driven // Despair', 4.0, 2.0), ('Dead // Gone', 4.0, 1.0), ('Dead // Gone', 4.0, 3.0), ('Cut // Ribbons', 4.0, 2.0), ('Cut // Ribbons', 4.0, 2.0), ('Nicol Bolas, the Ravager // Nicol Bolas, the Arisen', 4.0, 0.0), ('Storm the Vault // Vault of Catlacan', 4.0, 0.0), ('Golden Guardian // Gold-Forge Garrison', 4.0, 0.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), (""Mondronen Shaman // Tovolar's Magehunter"", 4.0, 0.0), ('Elusive Tormentor // Insidious Mist', 4.0, 0.0), (""Garenbrig Carver // Shield's Might"", 4.0, 2.0), ('Elusive Tormentor // Insidious Mist', 4.0, 0.0), ('Elusive Tormentor // Insidious Mist', 4.0, 0.0), ('Arlinn Kord // Arlinn, Embraced by the Moon', 4.0, 0.0), ('Startled Awake // Persistent Nightmare', 4.0, 0.0), (""Vance's Blasting Cannons // Spitfire Bastion"", 4.0, 0.0), (""Conqueror's Galleon // Conqueror's Foothold"", 4.0, 0.0), ('Primal Amulet // Primal Wellspring', 4.0, 0.0), (""Vance's Blasting Cannons // Spitfire Bastion"", 4.0, 0.0), (""Conqueror's Galleon // Conqueror's Foothold"", 4.0, 0.0), ('Primal Amulet // Primal Wellspring', 4.0, 0.0), ('Storm the Vault // Vault of Catlacan', 4.0, 0.0), ('Golden Guardian // Gold-Forge Garrison', 4.0, 0.0), ('Collision // Colossus', 4.0, 2.0), ('Collision // Colossus', 4.0, 2.0), ('Incubation // Incongruity', 4.0, 1.0), ('Incubation // Incongruity', 4.0, 3.0), ('Avacynian Missionaries // Lunarch Inquisitors', 4.0, 0.0), ('Aberrant Researcher // Perfected Form', 4.0, 0.0), ('Startled Awake // Persistent Nightmare', 4.0, 0.0), ('Accursed Witch // Infectious Curse', 4.0, 0.0), ('Elusive Tormentor // Insidious Mist', 4.0, 0.0), ('Solitary Hunter // One of the Pack', 4.0, 0.0), ('Arlinn Kord // Arlinn, Embraced by the Moon', 4.0, 0.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Arlinn Kord // Arlinn, Embraced by the Moon', 4.0, 0.0), ('Bloodline Keeper // Lord of Lineage', 4.0, 0.0), ('Huntmaster of the Fells // Ravager of the Fells', 4.0, 0.0), ('Garruk Relentless // Garruk, the Veil-Cursed', 4.0, 0.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), ('Fire // Ice', 4.0, 2.0), (""Vance's Blasting Cannons // Spitfire Bastion"", 4.0, 0.0), (""Conqueror's Galleon // Conqueror's Foothold"", 4.0, 0.0), ('Primal Amulet // Primal Wellspring', 4.0, 0.0), ('Failure // Comply', 3.0, 2.0), ('Failure // Comply', 3.0, 1.0), ('Heaven // Earth', 3.0, 1.0), ('Heaven // Earth', 3.0, 2.0), ('Appeal // Authority', 3.0, 1.0), ('Appeal // Authority', 3.0, 2.0), ('Claim // Fame', 3.0, 1.0), ('Claim // Fame', 3.0, 2.0), ('Failure // Comply', 3.0, 2.0), ('Failure // Comply', 3.0, 1.0), ('Heaven // Earth', 3.0, 1.0), ('Heaven // Earth', 3.0, 2.0), ('Life // Death', 3.0, 1.0), ('Life // Death', 3.0, 2.0), ('Start // Fire', 3.0, 2.0), ('Wear // Tear', 3.0, 2.0), ('Wear // Tear', 3.0, 1.0), ('Life // Death', 3.0, 1.0), ('Life // Death', 3.0, 2.0), ('Wear // Tear', 3.0, 2.0), ('Wear // Tear', 3.0, 1.0), (""Chosen of Markov // Markov's Servant"", 3.0, 0.0), ('Lambholt Elder // Silverpelt Werewolf', 3.0, 0.0), ('Chalice of Life // Chalice of Death', 3.0, 0.0), ('Ardenvale Tactician // Dizzying Swoop', 3.0, 2.0), ('Brazen Borrower // Petty Theft', 3.0, 2.0), ('Queen of Ice // Rage of Winter', 3.0, 2.0), ('Bonecrusher Giant // Stomp', 3.0, 2.0), ('Merchant of the Vale // Haggle', 3.0, 1.0), (""Lovestruck Beast // Heart's Desire"", 3.0, 1.0), ('Rosethorn Acolyte // Seasonal Ritual', 3.0, 1.0), ('Ardenvale Tactician // Dizzying Swoop', 3.0, 2.0), ('Brazen Borrower // Petty Theft', 3.0, 2.0), ('Queen of Ice // Rage of Winter', 3.0, 2.0), ('Bonecrusher Giant // Stomp', 3.0, 2.0), ('Merchant of the Vale // Haggle', 3.0, 1.0), (""Lovestruck Beast // Heart's Desire"", 3.0, 1.0), ('Rosethorn Acolyte // Seasonal Ritual', 3.0, 1.0), ('Extricator of Sin // Extricator of Flesh', 3.0, 0.0), ('Grizzled Angler // Grisly Anglerfish', 3.0, 0.0), ('Conduit of Storms // Conduit of Emrakul', 3.0, 0.0), ('Shrill Howler // Howling Chorus', 3.0, 0.0), ('Cryptolith Fragment // Aurora of Emrakul', 3.0, 0.0), ('Life // Death', 3.0, 2.0), ('Life // Death', 3.0, 1.0), ('Wear // Tear', 3.0, 2.0), ('Wear // Tear', 3.0, 1.0), ('Claim // Fame', 3.0, 1.0), ('Claim // Fame', 3.0, 2.0), ('Appeal // Authority', 3.0, 1.0), ('Appeal // Authority', 3.0, 2.0), ('Civilized Scholar // Homicidal Brute', 3.0, 0.0), ('Screeching Bat // Stalking Vampire', 3.0, 0.0), ('Hanweir Watchkeep // Bane of Hanweir', 3.0, 0.0), ('Kruin Outlaw // Terror of Kruin Pass', 3.0, 0.0), ('Daybreak Ranger // Nightfall Predator', 3.0, 0.0), ('Villagers of Estwald // Howlpack of Estwald', 3.0, 0.0), ('Claim // Fame', 3.0, 1.0), ('Claim // Fame', 3.0, 2.0), ('Liliana, Heretical Healer // Liliana, Defiant Necromancer', 3.0, 0.0), ('Chandra, Fire of Kaladesh // Chandra, Roaring Flame', 3.0, 0.0), ('Nissa, Vastwood Seer // Nissa, Sage Animist', 3.0, 0.0), ('Failure // Comply', 3.0, 1.0), ('Failure // Comply', 3.0, 2.0), ('Heaven // Earth', 3.0, 2.0), ('Heaven // Earth', 3.0, 1.0), ('Bonecrusher Giant // Stomp', 3.0, 2.0), ('Bonecrusher Giant // Stomp', 3.0, 2.0), (""Lovestruck Beast // Heart's Desire"", 3.0, 1.0), (""Lovestruck Beast // Heart's Desire"", 3.0, 1.0), ('Brazen Borrower // Petty Theft', 3.0, 2.0), ('Brazen Borrower // Petty Theft', 3.0, 2.0), ('Brazen Borrower // Petty Theft', 3.0, 2.0), ('Bonecrusher Giant // Stomp', 3.0, 2.0), ('Liliana, Heretical Healer // Liliana, Defiant Necromancer', 3.0, 0.0), ('Chandra, Fire of Kaladesh // Chandra, Roaring Flame', 3.0, 0.0), ('Nissa, Vastwood Seer // Nissa, Sage Animist', 3.0, 0.0), (""Hadana's Climb // Winged Temple of Orazca"", 3.0, 0.0), ('Journey to Eternity // Atzal, Cave of Eternity', 3.0, 0.0), ('Profane Procession // Tomb of the Dusk Rose', 3.0, 0.0), ('Life // Death', 3.0, 1.0), ('Life // Death', 3.0, 2.0), ('Queen of Ice // Rage of Winter', 3.0, 2.0), ('Merchant of the Vale // Haggle', 3.0, 1.0), ('Ardenvale Tactician // Dizzying Swoop', 3.0, 2.0), ('Bonecrusher Giant // Stomp', 3.0, 2.0), ('Brazen Borrower // Petty Theft', 3.0, 2.0), (""Lovestruck Beast // Heart's Desire"", 3.0, 1.0), ('Rosethorn Acolyte // Seasonal Ritual', 3.0, 1.0), ('Liliana, Heretical Healer // Liliana, Defiant Necromancer', 3.0, 0.0), ('Chandra, Fire of Kaladesh // Chandra, Roaring Flame', 3.0, 0.0), ('Nissa, Vastwood Seer // Nissa, Sage Animist', 3.0, 0.0), ('Geier Reach Bandit // Vildin-Pack Alpha', 3.0, 0.0), ('Growing Rites of Itlimoc // Itlimoc, Cradle of the Sun', 3.0, 0.0), ('Growing Rites of Itlimoc // Itlimoc, Cradle of the Sun', 3.0, 0.0), (""Hadana's Climb // Winged Temple of Orazca"", 3.0, 0.0), ('Journey to Eternity // Atzal, Cave of Eternity', 3.0, 0.0), ('Profane Procession // Tomb of the Dusk Rose', 3.0, 0.0), ('Pious Evangel // Wayward Disciple', 3.0, 0.0), ('Uninvited Geist // Unimpeded Trespasser', 3.0, 0.0), ('Kindly Stranger // Demon-Possessed Witch', 3.0, 0.0), ('Breakneck Rider // Neck Breaker', 3.0, 0.0), ('Convicted Killer // Branded Howler', 3.0, 0.0), ('Geier Reach Bandit // Vildin-Pack Alpha', 3.0, 0.0), ('Autumnal Gloom // Ancient of the Equinox', 3.0, 0.0), ('Hermit of the Natterknolls // Lone Wolf of the Natterknolls', 3.0, 0.0), ('Harvest Hand // Scrounged Scythe', 3.0, 0.0), ('Chandra, Fire of Kaladesh // Chandra, Roaring Flame', 3.0, 0.0), ('Liliana, Heretical Healer // Liliana, Defiant Necromancer', 3.0, 0.0), ('Nissa, Vastwood Seer // Nissa, Sage Animist', 3.0, 0.0), ('Growing Rites of Itlimoc // Itlimoc, Cradle of the Sun', 3.0, 0.0), ('Wax // Wane', 2.0, 1.0), ('Wax // Wane', 2.0, 1.0), ('Loyal Cathar // Unhallowed Cathar', 2.0, 0.0), ('Hinterland Hermit // Hinterland Scourge', 2.0, 0.0), ('Scorned Villager // Moonscarred Werewolf', 2.0, 0.0), ('Shepherd of the Flock // Usher to Safety', 2.0, 1.0), ('Smitten Swordmaster // Curry Favor', 2.0, 1.0), ('Embereth Shieldbreaker // Battle Display', 2.0, 1.0), ('Rimrock Knight // Boulder Rush', 2.0, 1.0), ('Curious Pair // Treats to Share', 2.0, 1.0), ('Shepherd of the Flock // Usher to Safety', 2.0, 1.0), ('Smitten Swordmaster // Curry Favor', 2.0, 1.0), ('Embereth Shieldbreaker // Battle Display', 2.0, 1.0), ('Rimrock Knight // Boulder Rush', 2.0, 1.0), ('Curious Pair // Treats to Share', 2.0, 1.0), ('Lone Rider // It That Rides as One', 2.0, 0.0), ('Curious Homunculus // Voracious Reader', 2.0, 0.0), ('Ulvenwald Captive // Ulvenwald Abomination', 2.0, 0.0), ('Wax // Wane', 2.0, 1.0), ('Wax // Wane', 2.0, 1.0), ('Cloistered Youth // Unholy Fiend', 2.0, 0.0), (""Ludevic's Test Subject // Ludevic's Abomination"", 2.0, 0.0), ('Village Ironsmith // Ironfang', 2.0, 0.0), ('Gatstaf Shepherd // Gatstaf Howler', 2.0, 0.0), ('Mayor of Avabruck // Howlpack Alpha', 2.0, 0.0), (""Jace, Vryn's Prodigy // Jace, Telepath Unbound"", 2.0, 0.0), ('Mayor of Avabruck // Howlpack Alpha', 2.0, 0.0), (""Ludevic's Test Subject // Ludevic's Abomination"", 2.0, 0.0), ('Curious Pair // Treats to Share', 2.0, 1.0), (""Jace, Vryn's Prodigy // Jace, Telepath Unbound"", 2.0, 0.0), ('Path of Mettle // Metzali, Tower of Triumph', 2.0, 0.0), (""Azor's Gateway // Sanctum of the Sun"", 2.0, 0.0), ('Mayor of Avabruck // Howlpack Alpha', 2.0, 0.0), (""Ludevic's Test Subject // Ludevic's Abomination"", 2.0, 0.0), ('Rimrock Knight // Boulder Rush', 2.0, 1.0), ('Curious Pair // Treats to Share', 2.0, 1.0), ('Smitten Swordmaster // Curry Favor', 2.0, 1.0), ('Embereth Shieldbreaker // Battle Display', 2.0, 1.0), ('Shepherd of the Flock // Usher to Safety', 2.0, 1.0), (""Jace, Vryn's Prodigy // Jace, Telepath Unbound"", 2.0, 0.0), ('Hanweir Militia Captain // Westvale Cult Leader', 2.0, 0.0), ('Thing in the Ice // Awoken Horror', 2.0, 0.0), ('Dowsing Dagger // Lost Vale', 2.0, 0.0), ('Thaumatic Compass // Spires of Orazca', 2.0, 0.0), ('Treasure Map // Treasure Cove', 2.0, 0.0), ('Search for Azcanta // Azcanta, the Sunken Ruin', 2.0, 0.0), (""Arguel's Blood Fast // Temple of Aclazotz"", 2.0, 0.0), ('Search for Azcanta // Azcanta, the Sunken Ruin', 2.0, 0.0), (""Arguel's Blood Fast // Temple of Aclazotz"", 2.0, 0.0), ('Dowsing Dagger // Lost Vale', 2.0, 0.0), ('Thaumatic Compass // Spires of Orazca', 2.0, 0.0), ('Treasure Map // Treasure Cove', 2.0, 0.0), ('Path of Mettle // Metzali, Tower of Triumph', 2.0, 0.0), (""Azor's Gateway // Sanctum of the Sun"", 2.0, 0.0), ('Hanweir Militia Captain // Westvale Cult Leader', 2.0, 0.0), ('Daring Sleuth // Bearer of Overwhelming Truths', 2.0, 0.0), ('Thing in the Ice // Awoken Horror', 2.0, 0.0), ('Heir of Falkenrath // Heir to the Night', 2.0, 0.0), ('Kessig Forgemaster // Flameheart Werewolf', 2.0, 0.0), ('Duskwatch Recruiter // Krallenhorde Howler', 2.0, 0.0), ('Hinterland Logger // Timber Shredder', 2.0, 0.0), ('Lambholt Pacifist // Lambholt Butcher', 2.0, 0.0), (""Arguel's Blood Fast // Temple of Aclazotz"", 2.0, 0.0), (""Jace, Vryn's Prodigy // Jace, Telepath Unbound"", 2.0, 0.0), ('Wax // Wane', 2.0, 1.0), ('Wax // Wane', 2.0, 1.0), ('Search for Azcanta // Azcanta, the Sunken Ruin', 2.0, 0.0), (""Arguel's Blood Fast // Temple of Aclazotz"", 2.0, 0.0), ('Dowsing Dagger // Lost Vale', 2.0, 0.0), ('Thaumatic Compass // Spires of Orazca', 2.0, 0.0), ('Treasure Map // Treasure Cove', 2.0, 0.0), ('Wolfbitten Captive // Krallenhorde Killer', 1.0, 0.0), ('Kessig Prowler // Sinuous Predator', 1.0, 0.0), ('Delver of Secrets // Insectile Aberration', 1.0, 0.0), ('Reckless Waif // Merciless Predator', 1.0, 0.0), ('Kytheon, Hero of Akros // Gideon, Battle-Forged', 1.0, 0.0), ('Kytheon, Hero of Akros // Gideon, Battle-Forged', 1.0, 0.0), ('Kytheon, Hero of Akros // Gideon, Battle-Forged', 1.0, 0.0), (""Legion's Landing // Adanto, the First Fort"", 1.0, 0.0), (""Legion's Landing // Adanto, the First Fort"", 1.0, 0.0), ('Town Gossipmonger // Incited Rabble', 1.0, 0.0), ('Skin Invasion // Skin Shedder', 1.0, 0.0), ('Village Messenger // Moonrise Intruder', 1.0, 0.0), ('Neglected Heirloom // Ashmouth Blade', 1.0, 0.0), ('Thraben Gargoyle // Stonewing Antagonizer', 1.0, 0.0), ('Delver of Secrets // Insectile Aberration', 1.0, 0.0), ('Kytheon, Hero of Akros // Gideon, Battle-Forged', 1.0, 0.0), (""Legion's Landing // Adanto, the First Fort"", 1.0, 0.0)]",Query results mismatch,0.020917916990583763
204,toxicology,True,simple,SELECT COUNT(*) FROM molecule WHERE molecule_id LIKE 'TR0%' AND label = '+',"[(29,)]","[(29,)]",Query executed successfully,9.479100117459893e-05
458,card_games,False,simple,"SELECT COUNT(DISTINCT artist) 
FROM cards 
WHERE ""borderColor"" = 'black' 
AND availability LIKE '%arena%' 
AND availability LIKE '%mtgo%'","[(4537,)]","[(338,)]",Query results mismatch,0.017469665996031836
615,codebase_community,False,moderate,SELECT (CAST((SELECT COUNT(DISTINCT u.Id) AS Total_Teenagers FROM users u WHERE u.Age >= 13 AND u.Age <= 19) AS FLOAT) / 409) * 100 AS Percentage_Teenagers_with_Organizer_Badge,"[(0.7334963325183375,)]","[(27.87286063569682,)]",Query results mismatch,0.006633291020989418
295,toxicology,False,simple,"SELECT COUNT(*) AS num_atoms
FROM atom a
JOIN molecule m ON a.molecule_id = m.molecule_id
WHERE a.element = 'H' AND m.label = '+'","[(1569,)]","[(0,)]",Query results mismatch,0.0008503750141244382
414,card_games,False,simple,,,,Query generation failed,
1236,thrombosis_prediction,False,challenging,"SELECT DISTINCT L.ID
FROM Laboratory AS L
JOIN Patient AS P ON L.ID = P.ID
WHERE P.SEX = 'F' 
AND strftime('%Y', 'now') - strftime('%Y', P.Birthday) >= 50
AND L.RBC < 4.2 OR L.RBC > 5.4","[(27654, '+'), (30609, '-'), (48473, '+'), (58139, '-'), (71417, '-'), (125619, '+'), (130370, '+'), (525998, '-'), (528900, '-'), (619178, '-'), (940737, '+'), (1043570, '-'), (1061042, '+'), (1078741, '+'), (1124385, '-'), (1130007, '+'), (1138737, '+'), (1180510, '-'), (1567380, '+'), (1617548, '+'), (1622238, ''), (1711181, '-'), (1755350, '-'), (1923445, '+'), (2256652, '-'), (2265184, '+'), (2276582, '-'), (2308236, '+'), (2315140, '+'), (2343945, '+'), (2355809, '-'), (2370675, '+'), (2395148, '+'), (2931207, '-'), (2933261, '+'), (3171569, '+'), (3174630, '+'), (3215988, '+'), (3310582, '-'), (3334746, '+'), (3413715, '+'), (3418071, '+'), (3545964, '-'), (3562042, '+'), (4416959, '-'), (4417978, '-'), (4424808, '+'), (4425292, '+'), (4466840, '-'), (4471732, '-'), (4632519, '-'), (4632548, '+'), (4632825, '-'), (4652830, '+'), (4790235, '+'), (4840422, '-'), (4843434, '+'), (4862013, '-'), (4878272, '+'), (4885128, '+'), (4894243, '+'), (4915498, '-'), (5060913, '+'), (5063068, '-'), (5117606, '-'), (5122312, '-'), (5126587, '+'), (5164396, '+'), (5186147, ''), (5295122, '+'), (5303768, '-'), (5405581, '+'), (5452747, '+')]","[(27654,), (30609,), (48473,), (52199,), (57266,), (58139,), (71417,), (81043,), (108788,), (122405,), (125619,), (128012,), (128041,), (130312,), (130370,), (283032,), (287122,), (287861,), (525998,), (528900,), (549080,), (619178,), (668398,), (933793,), (940737,), (1043570,), (1061042,), (1066089,), (1078741,), (1124385,), (1130007,), (1137040,), (1138737,), (1180510,), (1185720,), (1566837,), (1567380,), (1571569,), (1599448,), (1601259,), (1610433,), (1614305,), (1617548,), (1622238,), (1649286,), (1650222,), (1665879,), (1676756,), (1711181,), (1747469,), (1753732,), (1755350,), (1765494,), (1787610,), (1792502,), (1923445,), (1942213,), (1944121,), (1944990,), (2052784,), (2069395,), (2239659,), (2254340,), (2256652,), (2265184,), (2275169,), (2276582,), (2280686,), (2289306,), (2294836,), (2307640,), (2308236,), (2315140,), (2320830,), (2343945,), (2352510,), (2355809,), (2357140,), (2362973,), (2370675,), (2371753,), (2395148,), (2409841,), (2436816,), (2931207,), (2933261,), (2941804,), (2945819,), (2956679,), (2969103,), (3150681,), (3151150,), (3171569,), (3174630,), (3175008,), (3178036,), (3182521,), (3215988,), (3310582,), (3334746,), (3380563,), (3399558,), (3403961,), (3404010,), (3411647,), (3413715,), (3418071,), (3545964,), (3552067,), (3561498,), (3561717,), (3562042,), (3573437,), (3988637,), (4002938,), (4006679,), (4007151,), (4013163,), (4021070,), (4021155,), (4413615,), (4415406,), (4416959,), (4417978,), (4424808,), (4425292,), (4466420,), (4466840,), (4471732,), (4472142,), (4483771,), (4610872,), (4621629,), (4630092,), (4632421,), (4632519,), (4632548,), (4632825,), (4634342,), (4649885,), (4652830,), (4790235,), (4792723,), (4792941,), (4823634,), (4826981,), (4836155,), (4840422,), (4843434,), (4861720,), (4862013,), (4867438,), (4869782,), (4878168,), (4878272,), (4879930,), (4884792,), (4885128,), (4892768,), (4894243,), (4911483,), (4915498,), (4916710,), (4921572,), (4927381,), (5060913,), (5063068,), (5064814,), (5065022,), (5093742,), (5093771,), (5094107,), (5095373,), (5098691,), (5117606,), (5122312,), (5123360,), (5126587,), (5162169,), (5164396,), (5176234,), (5176755,), (5179581,), (5184284,), (5186147,), (5295122,), (5296268,), (5300381,), (5300929,), (5303768,), (5400658,), (5404650,), (5405581,), (5440535,), (5441886,), (5444801,), (5446559,), (5449095,), (5452503,), (5452747,)]",Query results mismatch,0.00868616602383554
935,formula_1,True,simple,"SELECT COUNT(*) 
FROM results 
WHERE raceId = (SELECT raceId 
                FROM races 
                WHERE year = 2008 AND name = 'Australian Grand Prix') 
AND statusId = 1","[(5,)]","[(5,)]",Query executed successfully,0.0009098330046981573
776,superhero,False,simple,,,,Query generation failed,
817,superhero,False,moderate,"SELECT superhero_name, race_id FROM superhero WHERE hair_colour_id = 13","[('Mutant',), ('-',), ('Strontian',)]","[('3-D Man', 1), ('Deathlok', 13), ('Franklin Storm', 1), ('Hobgoblin', 1), ('Plantman', 42), (""Ra's Al Ghul"", 24)]",Query results mismatch,7.091701263561845e-05
353,card_games,False,simple,"SELECT sets.name AS set_name, COUNT(cards.id) AS total_cards 
FROM sets 
JOIN cards ON sets.code = cards.setCode 
WHERE sets.name LIKE '%Italian%' 
GROUP BY sets.name","[('Tenth Edition', 508), ('Fourth Edition', 379), ('Fifth Dawn', 165), ('Fifth Edition', 460), ('Classic Sixth Edition', 351), ('Seventh Edition', 354), ('Eighth Edition', 361), ('Ninth Edition', 359), ('Aether Revolt', 197), ('Amonkhet', 287), ('Shards of Alara', 249), ('Apocalypse', 143), ('Alara Reborn', 145), ('Archenemy', 150), ('Battle for Zendikar', 299), ('Born of the Gods', 165), ('Betrayers of Kamigawa', 165), ('Battle Royale Box Set', 136), ('Beatdown Box Set', 90), ('Commander 2013', 356), ('Commander 2014', 337), ('Commander 2015', 342), ('Commander 2016', 351), ('Commander 2017', 309), ('Champions of Kamigawa', 307), ('Chronicles', 125), (""Commander's Arsenal"", 18), ('Commander 2011', 318), ('Conspiracy: Take the Crown', 222), ('Conspiracy', 210), ('Conflux', 145), ('Coldsnap', 155), ('Duel Decks: Elves vs. Goblins', 62), ('Duel Decks: Jace vs. Chandra', 64), ('Duel Decks: Divine vs. Demonic', 62), ('Duel Decks: Garruk vs. Liliana', 63), ('Duel Decks: Phyrexia vs. the Coalition', 71), ('Duel Decks: Elspeth vs. Tezzeret', 79), ('Duel Decks: Knights vs. Dragons', 81), ('Duel Decks: Ajani vs. Nicol Bolas', 80), ('Duel Decks: Venser vs. Koth', 77), ('Duel Decks: Izzet vs. Golgari', 90), ('Duel Decks: Sorin vs. Tibalt', 80), ('Duel Decks: Heroes vs. Monsters', 81), ('Duel Decks: Jace vs. Vraska', 88), ('Duel Decks: Speed vs. Cunning', 82), ('Duel Decks: Elspeth vs. Kiora', 67), ('Duel Decks: Zendikar vs. Eldrazi', 80), ('Duel Decks: Blessed vs. Cursed', 80), ('Duel Decks: Nissa vs. Ob Nixilis', 76), ('Dissension', 180), ('Deckmasters', 58), ('Dominaria', 280), ('Darksteel', 165), ('Dragons of Tarkir', 264), ('Throne of Eldraine', 397), ('Eternal Masters', 249), ('Eldritch Moon', 208), ('Eventide', 180), ('Exodus', 143), ('Fate Reforged', 185), ('Future Sight', 180), ('Guildpact', 165), ('Gatecrash', 249), ('Homelands', 140), ('Ice Age', 383), ('Ikoria: Lair of Behemoths', 388), ('Journey into Nyx', 165), ('Judgment', 143), ('Kaladesh', 278), ('Khans of Tarkir', 269), ('Legions', 145), ('Lorwyn', 301), ('Magic 2010', 249), ('Magic 2014', 249), ('Magic 2015', 284), ('Core Set 2020', 345), ('Core Set 2021', 397), ('Mirrodin Besieged', 155), ('Modern Masters 2015', 249), ('Modern Masters', 229), ('Mercadian Masques', 350), ('Morningtide', 150), ('Mirrodin', 306), ('Odyssey', 352), ('Oath of the Gatewatch', 187), ('Onslaught', 350), ('Magic Origins', 288), ('Planechase 2012', 156), ('Planechase Anthology', 156), ('Prophecy', 144), ('Premium Deck Series: Fire and Lightning', 34), ('Planar Chaos', 165), ('Ravnica: City of Guilds', 306), ('Rivals of Ixalan', 205), ('Ravnica Allegiance', 273), ('Return to Ravnica', 274), ('Scourge', 143), ('Shadowmoor', 302), ('Shadows over Innistrad', 302), ('Saviors of Kamigawa', 165), ('Stronghold', 143), ('Theros Beyond Death', 358), ('Theros', 249), ('Tempest', 350), ('Torment', 143), ('Tempest Remastered', 269), ('Time Spiral', 301), (""Urza's Destiny"", 143), (""Urza's Legacy"", 143), (""Urza's Saga"", 356), ('From the Vault: Exiled', 15), ('From the Vault: Relics', 15), ('From the Vault: Legends', 15), ('From the Vault: Realms', 15), ('From the Vault: Twenty', 20), ('From the Vault: Annihilation', 15), ('From the Vault: Angels', 15), ('From the Vault: Lore', 16), ('War of the Spark', 311), ('Weatherlight', 167)]",[],Query results mismatch,0.029501666023861617
1062,european_football_2,True,moderate,"SELECT DISTINCT p.player_name 
FROM Player p 
JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id 
WHERE pa.overall_rating > 80 
AND pa.date BETWEEN '2008-01-01' AND '2010-12-31'","[('Aaron Lennon',), ('Abdulkader Keita',), ('Adam Johnson',), ('Adrian Mutu',), ('Adriano',), ('Afonso Alves,24',), ('Aiden McGeady',), ('Aiyegbeni Yakubu',), ('Albert Riera',), ('Albert Streit',), ('Alberto Aquilani',), ('Alberto Gilardino',), ('Aleksandr Hleb',), ('Alessandro Del Piero',), ('Alessandro Gamberini',), ('Alessandro Nesta',), ('Alex Song',), ('Alex',), ('Alexander Frei',), ('Alexandr Kerzhakov',), ('Alexandre Pato',), ('Alou Diarra',), ('Alvaro Arbeloa',), ('Alvaro Negredo',), ('Amauri',), ('Anatoli Tymoschuk',), ('Anderson',), ('Andre-Pierre Gignac',), ('Andrea Barzagli',), ('Andrea Pirlo',), ('Andres Guardado',), ('Andres Iniesta',), ('Andres Palop',), ('Andrey Arshavin',), ('Angel Di Maria',), ('Angelo Palombo',), ('Antonio Cassano',), ('Antonio Di Natale',), ('Antonio Valencia',), ('Arda Turan',), ('Arjen Robben',), ('Arne Friedrich',), ('Artur Boruc',), ('Ashley Cole',), ('Ashley Young',), ('Bacary Sagna',), ('Bafetimbi Gomis',), ('Bastian Schweinsteiger',), ('Bogdan Lobont',), ('Brad Friedel',), ('Branislav Ivanovic',), ('Brede Hangeland',), ('Bruno Alves',), ('Bryan Ruiz',), ('Carles Puyol',), ('Carlos Cuellar',), ('Carlos Henrique',), ('Carlos Kameni',), ('Carlos Marchena',), ('Carlos Salcido',), ('Carlos Tevez',), ('Cedric Carrasso',), ('Cesc Fabregas',), ('Christian Abbiati',), ('Christian Daniel Ledesma',), ('Christian Poulsen',), ('Clarence Seedorf',), ('Claudio Pizarro',), ('Craig Bellamy',), ('Craig Gordon',), ('Cris',), ('Cristian Chivu',), ('Cristian Rodriguez',), ('Cristiano Lucarelli',), ('Cristiano Ronaldo',), ('Cristiano Zanetti',), ('Daniel Agger',), ('Daniel Alves',), ('Daniel Guiza',), ('Daniel van Buyten',), ('Daniele De Rossi',), ('Darren Bent',), ('Darren Fletcher',), ('David Beckham',), ('David Bentley',), ('David Di Michele',), ('David James',), ('David Luiz',), ('David Pizarro',), ('David Silva',), ('David Trezeguet',), ('David Villa',), ('Dean Ashton',), ('Deco',), ('Dejan Stankovic',), ('Didier Drogba',), ('Didier Zokora',), ('Diego Alves',), ('Diego Benaglio',), ('Diego Forlan',), ('Diego Godin',), ('Diego Lopez',), ('Diego Lugano',), ('Diego Milito',), ('Diego',), ('Dimitar Berbatov',), ('Dirk Kuyt',), ('Doni',), ('Eden Hazard',), ('Edin Dzeko',), ('Eduardo',), ('Edwin van der Sar',), ('Elano',), ('Emmanuel Adebayor',), ('Eric Abidal',), ('Esteban Cambiasso',), ('Ever Banega',), ('Ezequiel Garay',), ('Ezequiel Lavezzi',), ('Fabio Cannavaro',), ('Fabio Quagliarella',), ('Fabricio Coloccini',), ('Fabrizio Miccoli',), ('Federico Marchetti',), ('Felipe Melo',), ('Fernando Cavenaghi',), ('Fernando Llorente',), ('Fernando Meira',), ('Fernando Morientes',), ('Fernando Torres',), ('Filipe Luis',), ('Florent Malouda',), ('Francesco Totti',), ('Franck Ribery',), ('Frank Lampard',), ('Frank Rost',), ('Frederic Kanoute',), ('Gabriel Agbonlahor',), ('Gabriel Milito',), ('Gael Clichy',), (""Gaetano D'Agostino"",), ('Gareth Bale',), ('Gareth Barry',), ('Gennaro Gattuso',), ('Gerard Pique',), ('Geromel',), ('Giampaolo Pazzini',), ('Gianluca Zambrotta',), ('Gianluigi Buffon',), ('Gilberto',), ('Giorgio Chiellini',), ('Giuseppe Rossi',), ('Glen Johnson',), ('Gokhan Inler',), ('Gonzalo Higuain',), ('Goran Pandev',), ('Gorka Iraizoz Moreno',), ('Grafite',), ('Guillermo Ochoa',), ('Hamit Altintop',), ('Heiko Westermann',), ('Helton',), ('Hernan Crespo',), ('Hernanes',), ('Heurelho Gomes',), ('Hugo Lloris',), ('Hulk',), ('Ibrahim Afellay',), ('Ibson',), ('Iker Casillas',), ('Ireneusz Jelen',), ('Ivan Cordoba',), ('Ivan de la Pena',), ('Ivica Olic',), ('Jaime Gavilan',), ('James Milner',), ('Jamie Carragher',), ('Jaroslav Drobny',), ('Javier Mascherano',), ('Javier Saviola',), ('Javier Zanetti',), ('Jean Makoun',), ('Jefferson Farfan',), ('Jeremy Menez',), ('Jeremy Toulalan',), ('Jermain Defoe',), ('Jerome Rothen',), ('Jesus Navas',), ('Jimmy Briand',), ('Jo',), ('Joao Moutinho',), ('Joaquin',), ('Joe Cole',), ('Joe Hart',), ('John Carew',), ('John Obi Mikel',), ('John Terry',), ('Joleon Lescott',), ('Jonathan Woodgate',), ('Jose Antonio Reyes',), ('Jose Bosingwa',), ('Jose Maria Guti',), ('Joseph Yobo',), ('Josip Simunic',), ('Josue',), ('Juan Mata',), ('Juan Vargas',), ('Juan',), ('Julien Escude',), ('Julio Baptista',), ('Julio Cesar',), ('Kaka',), ('Kakha Kaladze',), ('Karim Benzema',), ('Kevin Kuranyi',), ('Klaas Jan Huntelaar',), ('Kolo Toure',), ('Landon Donovan',), ('Lassana Diarra',), ('Ledley King',), ('Leighton Baines',), ('Liedson',), ('Lionel Messi',), ('Lisandro Lopez',), ('Lorik Cana',), ('Louis Saha',), ('Luca Toni',), ('Lucas Barrios',), ('Lucho Gonzalez',), ('Lucio',), ('Luis Fabiano',), ('Luis Suarez',), ('Luisao',), ('Luka Modric',), ('Lukas Podolski',), ('Maarten Stekelenburg',), ('Mahamadou Diarra',), ('Maicon',), ('Mamadou Niang',), ('Mancini',), ('Maniche',), ('Manuel Almunia',), ('Manuel Neuer',), ('Marc Planus',), ('Marcelo Jose Bordon',), ('Marco Borriello',), ('Marco Materazzi',), ('Marcos Senna',), ('Marek Hamsik',), ('Mario Balotelli',), ('Mario Gomez',), ('Mark van Bommel',), ('Marko Marin',), ('Marko Pantelic',), ('Marouane Chamakh',), ('Marouane Fellaini',), ('Martin Caceres',), ('Martin Demichelis',), ('Martin Laursen',), ('Martin Petrov',), ('Martin Skrtel',), ('Massimo Ambrosini',), ('Mathieu Flamini',), ('Matteo Sereni',), ('Matthew Upson',), ('Mauro Camoranesi',), ('Mauro Zarate',), ('Maxi Rodriguez',), ('Maxwell',), ('Mesut Oezil',), ('Micah Richards',), ('Michael Ballack',), ('Michael Carrick',), ('Michael Essien',), ('Michael Owen',), ('Michel Bastos',), ('Mickael Landreau',), ('Mikel Arteta',), ('Milos Krasic',), ('Mirko Vucinic',), ('Miroslav Klose',), ('Mladen Petric',), ('Mohamed Lamine Sissoko',), ('Mounir El Hamdaoui',), ('Naldo',), ('Nani',), ('Nemanja Vidic',), ('Nery Castillo',), ('Nicola Legrottaglie',), ('Nicolas Anelka',), ('Nihat Kahveci',), ('Niko Kranjcar',), ('Obafemi Martins',), ('Oscar Cardozo',), ('Owen Hargreaves',), ('Pablo Aimar',), ('Pablo Hernandez',), ('Patrice Evra',), ('Patrick Helmes',), ('Patrick Vieira',), ('Paul Scholes',), ('Pavel Nedved',), ('Pavel Pardo',), ('Pavel Pogrebnyak',), ('Pedro Munitis',), ('Pedro Rodriguez',), ('Pepe Reina',), ('Pepe',), ('Per Mertesacker',), ('Petr Cech',), ('Phil Jagielka',), ('Philipp Lahm',), ('Phillippe Mexes',), ('Piotr Trochowski',), ('Radamel Falcao',), ('Rafael Marquez',), ('Rafael van der Vaart',), ('Rafinha',), ('Raul Albiol',), ('Raul Meireles',), ('Raul Tamudo',), ('Raul',), ('Rene Adler',), ('Ricardo Carvalho',), ('Ricardo Quaresma',), ('Riccardo Montolivo',), ('Rio Ferdinand',), ('Robbie Keane',), ('Robert Enke,30',), ('Robert Green',), ('Robert Pires',), ('Roberto Abbondanzieri',), ('Roberto Soldado',), ('Robin van Persie',), ('Robinho',), ('Rodrigo Taddei',), ('Roman Pavlyuchenko',), ('Ronaldinho',), ('Roque Santa Cruz',), ('Roy Makaay',), ('Ruud van Nistelrooy',), ('Ryan Babel',), ('Ryan Giggs',), ('Salomon Kalou',), ('Samir Nasri',), (""Samuel Eto'o"",), ('Santi Cazorla',), ('Sebastian Frey',), ('Sebastian Giovinco',), ('Sebastian Meoli',), ('Sebastien Puygrenier',), ('Sebastien Squillaci',), ('Sergio Aguero',), ('Sergio Asenjo',), ('Sergio Busquets',), ('Sergio Floccari',), ('Sergio Ramos',), ('Seydou Keita',), ('Shaun Wright-Phillips',), ('Shay Given',), ('Shunsuke Nakamura',), ('Sidney Govou',), ('Simao',), ('Simon Rolfes',), ('Simone Perrotta',), ('Souleymane Diawara',), ('Stefan Kiessling',), ('Stephane Sessegnon',), ('Stephen Ireland',), ('Steve Mandanda',), ('Steven Gerrard',), ('Steven Naismith',), ('Stewart Downing',), ('Stiliyan Petrov',), ('Stipe Pletikosa',), ('Sulley Ali Muntari',), ('Theo Walcott',), ('Thiago Motta',), ('Thiago Silva',), ('Thierry Henry',), ('Thomas Vermaelen',), ('Tim Cahill',), ('Tim Howard',), ('Tim Wiese',), ('Timo Hildebrand',), ('Tom Huddlestone',), ('Tomas Rosicky',), ('Tomas Ujfalusi',), ('Tommaso Rocchi',), ('Torsten Frings',), ('Vagner Love',), ('Valerien Ismael',), ('Vedran Corluka',), ('Vicente',), ('Victor Valdes',), ('Vincenzo Iaquinta',), ('Walter Samuel',), ('Wayne Rooney',), ('Wendel',), ('Wesley Sneijder',), ('William Gallas',), ('Xabi Alonso',), ('Xavi Hernandez',), ('Yaya Toure',), ('Yoann Gourcuff',), ('Yuri Zhirkov',), ('Ze Roberto',), ('Zlatan Ibrahimovic',), ('Zvjezdan Misimovic',)]","[('Aaron Lennon',), ('Abdulkader Keita',), ('Adam Johnson',), ('Adrian Mutu',), ('Adriano',), ('Afonso Alves,24',), ('Aiden McGeady',), ('Aiyegbeni Yakubu',), ('Albert Riera',), ('Albert Streit',), ('Alberto Aquilani',), ('Alberto Gilardino',), ('Aleksandr Hleb',), ('Alessandro Del Piero',), ('Alessandro Gamberini',), ('Alessandro Nesta',), ('Alex Song',), ('Alex',), ('Alexander Frei',), ('Alexandr Kerzhakov',), ('Alexandre Pato',), ('Alou Diarra',), ('Alvaro Arbeloa',), ('Alvaro Negredo',), ('Amauri',), ('Anatoli Tymoschuk',), ('Anderson',), ('Andre-Pierre Gignac',), ('Andrea Barzagli',), ('Andrea Pirlo',), ('Andres Guardado',), ('Andres Iniesta',), ('Andres Palop',), ('Andrey Arshavin',), ('Angel Di Maria',), ('Angelo Palombo',), ('Antonio Cassano',), ('Antonio Di Natale',), ('Antonio Valencia',), ('Arda Turan',), ('Arjen Robben',), ('Arne Friedrich',), ('Artur Boruc',), ('Ashley Cole',), ('Ashley Young',), ('Bacary Sagna',), ('Bafetimbi Gomis',), ('Bastian Schweinsteiger',), ('Bogdan Lobont',), ('Brad Friedel',), ('Branislav Ivanovic',), ('Brede Hangeland',), ('Bruno Alves',), ('Bryan Ruiz',), ('Carles Puyol',), ('Carlos Cuellar',), ('Carlos Henrique',), ('Carlos Kameni',), ('Carlos Marchena',), ('Carlos Salcido',), ('Carlos Tevez',), ('Cedric Carrasso',), ('Cesc Fabregas',), ('Christian Abbiati',), ('Christian Daniel Ledesma',), ('Christian Poulsen',), ('Clarence Seedorf',), ('Claudio Pizarro',), ('Craig Bellamy',), ('Craig Gordon',), ('Cris',), ('Cristian Chivu',), ('Cristian Rodriguez',), ('Cristiano Lucarelli',), ('Cristiano Ronaldo',), ('Cristiano Zanetti',), ('Daniel Agger',), ('Daniel Alves',), ('Daniel Guiza',), ('Daniel van Buyten',), ('Daniele De Rossi',), ('Darren Bent',), ('Darren Fletcher',), ('David Beckham',), ('David Bentley',), ('David Di Michele',), ('David James',), ('David Luiz',), ('David Pizarro',), ('David Silva',), ('David Trezeguet',), ('David Villa',), ('Dean Ashton',), ('Deco',), ('Dejan Stankovic',), ('Didier Drogba',), ('Didier Zokora',), ('Diego Alves',), ('Diego Benaglio',), ('Diego Forlan',), ('Diego Godin',), ('Diego Lopez',), ('Diego Lugano',), ('Diego Milito',), ('Diego',), ('Dimitar Berbatov',), ('Dirk Kuyt',), ('Doni',), ('Eden Hazard',), ('Edin Dzeko',), ('Eduardo',), ('Edwin van der Sar',), ('Elano',), ('Emmanuel Adebayor',), ('Eric Abidal',), ('Esteban Cambiasso',), ('Ever Banega',), ('Ezequiel Garay',), ('Ezequiel Lavezzi',), ('Fabio Cannavaro',), ('Fabio Quagliarella',), ('Fabricio Coloccini',), ('Fabrizio Miccoli',), ('Federico Marchetti',), ('Felipe Melo',), ('Fernando Cavenaghi',), ('Fernando Llorente',), ('Fernando Meira',), ('Fernando Morientes',), ('Fernando Torres',), ('Filipe Luis',), ('Florent Malouda',), ('Francesco Totti',), ('Franck Ribery',), ('Frank Lampard',), ('Frank Rost',), ('Frederic Kanoute',), ('Gabriel Agbonlahor',), ('Gabriel Milito',), ('Gael Clichy',), (""Gaetano D'Agostino"",), ('Gareth Bale',), ('Gareth Barry',), ('Gennaro Gattuso',), ('Gerard Pique',), ('Geromel',), ('Giampaolo Pazzini',), ('Gianluca Zambrotta',), ('Gianluigi Buffon',), ('Gilberto',), ('Giorgio Chiellini',), ('Giuseppe Rossi',), ('Glen Johnson',), ('Gokhan Inler',), ('Gonzalo Higuain',), ('Goran Pandev',), ('Gorka Iraizoz Moreno',), ('Grafite',), ('Guillermo Ochoa',), ('Hamit Altintop',), ('Heiko Westermann',), ('Helton',), ('Hernan Crespo',), ('Hernanes',), ('Heurelho Gomes',), ('Hugo Lloris',), ('Hulk',), ('Ibrahim Afellay',), ('Ibson',), ('Iker Casillas',), ('Ireneusz Jelen',), ('Ivan Cordoba',), ('Ivan de la Pena',), ('Ivica Olic',), ('Jaime Gavilan',), ('James Milner',), ('Jamie Carragher',), ('Jaroslav Drobny',), ('Javier Mascherano',), ('Javier Saviola',), ('Javier Zanetti',), ('Jean Makoun',), ('Jefferson Farfan',), ('Jeremy Menez',), ('Jeremy Toulalan',), ('Jermain Defoe',), ('Jerome Rothen',), ('Jesus Navas',), ('Jimmy Briand',), ('Jo',), ('Joao Moutinho',), ('Joaquin',), ('Joe Cole',), ('Joe Hart',), ('John Carew',), ('John Obi Mikel',), ('John Terry',), ('Joleon Lescott',), ('Jonathan Woodgate',), ('Jose Antonio Reyes',), ('Jose Bosingwa',), ('Jose Maria Guti',), ('Joseph Yobo',), ('Josip Simunic',), ('Josue',), ('Juan Mata',), ('Juan Vargas',), ('Juan',), ('Julien Escude',), ('Julio Baptista',), ('Julio Cesar',), ('Kaka',), ('Kakha Kaladze',), ('Karim Benzema',), ('Kevin Kuranyi',), ('Klaas Jan Huntelaar',), ('Kolo Toure',), ('Landon Donovan',), ('Lassana Diarra',), ('Ledley King',), ('Leighton Baines',), ('Liedson',), ('Lionel Messi',), ('Lisandro Lopez',), ('Lorik Cana',), ('Louis Saha',), ('Luca Toni',), ('Lucas Barrios',), ('Lucho Gonzalez',), ('Lucio',), ('Luis Fabiano',), ('Luis Suarez',), ('Luisao',), ('Luka Modric',), ('Lukas Podolski',), ('Maarten Stekelenburg',), ('Mahamadou Diarra',), ('Maicon',), ('Mamadou Niang',), ('Mancini',), ('Maniche',), ('Manuel Almunia',), ('Manuel Neuer',), ('Marc Planus',), ('Marcelo Jose Bordon',), ('Marco Borriello',), ('Marco Materazzi',), ('Marcos Senna',), ('Marek Hamsik',), ('Mario Balotelli',), ('Mario Gomez',), ('Mark van Bommel',), ('Marko Marin',), ('Marko Pantelic',), ('Marouane Chamakh',), ('Marouane Fellaini',), ('Martin Caceres',), ('Martin Demichelis',), ('Martin Laursen',), ('Martin Petrov',), ('Martin Skrtel',), ('Massimo Ambrosini',), ('Mathieu Flamini',), ('Matteo Sereni',), ('Matthew Upson',), ('Mauro Camoranesi',), ('Mauro Zarate',), ('Maxi Rodriguez',), ('Maxwell',), ('Mesut Oezil',), ('Micah Richards',), ('Michael Ballack',), ('Michael Carrick',), ('Michael Essien',), ('Michael Owen',), ('Michel Bastos',), ('Mickael Landreau',), ('Mikel Arteta',), ('Milos Krasic',), ('Mirko Vucinic',), ('Miroslav Klose',), ('Mladen Petric',), ('Mohamed Lamine Sissoko',), ('Mounir El Hamdaoui',), ('Naldo',), ('Nani',), ('Nemanja Vidic',), ('Nery Castillo',), ('Nicola Legrottaglie',), ('Nicolas Anelka',), ('Nihat Kahveci',), ('Niko Kranjcar',), ('Obafemi Martins',), ('Oscar Cardozo',), ('Owen Hargreaves',), ('Pablo Aimar',), ('Pablo Hernandez',), ('Patrice Evra',), ('Patrick Helmes',), ('Patrick Vieira',), ('Paul Scholes',), ('Pavel Nedved',), ('Pavel Pardo',), ('Pavel Pogrebnyak',), ('Pedro Munitis',), ('Pedro Rodriguez',), ('Pepe Reina',), ('Pepe',), ('Per Mertesacker',), ('Petr Cech',), ('Phil Jagielka',), ('Philipp Lahm',), ('Phillippe Mexes',), ('Piotr Trochowski',), ('Radamel Falcao',), ('Rafael Marquez',), ('Rafael van der Vaart',), ('Rafinha',), ('Raul Albiol',), ('Raul Meireles',), ('Raul Tamudo',), ('Raul',), ('Rene Adler',), ('Ricardo Carvalho',), ('Ricardo Quaresma',), ('Riccardo Montolivo',), ('Rio Ferdinand',), ('Robbie Keane',), ('Robert Enke,30',), ('Robert Green',), ('Robert Pires',), ('Roberto Abbondanzieri',), ('Roberto Soldado',), ('Robin van Persie',), ('Robinho',), ('Rodrigo Taddei',), ('Roman Pavlyuchenko',), ('Ronaldinho',), ('Roque Santa Cruz',), ('Roy Makaay',), ('Ruud van Nistelrooy',), ('Ryan Babel',), ('Ryan Giggs',), ('Salomon Kalou',), ('Samir Nasri',), (""Samuel Eto'o"",), ('Santi Cazorla',), ('Sebastian Frey',), ('Sebastian Giovinco',), ('Sebastian Meoli',), ('Sebastien Puygrenier',), ('Sebastien Squillaci',), ('Sergio Aguero',), ('Sergio Asenjo',), ('Sergio Busquets',), ('Sergio Floccari',), ('Sergio Ramos',), ('Seydou Keita',), ('Shaun Wright-Phillips',), ('Shay Given',), ('Shunsuke Nakamura',), ('Sidney Govou',), ('Simao',), ('Simon Rolfes',), ('Simone Perrotta',), ('Souleymane Diawara',), ('Stefan Kiessling',), ('Stephane Sessegnon',), ('Stephen Ireland',), ('Steve Mandanda',), ('Steven Gerrard',), ('Steven Naismith',), ('Stewart Downing',), ('Stiliyan Petrov',), ('Stipe Pletikosa',), ('Sulley Ali Muntari',), ('Theo Walcott',), ('Thiago Motta',), ('Thiago Silva',), ('Thierry Henry',), ('Thomas Vermaelen',), ('Tim Cahill',), ('Tim Howard',), ('Tim Wiese',), ('Timo Hildebrand',), ('Tom Huddlestone',), ('Tomas Rosicky',), ('Tomas Ujfalusi',), ('Tommaso Rocchi',), ('Torsten Frings',), ('Vagner Love',), ('Valerien Ismael',), ('Vedran Corluka',), ('Vicente',), ('Victor Valdes',), ('Vincenzo Iaquinta',), ('Walter Samuel',), ('Wayne Rooney',), ('Wendel',), ('Wesley Sneijder',), ('William Gallas',), ('Xabi Alonso',), ('Xavi Hernandez',), ('Yaya Toure',), ('Yoann Gourcuff',), ('Yuri Zhirkov',), ('Ze Roberto',), ('Zlatan Ibrahimovic',), ('Zvjezdan Misimovic',)]",Query executed successfully,0.024810792005155236
1501,debit_card_specializing,False,moderate,"SELECT DISTINCT Country 
FROM gasstations 
WHERE GasStationID IN (
    SELECT GasStationID 
    FROM transactions_1k 
    WHERE Date >= '2013-06-01' AND Date < '2013-07-01'
)","[('CZE',), ('SVK',)]",[],Query results mismatch,9.320801473222673e-05
159,financial,False,simple,SELECT * FROM trans WHERE account_id = 3356 AND type = 'VYBER',"[(816173,), (816174,), (816175,), (816181,), (816185,), (816186,), (816187,), (816188,), (816189,), (816190,), (816191,), (816192,), (816193,), (816194,), (816195,), (816196,), (816203,), (816216,), (816217,), (816218,), (816219,), (816220,), (816221,), (816222,), (816223,), (816224,), (816225,), (816226,), (816227,), (816228,), (816229,), (816230,), (816231,), (816232,), (816233,), (816234,), (816235,), (816236,), (816237,), (816238,), (816239,), (816240,), (816241,), (816242,), (816243,), (816244,), (816245,), (816246,), (816247,), (816248,), (816249,), (816250,), (816251,), (816252,), (816253,), (816254,), (816255,), (816256,), (816257,), (816258,), (816259,), (816260,), (816261,), (816262,), (816263,), (816264,), (816265,), (816266,), (816267,), (816268,), (816269,), (816270,), (816271,), (816272,), (816273,), (816274,), (816275,), (816276,), (816278,), (816279,), (816280,), (816281,), (816282,), (816283,), (816284,), (816285,), (816286,), (816288,), (816289,), (816290,), (816291,), (816292,), (816293,), (816294,), (816295,), (816296,), (816297,), (816298,), (816299,), (816300,), (816301,), (816302,), (816303,), (816304,), (816305,), (816306,), (816307,), (816308,), (816309,), (816310,), (816311,), (816312,), (816313,), (816314,), (816315,), (816316,), (816317,), (816318,), (816319,), (816320,), (816321,), (816322,), (816324,), (816325,), (816326,), (816327,), (816328,), (816329,), (816330,), (816331,), (816332,), (816333,), (816334,), (816335,), (816336,), (816337,), (816338,), (816340,), (816341,), (816342,)]",[],Query results mismatch,0.02959408299648203
435,card_games,False,simple,,,,Query generation failed,
892,formula_1,False,moderate,"SELECT drivers.forename || ' ' || drivers.surname AS full_name, driverStandings.points 
FROM drivers 
JOIN driverStandings ON drivers.driverId = driverStandings.driverId 
ORDER BY driverStandings.points DESC 
LIMIT 1","[('Sebastian', 'Vettel', 397.0)]","[('Sebastian Vettel', 397.0)]",Query results mismatch,0.007511208998039365
748,superhero,False,simple,SELECT colour FROM colour WHERE id = 9,"[('Blue',)]","[('Brown',)]",Query results mismatch,4.1624996811151505e-05
192,financial,False,moderate,"SELECT AVG(l.amount) AS average_loan_amount
FROM loan l
WHERE l.status = 'A'
AND EXISTS (
    SELECT 1
    FROM trans t
    WHERE t.operation = 'VYDAJ' -- Statement issuance operation
    AND t.date > l.date
)",,,Invalid query generated,
678,codebase_community,False,simple,"SELECT Id, Title FROM posts WHERE OwnerUserId = 8 ORDER BY ViewCount DESC LIMIT 1","[(109, ""Power of Holm's multiple comparison testing compared to others"")]","[(36, 'Examples for teaching: Correlation does not mean causation')]",Query results mismatch,0.028696958994260058
1224,thrombosis_prediction,False,simple,"SELECT Laboratory.ID, Patient.SEX, Patient.Birthday, MAX(Laboratory.""T-BIL"") AS Max_Bilirubin
FROM Laboratory
JOIN Patient ON Laboratory.ID = Patient.ID","[(7.9, 2931207, 'F', '1959-01-05')]","[(2931207, 'F', '1959-01-05', 7.9)]",Query results mismatch,0.0020126250165048987
1177,thrombosis_prediction,False,simple,,,,Query generation failed,
31,california_schools,False,moderate,,,,Query generation failed,
512,card_games,False,simple,"SELECT COUNT(*) 
FROM cards 
WHERE duelDeck = 'A' AND power = 'Unknown' AND hasFoil = 0","[(416,)]","[(0,)]",Query results mismatch,0.022633790998952463
202,toxicology,False,simple,SELECT COUNT(*) FROM bond WHERE bond_type = 'triple',"[(6,)]","[(0,)]",Query results mismatch,0.0013161250099074095
1226,thrombosis_prediction,False,simple,"SELECT L.ID, L.""T-CHO"" 
FROM Laboratory L 
JOIN Patient P ON L.ID = P.ID 
WHERE P.Birthday IS NOT NULL 
ORDER BY P.Birthday ASC, L.""T-CHO"" DESC 
LIMIT 1","[(1185720, 568)]","[(125619, 239)]",Query results mismatch,0.0037139579944778234
893,formula_1,False,simple,"SELECT drivers.forename, drivers.surname, results.points 
FROM drivers 
JOIN results ON drivers.driverId = results.driverId 
WHERE results.raceId = 18 
ORDER BY results.points DESC 
LIMIT 3","[('Sebastian', 'Vettel', 43.0), ('Lewis', 'Hamilton', 43.0), ('Max', 'Verstappen', 25.0)]","[('Lewis', 'Hamilton', 10.0), ('Nick', 'Heidfeld', 8.0), ('Nico', 'Rosberg', 6.0)]",Query results mismatch,0.001408375013852492
579,codebase_community,False,simple,SELECT Text FROM comments WHERE PostId = 3,"[('What other variants?  It might be helpful to tighten up this question a little (more specificity).',), ('Right; it is just one variant among others.',), (""OK, I'll ask for comparison to adaboost since that is perhaps the best known."",), ('@kwak: Could you please delete your comment and post it as an answer so it can be accepted?',)]","[(""Could be a poster child fo argumentative and subjective.  At the least, need to define 'valuable'."",), ('Define ""valuable""...',), ('Maybe the focus shouldn\'t be on ""valuable"" but rather ""pros"" and ""cons"" of each project?',), ('Or maybe even ""How X will help you get Y done faster/cheaper and kill the germs that cause bad breath.""',)]",Query results mismatch,0.01360945901251398
879,formula_1,False,moderate,SELECT Drivers.nationality FROM Drivers JOIN LapTimes ON Drivers.driverId = LapTimes.driverId WHERE LapTimes.milliseconds = (SELECT MIN(milliseconds) FROM LapTimes),"[('Italian',)]","[('British',)]",Query results mismatch,0.05085120798321441
948,formula_1,False,simple,SELECT MAX(points) FROM results,"[(497.0,)]","[(50.0,)]",Query results mismatch,0.001100791007047519
